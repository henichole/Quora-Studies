Authors,Time,Questions,Answers,api_response,originality_score
Sofia Korkala,6y,What are the best ways to learn self discipline?,"Running.

Have you ever met a person who would go running every morning at 5.30 and wouldn’t have their life straight?

Running reflects to accomplishing goals.

You keep your eyes constantly on the goal.

You face obstacles on your way.

Your hunger for more grows as you progress.

But most importantly, you have to have discipline to make it to the goal.

Not to stop running.

Having the taste of blood in your mouth but still not stopping.

Having the stamina and willpower to tell your mind that this all is just a feeling.

Go for a run and don’t stop before you are back home.

Keep telling yourself that it’s just one more step.

(Inspired by an answer by the amazing William Beteet III)

To buy an article, story, or translation from me, check out the link to my Fiverr profile on my profile Sofia Korkala.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/1mxvuhjw09zcdare', 'title': 'What are the best ways to learn self discipline?', 'score': {'original': 0.9994, 'ai': 0.0006}, 'blocks': [{'text': 'Running.\n\nHave you ever met a person who would go running every morning at 5.30 and wouldn’t have their life straight?\n\nRunning reflects to accomplishing goals.\n\nYou keep your eyes constantly on the goal.\n\nYou face obstacles on your way.\n\nYour hunger for more grows as you progress.\n\nBut most importantly, you have to have discipline to make it to the goal.\n\nNot to stop running.\n\nHaving the taste of blood in your mouth but still not stopping.\n\nHaving the stamina and willpower to tell your mind that this all is just a feeling.\n\nGo for a run and don’t stop before you are back home.\n\nKeep telling yourself that it’s just one more step.\n\n(Inspired by an answer by the amazing William Beteet III)\n\nTo buy an article, story, or translation from me, check out the link to my Fiverr profile on my profile Sofia Korkala.', 'result': {'fake': 0.0006, 'real': 0.9994}, 'status': 'success'}], 'credits_used': 2, 'credits': 1983659, 'subscription': 0, 'content': 'Running.\n\nHave you ever met a person who would go running every morning at 5.30 and wouldn’t have their life straight?\n\nRunning reflects to accomplishing goals.\n\nYou keep your eyes constantly on the goal.\n\nYou face obstacles on your way.\n\nYour hunger for more grows as you progress.\n\nBut most importantly, you have to have discipline to make it to the goal.\n\nNot to stop running.\n\nHaving the taste of blood in your mouth but still not stopping.\n\nHaving the stamina and willpower to tell your mind that this all is just a feeling.\n\nGo for a run and don’t stop before you are back home.\n\nKeep telling yourself that it’s just one more step.\n\n(Inspired by an answer by the amazing William Beteet III)\n\nTo buy an article, story, or translation from me, check out the link to my Fiverr profile on my profile Sofia Korkala.', 'aiModelVersion': '1'}",0.9994
Krishna Suryakanth,Updated 6y,Which app changed your life?,"The app called 1mg has changed my life.

Currently in my home my grandma has heart disease, my father is suffering from liver disease and mother always has knee pain.

Sadly we spend half of the salary on medicine.

what does this app do?

shows content of the medicine.
shows the subsitute of medicine
shows price so that you can compare between substitutes.
clearly mentions how the medicine work.
free online consultation.
shows the precautions after and before taking medicines. ex dont drive after taking the tablet etc
mentions who should not consume the medicine ex pregnant women, lactating women, children of particular age.
can buy online at discounted rates.
book lab test and sample collection from home.
shows side effects.
Find cheaper substitutes.
can buy patanjali products too.
set reminders for medicine.

we can call this app as Wikipedia of medicine.

Below is the screen shot

how this app helped me in other ways.

Due to sloppy handwriting of doctor two times the medical gave me wrong tablet, but 1mg was at rescue.

We found out doc was prescribing wantingly high cost branded medicine.

we also found doc was prescribing unnecessary high cost vitamin supplements.

Most wanted app in todays world.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/38avgkxhfw1bl7yc', 'title': 'Which app changed your life?', 'score': {'original': 0.9998, 'ai': 0.0002}, 'blocks': [{'text': 'The app called 1mg has changed my life.\n\nCurrently in my home my grandma has heart disease, my father is suffering from liver disease and mother always has knee pain.\n\nSadly we spend half of the salary on medicine.\n\nwhat does this app do?\n\nshows content of the medicine.\nshows the subsitute of medicine\nshows price so that you can compare between substitutes.\nclearly mentions how the medicine work.\nfree online consultation.\nshows the precautions after and before taking medicines. ex dont drive after taking the tablet etc\nmentions who should not consume the medicine ex pregnant women, lactating women, children of particular age.\ncan buy online at discounted rates.\nbook lab test and sample collection from home.\nshows side effects.\nFind cheaper substitutes.\ncan buy patanjali products too.\nset reminders for medicine.\n\nwe can call this app as Wikipedia of medicine.\n\nBelow is the screen shot\n\nhow this app helped me in other ways.\n\nDue to sloppy handwriting of doctor two times the medical gave me wrong tablet, but 1mg was at rescue.\n\nWe found out doc was prescribing wantingly high cost branded medicine.\n\nwe also found doc was prescribing unnecessary high cost vitamin supplements.\n\nMost wanted app in todays world.', 'result': {'fake': 0.0002, 'real': 0.9998}, 'status': 'success'}], 'credits_used': 3, 'credits': 1983656, 'subscription': 0, 'content': 'The app called 1mg has changed my life.\n\nCurrently in my home my grandma has heart disease, my father is suffering from liver disease and mother always has knee pain.\n\nSadly we spend half of the salary on medicine.\n\nwhat does this app do?\n\nshows content of the medicine.\nshows the subsitute of medicine\nshows price so that you can compare between substitutes.\nclearly mentions how the medicine work.\nfree online consultation.\nshows the precautions after and before taking medicines. ex dont drive after taking the tablet etc\nmentions who should not consume the medicine ex pregnant women, lactating women, children of particular age.\ncan buy online at discounted rates.\nbook lab test and sample collection from home.\nshows side effects.\nFind cheaper substitutes.\ncan buy patanjali products too.\nset reminders for medicine.\n\nwe can call this app as Wikipedia of medicine.\n\nBelow is the screen shot\n\nhow this app helped me in other ways.\n\nDue to sloppy handwriting of doctor two times the medical gave me wrong tablet, but 1mg was at rescue.\n\nWe found out doc was prescribing wantingly high cost branded medicine.\n\nwe also found doc was prescribing unnecessary high cost vitamin supplements.\n\nMost wanted app in todays world.', 'aiModelVersion': '1'}",0.9998
Rajan Singh,Updated 5y,How do you keep yourself disciplined?,"During the Indian Police Service (IPS) training, our daily morning PT (physical training) used to start with a warmup run of four laps (total 1.6 KM). It felt super hard in week one. We thought it will become easier once we got used to it, maybe after a few months.

Here is the surprise: It never got easier. Running the four warmup laps was always painful, even when we were fit enough to do a cross country of 16 KM.

The path of discipline is not easy, and will never be easy. Period.

Why is it so hard to stay disciplined?

Because we allow our mind to interfere in the path of discipline. Why do we fail to get up early in the morning? Because the mind says, “You are so tired and sleep deprived. Just sleep for 5 minutes more and it will be fine”. Then 5 becomes 10, and it is all the way downhill after that.

We allow the fallacy that we will get up early or eat healthy or study well or do the right thing when we get used to it and it becomes a little easier.

But it will NEVER get easier. It will never be easy to get up at 5 am, every single day of the year. Not now, not after 10 years.

So what should you do? The answer is trivially simple, but also very hard. You have to stop listening to your mind. Just stop. No concession to what your mind says.

When you have to do something hard, you have to become a robot. It does not matter how you feel. Who cares? Just execute the plan like a machine. That is the only way.

If you decide to go for a run, get up and run. You will feel groggy and your legs will hurt. The pain you feel is exactly the pain everybody else feels. The pain of discipline is the price of happiness.

People who win are those who keep going, regardless of how much it hurts.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/xhu1qie43anzdwjv', 'title': 'How do you keep yourself disciplined?', 'score': {'original': 0.9996, 'ai': 0.0004}, 'blocks': [{'text': 'During the Indian Police Service (IPS) training, our daily morning PT (physical training) used to start with a warmup run of four laps (total 1.6 KM). It felt super hard in week one. We thought it will become easier once we got used to it, maybe after a few months.\n\nHere is the surprise: It never got easier. Running the four warmup laps was always painful, even when we were fit enough to do a cross country of 16 KM.\n\nThe path of discipline is not easy, and will never be easy. Period.\n\nWhy is it so hard to stay disciplined?\n\nBecause we allow our mind to interfere in the path of discipline. Why do we fail to get up early in the morning? Because the mind says, “You are so tired and sleep deprived. Just sleep for 5 minutes more and it will be fine”. Then 5 becomes 10, and it is all the way downhill after that.\n\nWe allow the fallacy that we will get up early or eat healthy or study well or do the right thing when we get used to it and it becomes a little easier.\n\nBut it will NEVER get easier. It will never be easy to get up at 5 am, every single day of the year. Not now, not after 10 years.\n\nSo what should you do? The answer is trivially simple, but also very hard. You have to stop listening to your mind. Just stop. No concession to what your mind says.\n\nWhen you have to do something hard, you have to become a robot. It does not matter how you feel. Who cares? Just execute the plan like a machine. That is the only way.\n\nIf you decide to go for a run, get up and run. You will feel groggy and your legs will hurt. The pain you feel is exactly the pain everybody else feels. The pain of discipline is the price of happiness.\n\nPeople who win are those who keep going, regardless of how much it hurts.', 'result': {'fake': 0.0004, 'real': 0.9996}, 'status': 'success'}], 'credits_used': 4, 'credits': 1983652, 'subscription': 0, 'content': 'During the Indian Police Service (IPS) training, our daily morning PT (physical training) used to start with a warmup run of four laps (total 1.6 KM). It felt super hard in week one. We thought it will become easier once we got used to it, maybe after a few months.\n\nHere is the surprise: It never got easier. Running the four warmup laps was always painful, even when we were fit enough to do a cross country of 16 KM.\n\nThe path of discipline is not easy, and will never be easy. Period.\n\nWhy is it so hard to stay disciplined?\n\nBecause we allow our mind to interfere in the path of discipline. Why do we fail to get up early in the morning? Because the mind says, “You are so tired and sleep deprived. Just sleep for 5 minutes more and it will be fine”. Then 5 becomes 10, and it is all the way downhill after that.\n\nWe allow the fallacy that we will get up early or eat healthy or study well or do the right thing when we get used to it and it becomes a little easier.\n\nBut it will NEVER get easier. It will never be easy to get up at 5 am, every single day of the year. Not now, not after 10 years.\n\nSo what should you do? The answer is trivially simple, but also very hard. You have to stop listening to your mind. Just stop. No concession to what your mind says.\n\nWhen you have to do something hard, you have to become a robot. It does not matter how you feel. Who cares? Just execute the plan like a machine. That is the only way.\n\nIf you decide to go for a run, get up and run. You will feel groggy and your legs will hurt. The pain you feel is exactly the pain everybody else feels. The pain of discipline is the price of happiness.\n\nPeople who win are those who keep going, regardless of how much it hurts.', 'aiModelVersion': '1'}",0.9996
Harish Shivaraman,9y,What is the best comment in source code that you have ever encountered?,"Go to Flipkart's website right now and right click on the homepage. Select Inspect Element which opens up the Chrome Developer Tool window. Click on ""Console"" and you'll be seeing this :   A closer view :  I find this cool. What do you think  ?","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/xn1qukgmdsvjzt78', 'title': 'What is the best comment in source code that you have ever encountered?', 'score': {'original': 0.9944, 'ai': 0.0056}, 'blocks': [{'text': 'Go to Flipkart\'s website right now and right click on the homepage. Select Inspect Element which opens up the Chrome Developer Tool window. Click on ""Console"" and you\'ll be seeing this :   A closer view :  I find this cool. What do you think  ?', 'result': {'fake': 0.0089, 'real': 0.9911}, 'status': 'success'}], 'credits_used': 1, 'credits': 1983651, 'subscription': 0, 'content': 'Go to Flipkart\'s website right now and right click on the homepage. Select Inspect Element which opens up the Chrome Developer Tool window. Click on ""Console"" and you\'ll be seeing this :   A closer view :  I find this cool. What do you think  ?', 'aiModelVersion': '1'}",0.9944
Hector Quintanilla,Updated 3y,What is the best way to give a PowerPoint presentation?,"Learning from the master, Steve Jobs…

In one word : SIMPLICITY

Very few words.

Simple facts.

Big graphics with minimal text.

Smaller letters to clarify the data.

The speaker gives the details, not the graphic.

Few colors.

One more thing: If you provide too much information on your presentation people will get distracted trying to read or understand your content. They will lose interest in you and whatever you're saying.

As a speaker you should try to be the focus of your audience. The mission of your power point should be to support your statements not steal the center of attention.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/qy6v8j1ftgpla7zh', 'title': 'What is the best way to give a PowerPoint presentation?', 'score': {'original': 0.9958, 'ai': 0.0042}, 'blocks': [{'text': ""Learning from the master, Steve Jobs…\n\nIn one word : SIMPLICITY\n\nVery few words.\n\nSimple facts.\n\nBig graphics with minimal text.\n\nSmaller letters to clarify the data.\n\nThe speaker gives the details, not the graphic.\n\nFew colors.\n\nOne more thing: If you provide too much information on your presentation people will get distracted trying to read or understand your content. They will lose interest in you and whatever you're saying.\n\nAs a speaker you should try to be the focus of your audience. The mission of your power point should be to support your statements not steal the center of attention."", 'result': {'fake': 0.0042, 'real': 0.9958}, 'status': 'success'}], 'credits_used': 1, 'credits': 1983650, 'subscription': 0, 'content': ""Learning from the master, Steve Jobs…\n\nIn one word : SIMPLICITY\n\nVery few words.\n\nSimple facts.\n\nBig graphics with minimal text.\n\nSmaller letters to clarify the data.\n\nThe speaker gives the details, not the graphic.\n\nFew colors.\n\nOne more thing: If you provide too much information on your presentation people will get distracted trying to read or understand your content. They will lose interest in you and whatever you're saying.\n\nAs a speaker you should try to be the focus of your audience. The mission of your power point should be to support your statements not steal the center of attention."", 'aiModelVersion': '1'}",0.9958
Shiva Mahajan,Updated 9y,"I’m a B.Tech 2nd year EE student. I have little knowledge of C language and basic HTML-CSS. I have a lot of material, but I don't know where to begin, so I haven't touched it. How can I learn coding to be an elite programmer with no one to guide me?","Hi there. I think i can help you in this case.
This is a 5 step formula that i followed and i tell everyone this only whenever someone asks me.
Please note that this asnwer assumes that you want start from scratch.

Step 1: Do CS50. There is a catch though. Do it in less than a month. All standard edition Psets and lectures (and shorts if you require) in less than a month.
Course link : Find Courses

Step 2: Do algorithms course on coursera by Tim Roughgarden offered by stanford university. Do this according to course's pace. Design and analysis of Algorithms : part 1.
Course link: Algorithms: Design and Analysis, Part 1

Step 3: Time to enter the world of competitive coding. Start with codechef and spoj. Do atleast 150-175 easy problems which require basic logic within 2-3 months.
Further steps include step 3 running in parallel. You have to continue practicing on codechef and spoj but slowly raising the level of questions to graphs, DP, segment trees, etc.
Codechef : Programming Competition,Programming Contest,Online Computer Programming

Spoj : Sphere Online Judge (SPOJ)

Problems categories: A2 Online Judge

Step 4: Do algorithms course which is the sequel of course i listed in step 2. Design and analysis of algorithms: part 2. Do it according to course's pace. Remember step 3 runs in parallel. By the time this course ends you should be somewhere around 300 problems old. ( combined on codechef and spoj)

Course link: Algorithms: Design and Analysis, Part 2


Step 5: Start doing practice and contests on Codeforces and topcoder. Try to get in division 1 and more importantly stay there. This step is really important.
Codeforces

topcoder

Also take a look at this just somewhere in the middle of step 3.

IMPORTANT: Data Structures and Algorithms


PROGRAMMING LANGUAGES:

Languages I know: C, C++, Python
Question: How to learn them?
Ans: C is taught in almost every college. To learn c++ and other languages there is a very simple technique. The questions that you solve on all these online judges try to do them in the languages yo want to learn.

Question 2: How to do the above tasks if you don't already know the language?
Ans: Google something like ""How to ______ in python/c++/java/etc""
and if possible look for Stack Overflow
 links. The ____ can be filled with the following:


Take user input
Declare an array
Sort elements
Make a hash table or map
print output.
And whatever you need.


I learnt Python like this and bits of java too. This approach works because once you are done with C language and CS50 you will know all the concepts and you will be at a stage where you will just need to get used to with the syntax of the language and that can be done while practicing on online judges.

This is what i did. I hope this helps you. I don't have a job at google but i have an internship there for the summers of 2015 as I am still in my 3rd year.

Good luck and do your best.

NOTE: ALL THIS INFORMATION COMES FROM MY EXPERIENCE, SO IF ANYBODY FEELS THAT IT IS WRONG OR MISLEADING, I AM SORRY, CAN'T HELP IT.

EDIT 1: Added some details to the answer.

EDIT 2:There is one more thing i want to add. while following these steps, somewhere in the middle you will fall in love with all of this and then you won't have to look for answers on how to proceed. You will move forward on your own and all the good things which you desire will happen on their own. Trust me on that.

EDIT 3: For those wondering how to apply to Google.
Shiva Mahajan's answer to How do I apply for Google internship in India if not from (IIT or NIT). I never see any info about internship in india on Google careers page most of the time?","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/ah6tcdym492kqr83', 'title': ""I’m a B.Tech 2nd year EE student. I have little knowledge of C language and basic HTML-CSS. I have a lot of material, but I don't know where to begin, so I haven't touched it. How can I learn coding to be an elite programmer with no one to guide me?"", 'score': {'original': 0.97975, 'ai': 0.02025}, 'blocks': [{'text': 'Hi there. I think i can help you in this case.\nThis is a 5 step formula that i followed and i tell everyone this only whenever someone asks me.\nPlease note that this asnwer assumes that you want start from scratch.\n\nStep 1: Do CS50. There is a catch though. Do it in less than a month. All standard edition Psets and lectures (and shorts if you require) in less than a month.\nCourse link : Find Courses\n\nStep 2: Do algorithms course on coursera by Tim Roughgarden offered by stanford university. Do this according to course\'s pace. Design and analysis of Algorithms : part 1.\nCourse link: Algorithms: Design and Analysis, Part 1\n\nStep 3: Time to enter the world of competitive coding. Start with codechef and spoj. Do atleast 150-175 easy problems which require basic logic within 2-3 months.\nFurther steps include step 3 running in parallel. You have to continue practicing on codechef and spoj but slowly raising the level of questions to graphs, DP, segment trees, etc.\nCodechef : Programming Competition,Programming Contest,Online Computer Programming\n\nSpoj : Sphere Online Judge (SPOJ)\n\nProblems categories: A2 Online Judge\n\nStep 4: Do algorithms course which is the sequel of course i listed in step 2. Design and analysis of algorithms: part 2. Do it according to course\'s pace. Remember step 3 runs in parallel. By the time this course ends you should be somewhere around 300 problems old. ( combined on codechef and spoj)\n\nCourse link: Algorithms: Design and Analysis, Part 2\n\n\nStep 5: Start doing practice and contests on Codeforces and topcoder. Try to get in division 1 and more importantly stay there. This step is really important.\nCodeforces\n\ntopcoder\n\nAlso take a look at this just somewhere in the middle of step 3.\n\nIMPORTANT: Data Structures and Algorithms\n\n\nPROGRAMMING LANGUAGES:\n\nLanguages I know: C, C++, Python\nQuestion: How to learn them?\nAns: C is taught in almost every college. To learn c++ and other languages there is a very simple technique. The questions that you solve on all these online judges try to do them in the languages yo want to learn.\n\nQuestion 2: How to do the above tasks if you don\'t already know the language?\nAns: Google something like ""How to ______ in python/c++/java/etc""\nand if possible look for Stack Overflow\n links. The ____ can be filled with the following:\n\n\nTake user input\nDeclare an array\nSort elements\nMake a hash table or map\nprint output.\nAnd whatever you need.\n\n\nI learnt Python like this and bits of java too. This approach works because once you are done with C language and CS50 you will know all the concepts and you will be at a stage where you will just need to get used to with the syntax of the language and that can be done while practicing on online judges.\n\nThis is what i did. I hope this helps you. I don\'t have a job at google but i have an internship there for the summers of 2015 as I am still in my 3rd year.\n\nGood luck and do your best.\n\nNOTE: ALL THIS INFORMATION COMES FROM MY EXPERIENCE, SO IF ANYBODY FEELS THAT IT IS WRONG OR MISLEADING, I AM SORRY, CAN\'T HELP IT.\n\nEDIT 1: Added some details to', 'result': {'fake': 0.698, 'real': 0.302}, 'status': 'success'}, {'text': ""the answer.\n\nEDIT 2:There is one more thing i want to add. while following these steps, somewhere in the middle you will fall in love with all of this and then you won't have to look for answers on how to proceed. You will move forward on your own and all the good things which you desire will happen on their own. Trust me on that.\n\nEDIT 3: For those wondering how to apply to Google.\nShiva Mahajan's answer to How do I apply for Google internship in India if not from (IIT or NIT). I never see any info about internship in india on Google careers page most of the time?"", 'result': {'fake': 0.237, 'real': 0.763}, 'status': 'success'}], 'credits_used': 7, 'credits': 1983643, 'subscription': 0, 'content': 'Hi there. I think i can help you in this case.\nThis is a 5 step formula that i followed and i tell everyone this only whenever someone asks me.\nPlease note that this asnwer assumes that you want start from scratch.\n\nStep 1: Do CS50. There is a catch though. Do it in less than a month. All standard edition Psets and lectures (and shorts if you require) in less than a month.\nCourse link : Find Courses\n\nStep 2: Do algorithms course on coursera by Tim Roughgarden offered by stanford university. Do this according to course\'s pace. Design and analysis of Algorithms : part 1.\nCourse link: Algorithms: Design and Analysis, Part 1\n\nStep 3: Time to enter the world of competitive coding. Start with codechef and spoj. Do atleast 150-175 easy problems which require basic logic within 2-3 months.\nFurther steps include step 3 running in parallel. You have to continue practicing on codechef and spoj but slowly raising the level of questions to graphs, DP, segment trees, etc.\nCodechef : Programming Competition,Programming Contest,Online Computer Programming\n\nSpoj : Sphere Online Judge (SPOJ)\n\nProblems categories: A2 Online Judge\n\nStep 4: Do algorithms course which is the sequel of course i listed in step 2. Design and analysis of algorithms: part 2. Do it according to course\'s pace. Remember step 3 runs in parallel. By the time this course ends you should be somewhere around 300 problems old. ( combined on codechef and spoj)\n\nCourse link: Algorithms: Design and Analysis, Part 2\n\n\nStep 5: Start doing practice and contests on Codeforces and topcoder. Try to get in division 1 and more importantly stay there. This step is really important.\nCodeforces\n\ntopcoder\n\nAlso take a look at this just somewhere in the middle of step 3.\n\nIMPORTANT: Data Structures and Algorithms\n\n\nPROGRAMMING LANGUAGES:\n\nLanguages I know: C, C++, Python\nQuestion: How to learn them?\nAns: C is taught in almost every college. To learn c++ and other languages there is a very simple technique. The questions that you solve on all these online judges try to do them in the languages yo want to learn.\n\nQuestion 2: How to do the above tasks if you don\'t already know the language?\nAns: Google something like ""How to ______ in python/c++/java/etc""\nand if possible look for Stack Overflow\n links. The ____ can be filled with the following:\n\n\nTake user input\nDeclare an array\nSort elements\nMake a hash table or map\nprint output.\nAnd whatever you need.\n\n\nI learnt Python like this and bits of java too. This approach works because once you are done with C language and CS50 you will know all the concepts and you will be at a stage where you will just need to get used to with the syntax of the language and that can be done while practicing on online judges.\n\nThis is what i did. I hope this helps you. I don\'t have a job at google but i have an internship there for the summers of 2015 as I am still in my 3rd year.\n\nGood luck and do your best.\n\nNOTE: ALL THIS INFORMATION COMES FROM MY EXPERIENCE, SO IF ANYBODY FEELS THAT IT IS WRONG OR MISLEADING, I AM SORRY, CAN\'T HELP IT.\n\nEDIT 1: Added some details to the answer.\n\nEDIT 2:There is one more thing i want to add. while following these steps, somewhere in the middle you will fall in love with all of this and then you won\'t have to look for answers on how to proceed. You will move forward on your own and all the good things which you desire will happen on their own. Trust me on that.\n\nEDIT 3: For those wondering how to apply to Google.\nShiva Mahajan\'s answer to How do I apply for Google internship in India if not from (IIT or NIT). I never see any info about internship in india on Google careers page most of the time?', 'aiModelVersion': '1'}",0.97975
Chris Wojcik,Updated 2y,How can I improve myself in 6 months?,"Progress doesn’t take as long as people think.

Our culture runs on extremes. We believe that progress should either take decades or days. We want success and we want it now, and if we can’t get it, we assume that it’s unattainable.

The reality is that anyone can improve in anything.

The problem is that most people aren’t willing to make sacrifices.

If you want to improve yourself, start sacrificing the aspects of your life that are holding you back.

This is the noblest contribution to the cause of self-improvement that anyone can make.

Everyone wants to build habits, but no one wants to get rid of bad ones.

Atomic Habits sold millions of copies because people love building habits. I’m sure “Atomic Habit Destruction” wouldn’t do nearly as well.

Want to improve your focus? Stop scrolling through your phone like it has the answers to your problems. It doesn’t. All only happiness you can find in a phone is cheap dopamine hits that will fade within the hour. Quit obsessive porn, social media, and internet use. It’s killing your ability to focus. I know that first hand.

Want to become healthier? Don’t look for a juice cleanse, stop viewing yourself like a death-row inmate, and stop viewing every meal as your last. You aren’t and it isn’t.

Want to improve your relationships? Stop viewing your friends right now as the only friends you’ll ever have. Stop viewing your toxic relationship as “the best I can do”.

Want to improve your skills? Stop viewing your time as unlimited and your potential as limited. It’s the opposite. You only have a limited amount of time, but the possibilities for what you can do with that time are limited by your own mind before they’re limited by reality.

Optimal human performance comes from the intersection between scarcity and abundance. This is called the flow state. For the next 6 months, focus on finding the flow state.

To quote Gucci Mane: “If a man does not have sauce, then he is lost. But the same man can get lost in the sauce.”

In whatever you do, stop using the scarcity mindset to justify desperate and unhealthy actions. Stop using the abundance mindset to justify sitting around and doing nothing.

Both are right, both are wrong.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/5t0s1vueh9ab384o', 'title': 'How can I improve myself in 6 months?', 'score': {'original': 0.9995, 'ai': 0.0005}, 'blocks': [{'text': 'Progress doesn’t take as long as people think.\n\nOur culture runs on extremes. We believe that progress should either take decades or days. We want success and we want it now, and if we can’t get it, we assume that it’s unattainable.\n\nThe reality is that anyone can improve in anything.\n\nThe problem is that most people aren’t willing to make sacrifices.\n\nIf you want to improve yourself, start sacrificing the aspects of your life that are holding you back.\n\nThis is the noblest contribution to the cause of self-improvement that anyone can make.\n\nEveryone wants to build habits, but no one wants to get rid of bad ones.\n\nAtomic Habits sold millions of copies because people love building habits. I’m sure “Atomic Habit Destruction” wouldn’t do nearly as well.\n\nWant to improve your focus? Stop scrolling through your phone like it has the answers to your problems. It doesn’t. All only happiness you can find in a phone is cheap dopamine hits that will fade within the hour. Quit obsessive porn, social media, and internet use. It’s killing your ability to focus. I know that first hand.\n\nWant to become healthier? Don’t look for a juice cleanse, stop viewing yourself like a death-row inmate, and stop viewing every meal as your last. You aren’t and it isn’t.\n\nWant to improve your relationships? Stop viewing your friends right now as the only friends you’ll ever have. Stop viewing your toxic relationship as “the best I can do”.\n\nWant to improve your skills? Stop viewing your time as unlimited and your potential as limited. It’s the opposite. You only have a limited amount of time, but the possibilities for what you can do with that time are limited by your own mind before they’re limited by reality.\n\nOptimal human performance comes from the intersection between scarcity and abundance. This is called the flow state. For the next 6 months, focus on finding the flow state.\n\nTo quote Gucci Mane: “If a man does not have sauce, then he is lost. But the same man can get lost in the sauce.”\n\nIn whatever you do, stop using the scarcity mindset to justify desperate and unhealthy actions. Stop using the abundance mindset to justify sitting around and doing nothing.\n\nBoth are right, both are wrong.', 'result': {'fake': 0.0005, 'real': 0.9995}, 'status': 'success'}], 'credits_used': 4, 'credits': 1983639, 'subscription': 0, 'content': 'Progress doesn’t take as long as people think.\n\nOur culture runs on extremes. We believe that progress should either take decades or days. We want success and we want it now, and if we can’t get it, we assume that it’s unattainable.\n\nThe reality is that anyone can improve in anything.\n\nThe problem is that most people aren’t willing to make sacrifices.\n\nIf you want to improve yourself, start sacrificing the aspects of your life that are holding you back.\n\nThis is the noblest contribution to the cause of self-improvement that anyone can make.\n\nEveryone wants to build habits, but no one wants to get rid of bad ones.\n\nAtomic Habits sold millions of copies because people love building habits. I’m sure “Atomic Habit Destruction” wouldn’t do nearly as well.\n\nWant to improve your focus? Stop scrolling through your phone like it has the answers to your problems. It doesn’t. All only happiness you can find in a phone is cheap dopamine hits that will fade within the hour. Quit obsessive porn, social media, and internet use. It’s killing your ability to focus. I know that first hand.\n\nWant to become healthier? Don’t look for a juice cleanse, stop viewing yourself like a death-row inmate, and stop viewing every meal as your last. You aren’t and it isn’t.\n\nWant to improve your relationships? Stop viewing your friends right now as the only friends you’ll ever have. Stop viewing your toxic relationship as “the best I can do”.\n\nWant to improve your skills? Stop viewing your time as unlimited and your potential as limited. It’s the opposite. You only have a limited amount of time, but the possibilities for what you can do with that time are limited by your own mind before they’re limited by reality.\n\nOptimal human performance comes from the intersection between scarcity and abundance. This is called the flow state. For the next 6 months, focus on finding the flow state.\n\nTo quote Gucci Mane: “If a man does not have sauce, then he is lost. But the same man can get lost in the sauce.”\n\nIn whatever you do, stop using the scarcity mindset to justify desperate and unhealthy actions. Stop using the abundance mindset to justify sitting around and doing nothing.\n\nBoth are right, both are wrong.', 'aiModelVersion': '1'}",0.9995
Rohan Dasika,Updated 4y,What is the story behind Google Maps?,"In October of 2004, Larry Page saved a dying startup and that became the base for Google Maps as we know it today.

Origin

In the age of MapQuest, when all we had was squares with pictures at each direction, an Australian startup, Where2, decided to make the map the center of the display. Users would be able to move the map around and see for themselves where they are. Seems straightforward now, but back then, no one was buying it.

Where2 lost most of their funding overnight when Sequoia Capital decided to pull out. While doing that, they put Larry Page in contact with the founders of Where2.

Where 2's technology began as a desktop application called Expedition. It was designed to be downloaded, but Larry was adamant. He said, “We like the web” and gave a deadline to transition their app to the browser.

On a whiteboard (shown below), the four engineers created their business model and the modern idea of a Web application — where data was fetched in the background rather than manually having to be refreshed.

While Where2 was responsible for majority of the work, two other startups called Zipdash and Keyhole were also acquired and moved out to Mountain View to build a Google version of what they had all worked on.

Satellite Data

Keyhole was the startup working on high-res satellite imagery. When they prepared a thought-out presentation to stagger how to acquire images and data, starting with the big cities first, Sergey Brin is reported to have said, “Why don’t we just do all of it”.

Classic Google.

Several million dollars later they set up infrastructure and deals with providers to get high speed access to that data.

Launch

February 7th, 2005, Google Maps was leaked a day before it was officially launched. People were enamored by the draggable maps and design. But after those initial 10 million views, it went largely unused.

Slowly, Google released developer tools and the famed trick of “seeing your own house” garnered users.

A year after that in 2006, Google Maps was the largest map provider in the world.

Today, Maps is the most used app on smartphones and guides users for staggering 12 billion miles a year.

Great question, I learned a lot answering this :)

Ten Years of Google Maps, From Slashdot to Ground Truth

The Untold Story About the Founding of Google Maps – Stephen Hutcheon – Medium

25 Weird Facts You Did Not Know About Google Maps","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/ly2dtebrxi9k8swo', 'title': 'What is the story behind Google Maps?', 'score': {'original': 0.9997, 'ai': 0.0003}, 'blocks': [{'text': ""In October of 2004, Larry Page saved a dying startup and that became the base for Google Maps as we know it today.\n\nOrigin\n\nIn the age of MapQuest, when all we had was squares with pictures at each direction, an Australian startup, Where2, decided to make the map the center of the display. Users would be able to move the map around and see for themselves where they are. Seems straightforward now, but back then, no one was buying it.\n\nWhere2 lost most of their funding overnight when Sequoia Capital decided to pull out. While doing that, they put Larry Page in contact with the founders of Where2.\n\nWhere 2's technology began as a desktop application called Expedition. It was designed to be downloaded, but Larry was adamant. He said, “We like the web” and gave a deadline to transition their app to the browser.\n\nOn a whiteboard (shown below), the four engineers created their business model and the modern idea of a Web application — where data was fetched in the background rather than manually having to be refreshed.\n\nWhile Where2 was responsible for majority of the work, two other startups called Zipdash and Keyhole were also acquired and moved out to Mountain View to build a Google version of what they had all worked on.\n\nSatellite Data\n\nKeyhole was the startup working on high-res satellite imagery. When they prepared a thought-out presentation to stagger how to acquire images and data, starting with the big cities first, Sergey Brin is reported to have said, “Why don’t we just do all of it”.\n\nClassic Google.\n\nSeveral million dollars later they set up infrastructure and deals with providers to get high speed access to that data.\n\nLaunch\n\nFebruary 7th, 2005, Google Maps was leaked a day before it was officially launched. People were enamored by the draggable maps and design. But after those initial 10 million views, it went largely unused.\n\nSlowly, Google released developer tools and the famed trick of “seeing your own house” garnered users.\n\nA year after that in 2006, Google Maps was the largest map provider in the world.\n\nToday, Maps is the most used app on smartphones and guides users for staggering 12 billion miles a year.\n\nGreat question, I learned a lot answering this :)\n\nTen Years of Google Maps, From Slashdot to Ground Truth\n\nThe Untold Story About the Founding of Google Maps – Stephen Hutcheon – Medium\n\n25 Weird Facts You Did Not Know About Google Maps"", 'result': {'fake': 0.0003, 'real': 0.9997}, 'status': 'success'}], 'credits_used': 5, 'credits': 1983634, 'subscription': 0, 'content': ""In October of 2004, Larry Page saved a dying startup and that became the base for Google Maps as we know it today.\n\nOrigin\n\nIn the age of MapQuest, when all we had was squares with pictures at each direction, an Australian startup, Where2, decided to make the map the center of the display. Users would be able to move the map around and see for themselves where they are. Seems straightforward now, but back then, no one was buying it.\n\nWhere2 lost most of their funding overnight when Sequoia Capital decided to pull out. While doing that, they put Larry Page in contact with the founders of Where2.\n\nWhere 2's technology began as a desktop application called Expedition. It was designed to be downloaded, but Larry was adamant. He said, “We like the web” and gave a deadline to transition their app to the browser.\n\nOn a whiteboard (shown below), the four engineers created their business model and the modern idea of a Web application — where data was fetched in the background rather than manually having to be refreshed.\n\nWhile Where2 was responsible for majority of the work, two other startups called Zipdash and Keyhole were also acquired and moved out to Mountain View to build a Google version of what they had all worked on.\n\nSatellite Data\n\nKeyhole was the startup working on high-res satellite imagery. When they prepared a thought-out presentation to stagger how to acquire images and data, starting with the big cities first, Sergey Brin is reported to have said, “Why don’t we just do all of it”.\n\nClassic Google.\n\nSeveral million dollars later they set up infrastructure and deals with providers to get high speed access to that data.\n\nLaunch\n\nFebruary 7th, 2005, Google Maps was leaked a day before it was officially launched. People were enamored by the draggable maps and design. But after those initial 10 million views, it went largely unused.\n\nSlowly, Google released developer tools and the famed trick of “seeing your own house” garnered users.\n\nA year after that in 2006, Google Maps was the largest map provider in the world.\n\nToday, Maps is the most used app on smartphones and guides users for staggering 12 billion miles a year.\n\nGreat question, I learned a lot answering this :)\n\nTen Years of Google Maps, From Slashdot to Ground Truth\n\nThe Untold Story About the Founding of Google Maps – Stephen Hutcheon – Medium\n\n25 Weird Facts You Did Not Know About Google Maps"", 'aiModelVersion': '1'}",0.9997
Alan Mellor,Updated 3y,"If someone were to ruin your source code and delete half or most of it, would you be able to write it again exactly the same as you did before without using the backup? What if it was created 6 months/2 years/5 years and so on?","I’d be able to write it again but not exactly the same. I’d make different micro-decisions about the design.

Sometimes that improves the code; sometimes not.

If it is a recent loss, I find it so demotivating. It’s hard work doing that. It feels Sisyphean; ‘Get that rock back up that hill!’

I’ve had to do that after messing up a git rebase, then not being able to find my way back.

That sucks worse than Professor Sucks of Sucks University, Sucksville during a lecture on ‘Everything Sucks II’","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/cezt5fbsngrmaxkl', 'title': 'If someone were to ruin your source code and delete half or most of it, would you be able to write it again exactly the same as you did before without using the backup? What if it was created 6 months/2 years/5 years and so on?', 'score': {'original': 0.9978, 'ai': 0.0022}, 'blocks': [{'text': 'I’d be able to write it again but not exactly the same. I’d make different micro-decisions about the design.\n\nSometimes that improves the code; sometimes not.\n\nIf it is a recent loss, I find it so demotivating. It’s hard work doing that. It feels Sisyphean; ‘Get that rock back up that hill!’\n\nI’ve had to do that after messing up a git rebase, then not being able to find my way back.\n\nThat sucks worse than Professor Sucks of Sucks University, Sucksville during a lecture on ‘Everything Sucks II’', 'result': {'fake': 0.0022, 'real': 0.9978}, 'status': 'success'}], 'credits_used': 1, 'credits': 1983633, 'subscription': 0, 'content': 'I’d be able to write it again but not exactly the same. I’d make different micro-decisions about the design.\n\nSometimes that improves the code; sometimes not.\n\nIf it is a recent loss, I find it so demotivating. It’s hard work doing that. It feels Sisyphean; ‘Get that rock back up that hill!’\n\nI’ve had to do that after messing up a git rebase, then not being able to find my way back.\n\nThat sucks worse than Professor Sucks of Sucks University, Sucksville during a lecture on ‘Everything Sucks II’', 'aiModelVersion': '1'}",0.9978
Michael B.,4y,"Movies usually portray programmers as these insane coders who memorize everything. Do professional programmers actually know code (when making a bot, application, etc) or do research to put the pieces together?","Bit of both.

First of all what you see in the movies usually isn’t programming. It’s hacking (or cracking if you want to be technical). Hacking is when someone gets unauthorized access to a system. It’s nothing like depicted in Hollywood. It takes much longer, and most of the time it involves hacking the people, not the system.

But programming is also very different than what you’re imaging. For one thing there’s a lot less typing. Some people can just sit down and write code for 8 hours straight. Most people can’t. Most people need to think about the problem, ask questions, draw a diagram…

For another, computer science doesn’t require much memorization. If you use a language and set of libraries for a year, obviously you’re going to start remembering what each function does. But the IDE, the program that makes it easier to program remembers a lot of this stuff for you. And of course in real life programmers spend a lot of time on Google, Stack Overflow, or even just reading the documentation.

And then there’s the fact that you’re not always familiar with the pieces you’re using. A good chunk of the code of any program is going to be libraries. Preexisting code that does something. You might be familiar with the standard libraries used in your language, but if you want the program to do something specialized that can often involve having to learn a new library.

On the other side of the spectrum are design patterns. Set ways of solving a problem that can be used in any language. These are one of the few things that programmers will actually memorize.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/0kiquwgy1hstcam3', 'title': 'Movies usually portray programmers as these insane coders who memorize everything. Do professional programmers actually know code (when making a bot, application, etc) or do research to put the pieces together?', 'score': {'original': 0.9998, 'ai': 0.0002}, 'blocks': [{'text': 'Bit of both.\n\nFirst of all what you see in the movies usually isn’t programming. It’s hacking (or cracking if you want to be technical). Hacking is when someone gets unauthorized access to a system. It’s nothing like depicted in Hollywood. It takes much longer, and most of the time it involves hacking the people, not the system.\n\nBut programming is also very different than what you’re imaging. For one thing there’s a lot less typing. Some people can just sit down and write code for 8 hours straight. Most people can’t. Most people need to think about the problem, ask questions, draw a diagram…\n\nFor another, computer science doesn’t require much memorization. If you use a language and set of libraries for a year, obviously you’re going to start remembering what each function does. But the IDE, the program that makes it easier to program remembers a lot of this stuff for you. And of course in real life programmers spend a lot of time on Google, Stack Overflow, or even just reading the documentation.\n\nAnd then there’s the fact that you’re not always familiar with the pieces you’re using. A good chunk of the code of any program is going to be libraries. Preexisting code that does something. You might be familiar with the standard libraries used in your language, but if you want the program to do something specialized that can often involve having to learn a new library.\n\nOn the other side of the spectrum are design patterns. Set ways of solving a problem that can be used in any language. These are one of the few things that programmers will actually memorize.', 'result': {'fake': 0.0002, 'real': 0.9998}, 'status': 'success'}], 'credits_used': 3, 'credits': 1983630, 'subscription': 0, 'content': 'Bit of both.\n\nFirst of all what you see in the movies usually isn’t programming. It’s hacking (or cracking if you want to be technical). Hacking is when someone gets unauthorized access to a system. It’s nothing like depicted in Hollywood. It takes much longer, and most of the time it involves hacking the people, not the system.\n\nBut programming is also very different than what you’re imaging. For one thing there’s a lot less typing. Some people can just sit down and write code for 8 hours straight. Most people can’t. Most people need to think about the problem, ask questions, draw a diagram…\n\nFor another, computer science doesn’t require much memorization. If you use a language and set of libraries for a year, obviously you’re going to start remembering what each function does. But the IDE, the program that makes it easier to program remembers a lot of this stuff for you. And of course in real life programmers spend a lot of time on Google, Stack Overflow, or even just reading the documentation.\n\nAnd then there’s the fact that you’re not always familiar with the pieces you’re using. A good chunk of the code of any program is going to be libraries. Preexisting code that does something. You might be familiar with the standard libraries used in your language, but if you want the program to do something specialized that can often involve having to learn a new library.\n\nOn the other side of the spectrum are design patterns. Set ways of solving a problem that can be used in any language. These are one of the few things that programmers will actually memorize.', 'aiModelVersion': '1'}",0.9998
Lukas Schwekendiek,Updated 8mo,How can I improve myself in 6 months?,"Learn Massively - Every action you take is only limited by what you know. Learn more, know more, have more possibilities.
Use Your Time Wisely - Cut out everything that is not helping you move forward in life. Is watching TV helping you? Yes or No? Is reading helping you? Yes or No? Be honest with yourself and be uncompromising in cutting those things out that do not benefit you.
“Just Do It” - Stop looking for reasons as to why you should or shouldn’t do something. If you want to do it, if it benefits you, or if you feel it is the right choice, then do it without giving a reason. Stop justifying everything and trust yourself more.
Be Brave - A lot of the things you can do that will push you forward do not take a lot of effort or time, but they are scary as hell to do. Be brave. Do what you need to do regardless of how scared you are and you will see your life improve dramatically.
Challenge Yourself - You know whether you did all you could today or not. Stop living in your comfort zone; there’s nothing new for you there. Expand beyond your limits. Push them every day. Challenge yourself to be better than you were yesterday and you will always be the best you’ve ever been.
Maximize, Don’t Minimize - Maximize your income instead of minimizing your expenses. Maximize your effort instead of minimizing the tasks. Maximize your joy instead of minimizing sadness. Maximize the good things in your life and stop putting attention on the bad ones. What you focus on is what you get. Focus on the good.
Stop Interacting With People That Limit You - If they do not push you to be your best, if they do not want you to move forward, if they only complain and only try to make you feel better rather than telling you the truths you need to hear, then they are limiting what you could become. Find people that make you uncomfortable, that say what you need to hear, not what you want to hear, and keep them around no matter what.
Get Help - You do not have to do the improving on your own; you do not have to re-invent the wheel. There are people that know how you can improve and that will push you to improve the way it’s best for you. Find those people, pay them if you must, and have them put you on the fast track to success.
Produce, Don’t Consume - For every hour you consume something (TV, Video Games, Movies, etc.) you should spend at least 2 hours producing. Produce something of value and post it online. Make a difference now and get the feedback you need to grow!","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/y2lemd463u7gqik0', 'title': 'How can I improve myself in 6 months?', 'score': {'original': 0.9884, 'ai': 0.0116}, 'blocks': [{'text': 'Learn Massively - Every action you take is only limited by what you know. Learn more, know more, have more possibilities.\nUse Your Time Wisely - Cut out everything that is not helping you move forward in life. Is watching TV helping you? Yes or No? Is reading helping you? Yes or No? Be honest with yourself and be uncompromising in cutting those things out that do not benefit you.\n“Just Do It” - Stop looking for reasons as to why you should or shouldn’t do something. If you want to do it, if it benefits you, or if you feel it is the right choice, then do it without giving a reason. Stop justifying everything and trust yourself more.\nBe Brave - A lot of the things you can do that will push you forward do not take a lot of effort or time, but they are scary as hell to do. Be brave. Do what you need to do regardless of how scared you are and you will see your life improve dramatically.\nChallenge Yourself - You know whether you did all you could today or not. Stop living in your comfort zone; there’s nothing new for you there. Expand beyond your limits. Push them every day. Challenge yourself to be better than you were yesterday and you will always be the best you’ve ever been.\nMaximize, Don’t Minimize - Maximize your income instead of minimizing your expenses. Maximize your effort instead of minimizing the tasks. Maximize your joy instead of minimizing sadness. Maximize the good things in your life and stop putting attention on the bad ones. What you focus on is what you get. Focus on the good.\nStop Interacting With People That Limit You - If they do not push you to be your best, if they do not want you to move forward, if they only complain and only try to make you feel better rather than telling you the truths you need to hear, then they are limiting what you could become. Find people that make you uncomfortable, that say what you need to hear, not what you want to hear, and keep them around no matter what.\nGet Help - You do not have to do the improving on your own; you do not have to re-invent the wheel. There are people that know how you can improve and that will push you to improve the way it’s best for you. Find those people, pay them if you must, and have them put you on the fast track to success.\nProduce, Don’t Consume - For every hour you consume something (TV, Video Games, Movies, etc.) you should spend at least 2 hours producing. Produce something of value and post it online. Make a difference now and get the feedback you need to grow!', 'result': {'fake': 0.0116, 'real': 0.9884}, 'status': 'success'}], 'credits_used': 5, 'credits': 1983625, 'subscription': 0, 'content': 'Learn Massively - Every action you take is only limited by what you know. Learn more, know more, have more possibilities.\nUse Your Time Wisely - Cut out everything that is not helping you move forward in life. Is watching TV helping you? Yes or No? Is reading helping you? Yes or No? Be honest with yourself and be uncompromising in cutting those things out that do not benefit you.\n“Just Do It” - Stop looking for reasons as to why you should or shouldn’t do something. If you want to do it, if it benefits you, or if you feel it is the right choice, then do it without giving a reason. Stop justifying everything and trust yourself more.\nBe Brave - A lot of the things you can do that will push you forward do not take a lot of effort or time, but they are scary as hell to do. Be brave. Do what you need to do regardless of how scared you are and you will see your life improve dramatically.\nChallenge Yourself - You know whether you did all you could today or not. Stop living in your comfort zone; there’s nothing new for you there. Expand beyond your limits. Push them every day. Challenge yourself to be better than you were yesterday and you will always be the best you’ve ever been.\nMaximize, Don’t Minimize - Maximize your income instead of minimizing your expenses. Maximize your effort instead of minimizing the tasks. Maximize your joy instead of minimizing sadness. Maximize the good things in your life and stop putting attention on the bad ones. What you focus on is what you get. Focus on the good.\nStop Interacting With People That Limit You - If they do not push you to be your best, if they do not want you to move forward, if they only complain and only try to make you feel better rather than telling you the truths you need to hear, then they are limiting what you could become. Find people that make you uncomfortable, that say what you need to hear, not what you want to hear, and keep them around no matter what.\nGet Help - You do not have to do the improving on your own; you do not have to re-invent the wheel. There are people that know how you can improve and that will push you to improve the way it’s best for you. Find those people, pay them if you must, and have them put you on the fast track to success.\nProduce, Don’t Consume - For every hour you consume something (TV, Video Games, Movies, etc.) you should spend at least 2 hours producing. Produce something of value and post it online. Make a difference now and get the feedback you need to grow!', 'aiModelVersion': '1'}",0.9884
Shriram Krishnamurthi,4y,"Movies usually portray programmers as these insane coders who memorize everything. Do professional programmers actually know code (when making a bot, application, etc) or do research to put the pieces together?","Yes, a lot. A regular theme that crops up on Twitter, for instance, is programmers with 10, 15, 20 years’ experience, often working at top companies or on top projects, very publicly admitting that they have to look up even very simple things.

I’ve been programming since 1985, and I still routinely have to look up things even in languages and libraries I have used for a long time (indeed, even in languages and libraries that I designed and built).

Look at the popularity of sites like StackOverflow, and the fact that projects are trying to build support for them into IDEs to ease the life of professional programmers. That is further evidence.

Movie portrayals of just about any profession are inaccurate. In some cases they have no advisors at all, in other cases they have advisors who (presumably) give them accurate depictions of the job, which are simply not exciting, dramatic, or stereotypical enough for the audiences (at least in the minds of the movie makers), so the film jazzes them up for the viewership — thereby further propagating the stereotypes and making it even harder to get an accurate understanding. (Ditto for TV shows, etc.)

To some extent this may just be harmless fun. However, sadly, this also impacts children, who see these depictions and form career decisions on their basis.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/9tbhcgvqx8ydkuo0', 'title': 'Movies usually portray programmers as these insane coders who memorize everything. Do professional programmers actually know code (when making a bot, application, etc) or do research to put the pieces together?', 'score': {'original': 0.9987, 'ai': 0.0013}, 'blocks': [{'text': 'Yes, a lot. A regular theme that crops up on Twitter, for instance, is programmers with 10, 15, 20 years’ experience, often working at top companies or on top projects, very publicly admitting that they have to look up even very simple things.\n\nI’ve been programming since 1985, and I still routinely have to look up things even in languages and libraries I have used for a long time (indeed, even in languages and libraries that I designed and built).\n\nLook at the popularity of sites like StackOverflow, and the fact that projects are trying to build support for them into IDEs to ease the life of professional programmers. That is further evidence.\n\nMovie portrayals of just about any profession are inaccurate. In some cases they have no advisors at all, in other cases they have advisors who (presumably) give them accurate depictions of the job, which are simply not exciting, dramatic, or stereotypical enough for the audiences (at least in the minds of the movie makers), so the film jazzes them up for the viewership — thereby further propagating the stereotypes and making it even harder to get an accurate understanding. (Ditto for TV shows, etc.)\n\nTo some extent this may just be harmless fun. However, sadly, this also impacts children, who see these depictions and form career decisions on their basis.', 'result': {'fake': 0.0013, 'real': 0.9987}, 'status': 'success'}], 'credits_used': 3, 'credits': 1983622, 'subscription': 0, 'content': 'Yes, a lot. A regular theme that crops up on Twitter, for instance, is programmers with 10, 15, 20 years’ experience, often working at top companies or on top projects, very publicly admitting that they have to look up even very simple things.\n\nI’ve been programming since 1985, and I still routinely have to look up things even in languages and libraries I have used for a long time (indeed, even in languages and libraries that I designed and built).\n\nLook at the popularity of sites like StackOverflow, and the fact that projects are trying to build support for them into IDEs to ease the life of professional programmers. That is further evidence.\n\nMovie portrayals of just about any profession are inaccurate. In some cases they have no advisors at all, in other cases they have advisors who (presumably) give them accurate depictions of the job, which are simply not exciting, dramatic, or stereotypical enough for the audiences (at least in the minds of the movie makers), so the film jazzes them up for the viewership — thereby further propagating the stereotypes and making it even harder to get an accurate understanding. (Ditto for TV shows, etc.)\n\nTo some extent this may just be harmless fun. However, sadly, this also impacts children, who see these depictions and form career decisions on their basis.', 'aiModelVersion': '1'}",0.9987
Tikhon Jelvis,Updated 4y,"Movies usually portray programmers as these insane coders who memorize everything. Do professional programmers actually know code (when making a bot, application, etc) or do research to put the pieces together?","Programmers don’t need to memorize anything. That’s why I gravitated towards CS when I was younger! In day-to-day work, I spend more time reading than coding: browsing documentation, skimming other parts of the codebase, Googling error messages, finding answers on Stack Overflow… And that’s just to solve the immediate problem I’m working on; I also spend time on learning deeper technical topics to expand my horizons, reading blog posts, papers and, occasionally, books.

If you filmed me working for a week or two, it would look nothing like the movies. I’d look like a slacker! The job is more about thinking than anything else, and thinking doesn’t look like work. If I were better looking and my apartment’s decor nicer, you’d mistake me for one of those ambiguously employed young professionals from American sitcoms. On the days I get the most programming done, chances are I’m sitting on my (work-supplied) Macbook at a hipster cafe, more like the stereotypical writer than a “hacker”.

And yet, there is a smidgeon of truth to the “hacker” image you see. It’s an exaggeration and it isn’t representative, but if you catch me at my desk Emacsing frenetically, it’ll seem pretty close.

I don’t go out of my way to memorize anything—I don’t have to—but over time I learn things through sheer repetition. When I started Haskell, I had to look up library functions all the time; now, almost a decade later, I simply know most of them. (I still look up documentation for less standard packages all the time though!) So when I’m ultra-focused on a task that I already understand how to do, I can code pretty much non-stop for hours without looking anything up. It isn’t common, but it happens.

I mentioned Emacs for a reason. To the uninitiated, effective Emacs use is indistinguishable from magic. Emacs is colorful and exciting, it has a minimalist UI—which I intentionally tune to be even more minimal—and I have hundreds of keyboard commands in muscle memory. A full screen Emacs displaying a bunch of buffers that are constantly changing as I move around and execute commands definitely looks like a movie prop.

A screenshot of how I use Emacs on a large external monitor.

Emacs commands, coincidentally, were one of the few things I explicitly set out to memorize. I picked up Emacs in my senior year of high school—after getting tired of Eclipse and Notepad++—and I decided to set aside a couple of weeks of being unproductive to learn Emacs properly, using normal keybindings to do everything and never touching the arrow keys or mouse. This is not something I normally have the discipline to do, but, man, am I glad I did! Being comfortable in Emacs has been a massive productivity boost on par with learning to touch type. Occasionally looking like a real hacker is just a bonus :).

But I digress. With a handful of small exception, I have not needed to memorize anything. If I don’t remember something, I can just look it up. The only downside is that I can barely function without the internet—if I want to get something done on a plane flight or in a cabin in the mountains, I have to either plan ahead or stick to things I already know well. And I know I’m not the only one.

Ultimately, modern programmers are going to be looking things up all the time. The internet, Google and Stack Overflow are really powerful tools for accessing knowledge, and programming is fundamentally a knowledge profession. There is not reason not to use these tools—they provide so much value that avoiding them is a massive waste of time. There’s no valor in intentionally making your own life harder!","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/qhnvjftu1zsab43p', 'title': 'Movies usually portray programmers as these insane coders who memorize everything. Do professional programmers actually know code (when making a bot, application, etc) or do research to put the pieces together?', 'score': {'original': 0.5598, 'ai': 0.4402}, 'blocks': [{'text': 'Programmers don’t need to memorize anything. That’s why I gravitated towards CS when I was younger! In day-to-day work, I spend more time reading than coding: browsing documentation, skimming other parts of the codebase, Googling error messages, finding answers on Stack Overflow… And that’s just to solve the immediate problem I’m working on; I also spend time on learning deeper technical topics to expand my horizons, reading blog posts, papers and, occasionally, books.\n\nIf you filmed me working for a week or two, it would look nothing like the movies. I’d look like a slacker! The job is more about thinking than anything else, and thinking doesn’t look like work. If I were better looking and my apartment’s decor nicer, you’d mistake me for one of those ambiguously employed young professionals from American sitcoms. On the days I get the most programming done, chances are I’m sitting on my (work-supplied) Macbook at a hipster cafe, more like the stereotypical writer than a “hacker”.\n\nAnd yet, there is a smidgeon of truth to the “hacker” image you see. It’s an exaggeration and it isn’t representative, but if you catch me at my desk Emacsing frenetically, it’ll seem pretty close.\n\nI don’t go out of my way to memorize anything—I don’t have to—but over time I learn things through sheer repetition. When I started Haskell, I had to look up library functions all the time; now, almost a decade later, I simply know most of them. (I still look up documentation for less standard packages all the time though!) So when I’m ultra-focused on a task that I already understand how to do, I can code pretty much non-stop for hours without looking anything up. It isn’t common, but it happens.\n\nI mentioned Emacs for a reason. To the uninitiated, effective Emacs use is indistinguishable from magic. Emacs is colorful and exciting, it has a minimalist UI—which I intentionally tune to be even more minimal—and I have hundreds of keyboard commands in muscle memory. A full screen Emacs displaying a bunch of buffers that are constantly changing as I move around and execute commands definitely looks like a movie prop.\n\nA screenshot of how I use Emacs on a large external monitor.\n\nEmacs commands, coincidentally, were one of the few things I explicitly set out to memorize. I picked up Emacs in my senior year of high school—after getting tired of Eclipse and Notepad++—and I decided to set aside a couple of weeks of being unproductive to learn Emacs properly, using normal keybindings to do everything and never touching the arrow keys or mouse. This is not something I normally have the discipline to do, but, man, am I glad I did! Being comfortable in Emacs has been a massive productivity boost on par with learning to touch type. Occasionally looking like a real hacker is just a bonus :).\n\nBut I digress. With a handful of small exception, I have not needed to memorize anything. If I don’t remember something, I can just look it up. The only downside is that I can barely function without the internet—if I want', 'result': {'fake': 0.0052, 'real': 0.9948}, 'status': 'success'}, {'text': 'to get something done on a plane flight or in a cabin in the mountains, I have to either plan ahead or stick to things I already know well. And I know I’m not the only one.\n\nUltimately, modern programmers are going to be looking things up all the time. The internet, Google and Stack Overflow are really powerful tools for accessing knowledge, and programming is fundamentally a knowledge profession. There is not reason not to use these tools—they provide so much value that avoiding them is a massive waste of time. There’s no valor in intentionally making your own life harder!', 'result': {'fake': 0.9986, 'real': 0.0014}, 'status': 'success'}], 'credits_used': 7, 'credits': 1983615, 'subscription': 0, 'content': 'Programmers don’t need to memorize anything. That’s why I gravitated towards CS when I was younger! In day-to-day work, I spend more time reading than coding: browsing documentation, skimming other parts of the codebase, Googling error messages, finding answers on Stack Overflow… And that’s just to solve the immediate problem I’m working on; I also spend time on learning deeper technical topics to expand my horizons, reading blog posts, papers and, occasionally, books.\n\nIf you filmed me working for a week or two, it would look nothing like the movies. I’d look like a slacker! The job is more about thinking than anything else, and thinking doesn’t look like work. If I were better looking and my apartment’s decor nicer, you’d mistake me for one of those ambiguously employed young professionals from American sitcoms. On the days I get the most programming done, chances are I’m sitting on my (work-supplied) Macbook at a hipster cafe, more like the stereotypical writer than a “hacker”.\n\nAnd yet, there is a smidgeon of truth to the “hacker” image you see. It’s an exaggeration and it isn’t representative, but if you catch me at my desk Emacsing frenetically, it’ll seem pretty close.\n\nI don’t go out of my way to memorize anything—I don’t have to—but over time I learn things through sheer repetition. When I started Haskell, I had to look up library functions all the time; now, almost a decade later, I simply know most of them. (I still look up documentation for less standard packages all the time though!) So when I’m ultra-focused on a task that I already understand how to do, I can code pretty much non-stop for hours without looking anything up. It isn’t common, but it happens.\n\nI mentioned Emacs for a reason. To the uninitiated, effective Emacs use is indistinguishable from magic. Emacs is colorful and exciting, it has a minimalist UI—which I intentionally tune to be even more minimal—and I have hundreds of keyboard commands in muscle memory. A full screen Emacs displaying a bunch of buffers that are constantly changing as I move around and execute commands definitely looks like a movie prop.\n\nA screenshot of how I use Emacs on a large external monitor.\n\nEmacs commands, coincidentally, were one of the few things I explicitly set out to memorize. I picked up Emacs in my senior year of high school—after getting tired of Eclipse and Notepad++—and I decided to set aside a couple of weeks of being unproductive to learn Emacs properly, using normal keybindings to do everything and never touching the arrow keys or mouse. This is not something I normally have the discipline to do, but, man, am I glad I did! Being comfortable in Emacs has been a massive productivity boost on par with learning to touch type. Occasionally looking like a real hacker is just a bonus :).\n\nBut I digress. With a handful of small exception, I have not needed to memorize anything. If I don’t remember something, I can just look it up. The only downside is that I can barely function without the internet—if I want to get something done on a plane flight or in a cabin in the mountains, I have to either plan ahead or stick to things I already know well. And I know I’m not the only one.\n\nUltimately, modern programmers are going to be looking things up all the time. The internet, Google and Stack Overflow are really powerful tools for accessing knowledge, and programming is fundamentally a knowledge profession. There is not reason not to use these tools—they provide so much value that avoiding them is a massive waste of time. There’s no valor in intentionally making your own life harder!', 'aiModelVersion': '1'}",0.5598
Jennica Pounds,4y,How does Twitter backend handle a massive amount of tweets every day?,"I will quote from a LinkedIn message from a Twitter recruiter:

“The platform handles over 500M tweets per day, 4 Trillion messages per day, and all of them are stored and accessible.” (Note: The 4T DMs part I would question; it implies something on the order of 8,000 DMs being sent per Tweet. I think the recruiter likely meant 4B.)

Anyway, raw inserts are not a problem as 500M breaks down to ~6000 inserts per second; many DBs are capable of handling that. What’s hard is partitioning. To see why, let’s take one use case: Viewing someone’s Twitter field.

In this scenario, you view someone’s (e.g., Jaden Smith
) Tweet feed. A list of that user’s Tweets are returned in chronological order.

Naively, partitioning inserts on user ID and using a time-series approach of querying by walking backwards from a partition’s ending value would work. However, here’s the challenge: queries are not well distributed. Follower count takes “long tail” to a ridiculous extreme. (source
)

I don’t know what the median Twitter follower count is, but I’d place it at about 100. Suppose you partitioned on followers so that each partition had an average of 100 users. If each user had similar tweeting habits, then on average, when querying for a feed, you skip over 99 rows for every row corresponding to the feed you want to show.

That’s not too unreasonable… but what if Barack Obama was one of those people? He has over 100 million followers
. We can assume that follower count has some correlation to “query demand” which means he is getting in the ballpark of 1 million more queries than every other user in the partition.

It would be far easier on I/O and servers if the very top tails - say, the top 100 or so followed Tweeters - had their own servers. To that end, demand partitioning is likely Twitter’s greatest scalability challenge. I’m guessing for Twitter feed viewing in particular, it goes through two tiers of partitioning: first for popularity - grouping users of similar “demand” with each other and having fewer users per partition the more popular a given partition is - and second on user ID.

There are at least three additional partitioning challenges for Tweets:

Tweets resist temporal partitioning. Tweets are not evenly distributed throughout the day. You probably are going to get a lot fewer Tweets at 2 AM than at 2 PM.
Tweets resist spatial partitioning. There are a lot more Tweets in Tokyo than in Kansas.
Tweeters do not tweet evenly. The MAU vs DAU gap suggests Twitter has a large number of infrequent users, but we all know that one friend who does a Tweet every few minutes. Hence, for I/O efficiency, popularity must also be balanced with the Tweeter’s own frequency.

To reiterate, 500M Tweets a day and lookups are easy if both write and read behavior were evenly spread around. I’m confident that Twitter’s “secret sauce” for scalability is almost entirely in optimizing their data partitioning.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/s4cxtnl6e8qjhuo2', 'title': 'How does Twitter backend handle a massive amount of tweets every day?', 'score': {'original': 0.9998, 'ai': 0.0002}, 'blocks': [{'text': 'I will quote from a LinkedIn message from a Twitter recruiter:\n\n“The platform handles over 500M tweets per day, 4 Trillion messages per day, and all of them are stored and accessible.” (Note: The 4T DMs part I would question; it implies something on the order of 8,000 DMs being sent per Tweet. I think the recruiter likely meant 4B.)\n\nAnyway, raw inserts are not a problem as 500M breaks down to ~6000 inserts per second; many DBs are capable of handling that. What’s hard is partitioning. To see why, let’s take one use case: Viewing someone’s Twitter field.\n\nIn this scenario, you view someone’s (e.g., Jaden Smith\n) Tweet feed. A list of that user’s Tweets are returned in chronological order.\n\nNaively, partitioning inserts on user ID and using a time-series approach of querying by walking backwards from a partition’s ending value would work. However, here’s the challenge: queries are not well distributed. Follower count takes “long tail” to a ridiculous extreme. (source\n)\n\nI don’t know what the median Twitter follower count is, but I’d place it at about 100. Suppose you partitioned on followers so that each partition had an average of 100 users. If each user had similar tweeting habits, then on average, when querying for a feed, you skip over 99 rows for every row corresponding to the feed you want to show.\n\nThat’s not too unreasonable… but what if Barack Obama was one of those people? He has over 100 million followers\n. We can assume that follower count has some correlation to “query demand” which means he is getting in the ballpark of 1 million more queries than every other user in the partition.\n\nIt would be far easier on I/O and servers if the very top tails - say, the top 100 or so followed Tweeters - had their own servers. To that end, demand partitioning is likely Twitter’s greatest scalability challenge. I’m guessing for Twitter feed viewing in particular, it goes through two tiers of partitioning: first for popularity - grouping users of similar “demand” with each other and having fewer users per partition the more popular a given partition is - and second on user ID.\n\nThere are at least three additional partitioning challenges for Tweets:\n\nTweets resist temporal partitioning. Tweets are not evenly distributed throughout the day. You probably are going to get a lot fewer Tweets at 2 AM than at 2 PM.\nTweets resist spatial partitioning. There are a lot more Tweets in Tokyo than in Kansas.\nTweeters do not tweet evenly. The MAU vs DAU gap suggests Twitter has a large number of infrequent users, but we all know that one friend who does a Tweet every few minutes. Hence, for I/O efficiency, popularity must also be balanced with the Tweeter’s own frequency.\n\nTo reiterate, 500M Tweets a day and lookups are easy if both write and read behavior were evenly spread around. I’m confident that Twitter’s “secret sauce” for scalability is almost entirely in optimizing their data partitioning.', 'result': {'fake': 0.0002, 'real': 0.9998}, 'status': 'success'}], 'credits_used': 6, 'credits': 1983609, 'subscription': 0, 'content': 'I will quote from a LinkedIn message from a Twitter recruiter:\n\n“The platform handles over 500M tweets per day, 4 Trillion messages per day, and all of them are stored and accessible.” (Note: The 4T DMs part I would question; it implies something on the order of 8,000 DMs being sent per Tweet. I think the recruiter likely meant 4B.)\n\nAnyway, raw inserts are not a problem as 500M breaks down to ~6000 inserts per second; many DBs are capable of handling that. What’s hard is partitioning. To see why, let’s take one use case: Viewing someone’s Twitter field.\n\nIn this scenario, you view someone’s (e.g., Jaden Smith\n) Tweet feed. A list of that user’s Tweets are returned in chronological order.\n\nNaively, partitioning inserts on user ID and using a time-series approach of querying by walking backwards from a partition’s ending value would work. However, here’s the challenge: queries are not well distributed. Follower count takes “long tail” to a ridiculous extreme. (source\n)\n\nI don’t know what the median Twitter follower count is, but I’d place it at about 100. Suppose you partitioned on followers so that each partition had an average of 100 users. If each user had similar tweeting habits, then on average, when querying for a feed, you skip over 99 rows for every row corresponding to the feed you want to show.\n\nThat’s not too unreasonable… but what if Barack Obama was one of those people? He has over 100 million followers\n. We can assume that follower count has some correlation to “query demand” which means he is getting in the ballpark of 1 million more queries than every other user in the partition.\n\nIt would be far easier on I/O and servers if the very top tails - say, the top 100 or so followed Tweeters - had their own servers. To that end, demand partitioning is likely Twitter’s greatest scalability challenge. I’m guessing for Twitter feed viewing in particular, it goes through two tiers of partitioning: first for popularity - grouping users of similar “demand” with each other and having fewer users per partition the more popular a given partition is - and second on user ID.\n\nThere are at least three additional partitioning challenges for Tweets:\n\nTweets resist temporal partitioning. Tweets are not evenly distributed throughout the day. You probably are going to get a lot fewer Tweets at 2 AM than at 2 PM.\nTweets resist spatial partitioning. There are a lot more Tweets in Tokyo than in Kansas.\nTweeters do not tweet evenly. The MAU vs DAU gap suggests Twitter has a large number of infrequent users, but we all know that one friend who does a Tweet every few minutes. Hence, for I/O efficiency, popularity must also be balanced with the Tweeter’s own frequency.\n\nTo reiterate, 500M Tweets a day and lookups are easy if both write and read behavior were evenly spread around. I’m confident that Twitter’s “secret sauce” for scalability is almost entirely in optimizing their data partitioning.', 'aiModelVersion': '1'}",0.9998
William Weir,3y,Why does Antifa.com redirect to Joe Biden's website?,Because a Trump supporter with too much money and not enough morals purchased the domain and set it to redirect to Biden’s site to convince people with too much time and not enough brains that… that… I’m not even sure what this was supposed to convince anyone of.,"{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/ztum7kq64dloehng', 'title': ""Why does Antifa.com redirect to Joe Biden's website?"", 'score': {'original': 0.4657, 'ai': 0.5343}, 'blocks': [{'text': 'Because a Trump supporter with too much money and not enough morals purchased the domain and set it to redirect to Biden’s site to convince people with too much time and not enough brains that… that… I’m not even sure what this was supposed to convince anyone of.', 'result': {'fake': 0.5343, 'real': 0.4657}, 'status': 'success'}], 'credits_used': 1, 'credits': 1983608, 'subscription': 0, 'content': 'Because a Trump supporter with too much money and not enough morals purchased the domain and set it to redirect to Biden’s site to convince people with too much time and not enough brains that… that… I’m not even sure what this was supposed to convince anyone of.', 'aiModelVersion': '1'}",0.4657
Bhavya Goyal,2y,How can I improve myself in 6 months?,"Read. Read. Read. There is nothing better than reading. I have this habit of reading at least 30–35 books every year and I have seen significant changes in my life.
Start waking up early and promise yourself to chant mantras. Maha mrityunjay mantra has helped me a lot in dealing with my problems. You can do yoga as well. It will keep you happy the entire day.
Try cooking your own meals. It will tell you a lot about your kitchen. Your kitchen is full of nutrients. Cooking is really therapeutic and helps in enhancing one’s mood.
Find happiness in smallest of the things. You can even find happiness in a cup of coffee or a glass of home made juice. Learn to stay grateful for everything.
Take yourself on solo dates, once the pandemic is over. Talk to yourself like you’re talking to someone you love. Drink coffee with yourself and cherish everything about life.
Watch sunsets and sunrise everyday. Be grateful to god for the beauty of nature. Spend time with yourself on your terrace. You will feel really happy after that.

Thank you :)

To know more about me, follow me on Instagram. Username- Iambhavyagoyal","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/sv9p4nmbc6gdaqrl', 'title': 'How can I improve myself in 6 months?', 'score': {'original': 0.9988, 'ai': 0.0012}, 'blocks': [{'text': 'Read. Read. Read. There is nothing better than reading. I have this habit of reading at least 30–35 books every year and I have seen significant changes in my life.\nStart waking up early and promise yourself to chant mantras. Maha mrityunjay mantra has helped me a lot in dealing with my problems. You can do yoga as well. It will keep you happy the entire day.\nTry cooking your own meals. It will tell you a lot about your kitchen. Your kitchen is full of nutrients. Cooking is really therapeutic and helps in enhancing one’s mood.\nFind happiness in smallest of the things. You can even find happiness in a cup of coffee or a glass of home made juice. Learn to stay grateful for everything.\nTake yourself on solo dates, once the pandemic is over. Talk to yourself like you’re talking to someone you love. Drink coffee with yourself and cherish everything about life.\nWatch sunsets and sunrise everyday. Be grateful to god for the beauty of nature. Spend time with yourself on your terrace. You will feel really happy after that.\n\nThank you :)\n\nTo know more about me, follow me on Instagram. Username- Iambhavyagoyal', 'result': {'fake': 0.0012, 'real': 0.9988}, 'status': 'success'}], 'credits_used': 2, 'credits': 1983606, 'subscription': 0, 'content': 'Read. Read. Read. There is nothing better than reading. I have this habit of reading at least 30–35 books every year and I have seen significant changes in my life.\nStart waking up early and promise yourself to chant mantras. Maha mrityunjay mantra has helped me a lot in dealing with my problems. You can do yoga as well. It will keep you happy the entire day.\nTry cooking your own meals. It will tell you a lot about your kitchen. Your kitchen is full of nutrients. Cooking is really therapeutic and helps in enhancing one’s mood.\nFind happiness in smallest of the things. You can even find happiness in a cup of coffee or a glass of home made juice. Learn to stay grateful for everything.\nTake yourself on solo dates, once the pandemic is over. Talk to yourself like you’re talking to someone you love. Drink coffee with yourself and cherish everything about life.\nWatch sunsets and sunrise everyday. Be grateful to god for the beauty of nature. Spend time with yourself on your terrace. You will feel really happy after that.\n\nThank you :)\n\nTo know more about me, follow me on Instagram. Username- Iambhavyagoyal', 'aiModelVersion': '1'}",0.9988
Brion Ye,Updated 6y,Which is the largest downloadable file currently present on the web?,"It might be slightly offtopic, but I do know of the infamous 42.zip, which is a zip file which is only 42 KB but contains 4.5 Petabytes of data when fully extracted. This incredible compression was achieved through creating text files of decent size (4.1GB) consisting completely of repeating characters. Through standard compression methods, the file size is then reduced to a couple KB. The zip files are then copied and collectively placed in yet another zip, for 5 layers of 16 zip files each. This is known as a zip bomb: Zip bomb - Wikipedia

Edit: Hey thanks for the upvotes! I was quite pleasantly surprised :P

According to Henrik (in the comments) there’s also an infinite zip file which uses recursion to produce itself, so check his comment out as well!","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/mr3fyunaevg4ksxt', 'title': 'Which is the largest downloadable file currently present on the web?', 'score': {'original': 0.9992, 'ai': 0.0008}, 'blocks': [{'text': 'It might be slightly offtopic, but I do know of the infamous 42.zip, which is a zip file which is only 42 KB but contains 4.5 Petabytes of data when fully extracted. This incredible compression was achieved through creating text files of decent size (4.1GB) consisting completely of repeating characters. Through standard compression methods, the file size is then reduced to a couple KB. The zip files are then copied and collectively placed in yet another zip, for 5 layers of 16 zip files each. This is known as a zip bomb: Zip bomb - Wikipedia\n\nEdit: Hey thanks for the upvotes! I was quite pleasantly surprised :P\n\nAccording to Henrik (in the comments) there’s also an infinite zip file which uses recursion to produce itself, so check his comment out as well!', 'result': {'fake': 0.0008, 'real': 0.9992}, 'status': 'success'}], 'credits_used': 2, 'credits': 1983604, 'subscription': 0, 'content': 'It might be slightly offtopic, but I do know of the infamous 42.zip, which is a zip file which is only 42 KB but contains 4.5 Petabytes of data when fully extracted. This incredible compression was achieved through creating text files of decent size (4.1GB) consisting completely of repeating characters. Through standard compression methods, the file size is then reduced to a couple KB. The zip files are then copied and collectively placed in yet another zip, for 5 layers of 16 zip files each. This is known as a zip bomb: Zip bomb - Wikipedia\n\nEdit: Hey thanks for the upvotes! I was quite pleasantly surprised :P\n\nAccording to Henrik (in the comments) there’s also an infinite zip file which uses recursion to produce itself, so check his comment out as well!', 'aiModelVersion': '1'}",0.9992
Aaron Adams,Updated 6y,What are some of the most complex applications you've built as a web developer?,"Okay, so you're probably referring to games, or possibly super-important data-crunching algorithms… right?

Well, mine's a bit different.

You know Windows? And Mac? Maybe Linux?

Well, have you heard of aOS? Probably not, because I rarely tell anyone about it besides my closest friends. Well, I just decided that it's time to share this. Time to get this out there. Or at least, try to.

Here I present, AaronOS (aOS), named after yours truly, because I have an A+ sense of creativity and imagination.

My personal, heavily customized desktop.

It's not so much an operating system (though it does support an API for having its own apps and such), as it is a desktop environment for the Cloud.

I've been working on this monstrosity for about 3 years now, and over time it's grown to a wopping *puke* 12,000 lines of code in the main script file.

I bet you're wondering, “What does this have to do with the Web?”

Well, it's a website. Yes, all of this is simply a website.

Pure HTML, CSS, and JavaScript. With a bit of PHP in the backend.

This thing has become my baby, and I've been updating it almost daily since I first started. The most recent update, just this morning, added animations to opening and closing windows. It's evolved quite a bit from the early days.

The oldest surviving version (0.9):

About halfway through development (1.4):

And the current version (1.9):

Oh, and you probably want a link to check it out with, eh?

EDIT: Cloud9 has recently placed a “Preview of Application” notice on the first attempt to load the link. Don’t worry, it still fully works. Just click Continue at the bottom of the page.

Loading aOS Alpha...

Couple notes:

Only guaranteed to work in the latest version of Google Chrome. (All screenshots were taken from my phone).

It can work in other browsers but will likely be buggy.

It works best on an actual computer with a keyboard and mouse than it does on a phone, but it does work for Chrome on Android.

There's also a Google Play app.

aOS - Android Apps on Google Play

Well, gotta run. Also, a small plea for help - if anybody likes it and would like to suggest ideas or bug fixes for me, I could really use the help.

Edit - Wow, 14k views and almost 200 upvotes! And it's in the Quora Digest! The OS went overnight from 25 accounts to now over 1000 accounts! I can't believe it was this well-recieved! Thank you all for checking it out, and thank everyone for their support!

Edit again - Wow again! 30k views and it just went from 400 to almost 600 upvotes in a day! Thank you all for your support! I never expected it to get this kind of traction!

Edit - fixed some grammar.

Another edit again - wow, 2.6k upvotes and 80k (i think) views! Thank you all so much for your support!

Important Edit:

As of about a month ago, AaronOS Beta has begun development and is now the main version of aOS in active development. I encourage new viewers to look at the Beta instead of the Alpha (or even both if you want to see how far it’s come since then!)

aOS Beta: Loading aOS Beta...

Thank you all for your support on this incredible journey!","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/3wky7uz92tb801nm', 'title': ""What are some of the most complex applications you've built as a web developer?"", 'score': {'original': 0.67055, 'ai': 0.32945}, 'blocks': [{'text': ""Okay, so you're probably referring to games, or possibly super-important data-crunching algorithms… right?\n\nWell, mine's a bit different.\n\nYou know Windows? And Mac? Maybe Linux?\n\nWell, have you heard of aOS? Probably not, because I rarely tell anyone about it besides my closest friends. Well, I just decided that it's time to share this. Time to get this out there. Or at least, try to.\n\nHere I present, AaronOS (aOS), named after yours truly, because I have an A+ sense of creativity and imagination.\n\nMy personal, heavily customized desktop.\n\nIt's not so much an operating system (though it does support an API for having its own apps and such), as it is a desktop environment for the Cloud.\n\nI've been working on this monstrosity for about 3 years now, and over time it's grown to a wopping *puke* 12,000 lines of code in the main script file.\n\nI bet you're wondering, “What does this have to do with the Web?”\n\nWell, it's a website. Yes, all of this is simply a website.\n\nPure HTML, CSS, and JavaScript. With a bit of PHP in the backend.\n\nThis thing has become my baby, and I've been updating it almost daily since I first started. The most recent update, just this morning, added animations to opening and closing windows. It's evolved quite a bit from the early days.\n\nThe oldest surviving version (0.9):\n\nAbout halfway through development (1.4):\n\nAnd the current version (1.9):\n\nOh, and you probably want a link to check it out with, eh?\n\nEDIT: Cloud9 has recently placed a “Preview of Application” notice on the first attempt to load the link. Don’t worry, it still fully works. Just click Continue at the bottom of the page.\n\nLoading aOS Alpha...\n\nCouple notes:\n\nOnly guaranteed to work in the latest version of Google Chrome. (All screenshots were taken from my phone).\n\nIt can work in other browsers but will likely be buggy.\n\nIt works best on an actual computer with a keyboard and mouse than it does on a phone, but it does work for Chrome on Android.\n\nThere's also a Google Play app.\n\naOS - Android Apps on Google Play\n\nWell, gotta run. Also, a small plea for help - if anybody likes it and would like to suggest ideas or bug fixes for me, I could really use the help.\n\nEdit - Wow, 14k views and almost 200 upvotes! And it's in the Quora Digest! The OS went overnight from 25 accounts to now over 1000 accounts! I can't believe it was this well-recieved! Thank you all for checking it out, and thank everyone for their support!\n\nEdit again - Wow again! 30k views and it just went from 400 to almost 600 upvotes in a day! Thank you all for your support! I never expected it to get this kind of traction!\n\nEdit - fixed some grammar.\n\nAnother edit again - wow, 2.6k upvotes and 80k (i think) views! Thank you all so much for your support!\n\nImportant Edit:\n\nAs of about a month ago, AaronOS Beta has begun development and is now the main version of aOS in active development. I encourage new viewers to look at the Beta instead of the Alpha (or even both if you want to"", 'result': {'fake': 0.1267, 'real': 0.8733}, 'status': 'success'}, {'text': 'see how far it’s come since then!)\n\naOS Beta: Loading aOS Beta...\n\nThank you all for your support on this incredible journey!', 'result': {'fake': 0.9995, 'real': 0.0005}, 'status': 'success'}], 'credits_used': 6, 'credits': 1983598, 'subscription': 0, 'content': ""Okay, so you're probably referring to games, or possibly super-important data-crunching algorithms… right?\n\nWell, mine's a bit different.\n\nYou know Windows? And Mac? Maybe Linux?\n\nWell, have you heard of aOS? Probably not, because I rarely tell anyone about it besides my closest friends. Well, I just decided that it's time to share this. Time to get this out there. Or at least, try to.\n\nHere I present, AaronOS (aOS), named after yours truly, because I have an A+ sense of creativity and imagination.\n\nMy personal, heavily customized desktop.\n\nIt's not so much an operating system (though it does support an API for having its own apps and such), as it is a desktop environment for the Cloud.\n\nI've been working on this monstrosity for about 3 years now, and over time it's grown to a wopping *puke* 12,000 lines of code in the main script file.\n\nI bet you're wondering, “What does this have to do with the Web?”\n\nWell, it's a website. Yes, all of this is simply a website.\n\nPure HTML, CSS, and JavaScript. With a bit of PHP in the backend.\n\nThis thing has become my baby, and I've been updating it almost daily since I first started. The most recent update, just this morning, added animations to opening and closing windows. It's evolved quite a bit from the early days.\n\nThe oldest surviving version (0.9):\n\nAbout halfway through development (1.4):\n\nAnd the current version (1.9):\n\nOh, and you probably want a link to check it out with, eh?\n\nEDIT: Cloud9 has recently placed a “Preview of Application” notice on the first attempt to load the link. Don’t worry, it still fully works. Just click Continue at the bottom of the page.\n\nLoading aOS Alpha...\n\nCouple notes:\n\nOnly guaranteed to work in the latest version of Google Chrome. (All screenshots were taken from my phone).\n\nIt can work in other browsers but will likely be buggy.\n\nIt works best on an actual computer with a keyboard and mouse than it does on a phone, but it does work for Chrome on Android.\n\nThere's also a Google Play app.\n\naOS - Android Apps on Google Play\n\nWell, gotta run. Also, a small plea for help - if anybody likes it and would like to suggest ideas or bug fixes for me, I could really use the help.\n\nEdit - Wow, 14k views and almost 200 upvotes! And it's in the Quora Digest! The OS went overnight from 25 accounts to now over 1000 accounts! I can't believe it was this well-recieved! Thank you all for checking it out, and thank everyone for their support!\n\nEdit again - Wow again! 30k views and it just went from 400 to almost 600 upvotes in a day! Thank you all for your support! I never expected it to get this kind of traction!\n\nEdit - fixed some grammar.\n\nAnother edit again - wow, 2.6k upvotes and 80k (i think) views! Thank you all so much for your support!\n\nImportant Edit:\n\nAs of about a month ago, AaronOS Beta has begun development and is now the main version of aOS in active development. I encourage new viewers to look at the Beta instead of the Alpha (or even both if you want to see how far it’s come since then!)\n\naOS Beta: Loading aOS Beta...\n\nThank you all for your support on this incredible journey!"", 'aiModelVersion': '1'}",0.67055
Antonio Nesic,4y,"To those who have been programming for over a decade, what new tools made your job a whole lot easier?","Hmm.

This is a very good question.

I’ve been programming for 18 years now.

First thing that comes to my mind is Stack Overflow. Now, you’ll say, it’s not a tool, but it is. It’s an invaluable source of information that people before 2008 didn’t have.

We’ve had manuals, books, and mentors (senior developers), and that’s pretty much how people learned and shared stuff before SO.

Second thing is intellisense. I know many people bash Microsoft, but Intellisense is a lifesaver. And I’m not talking just about Visual Studio, but VSCode as well.

This is what I mean. I can hover over the keyword, and I’ll get the relevant information right there. Also, it helps me finish my code, so I don't need to learn every single command or write it down.

Third thing are the IDE’s. Today, you can choose whether you want a nice code editor such as Brackets, VSCode, Atom, etc, or fully fledged IDE, JetBrains stuff, Eclipse, CodeBlocks, etc.

My editor of choice back then was Emacs (don’t start about VIM vs Emacs flamewar please, since I used both).

These days, you have a ton of stuff to choose from.

Since I mostly do backend stuff, I’ll say for Ruby and for Go, the invaluable tool for deployment were CI/CD in conjunction with Docker and Kubernetes.

Fourth thing is Linux. It has evolved so much in the last decade, that I couldn’t imagine my daily work without it. Yes, I know that a lot of guys still earn money writing software for Microsoft stack, and that’s great, but I just find Linux a sweet spot that works for me.

That brings me to the final thing.

Cloud.

When I started dynamic web programming, there was an ASP, and I’m not talking about ASP.NET | Open-source web framework for .NET
 , but good old classic ASP -> Active Server Pages - Wikipedia
 that used MS Access database. Yes, you heard me well. It didn’t use MySQL, or MSSQL or something similar. You’d attach a MS Access database to it.

And then you’d have a server, and the client. And that was it. As simple as that.

These days you have DigitalOcean, Linode, Google Cloud, AWS, Azure, etc. And all these have a ton of stuff in their arsenal to help your software scale, and work with the minimum downtime.

So, these are my 2 cents.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/3dqerfuj5y8im1o2', 'title': 'To those who have been programming for over a decade, what new tools made your job a whole lot easier?', 'score': {'original': 0.9981, 'ai': 0.0019}, 'blocks': [{'text': ""Hmm.\n\nThis is a very good question.\n\nI’ve been programming for 18 years now.\n\nFirst thing that comes to my mind is Stack Overflow. Now, you’ll say, it’s not a tool, but it is. It’s an invaluable source of information that people before 2008 didn’t have.\n\nWe’ve had manuals, books, and mentors (senior developers), and that’s pretty much how people learned and shared stuff before SO.\n\nSecond thing is intellisense. I know many people bash Microsoft, but Intellisense is a lifesaver. And I’m not talking just about Visual Studio, but VSCode as well.\n\nThis is what I mean. I can hover over the keyword, and I’ll get the relevant information right there. Also, it helps me finish my code, so I don't need to learn every single command or write it down.\n\nThird thing are the IDE’s. Today, you can choose whether you want a nice code editor such as Brackets, VSCode, Atom, etc, or fully fledged IDE, JetBrains stuff, Eclipse, CodeBlocks, etc.\n\nMy editor of choice back then was Emacs (don’t start about VIM vs Emacs flamewar please, since I used both).\n\nThese days, you have a ton of stuff to choose from.\n\nSince I mostly do backend stuff, I’ll say for Ruby and for Go, the invaluable tool for deployment were CI/CD in conjunction with Docker and Kubernetes.\n\nFourth thing is Linux. It has evolved so much in the last decade, that I couldn’t imagine my daily work without it. Yes, I know that a lot of guys still earn money writing software for Microsoft stack, and that’s great, but I just find Linux a sweet spot that works for me.\n\nThat brings me to the final thing.\n\nCloud.\n\nWhen I started dynamic web programming, there was an ASP, and I’m not talking about ASP.NET | Open-source web framework for .NET\n , but good old classic ASP -> Active Server Pages - Wikipedia\n that used MS Access database. Yes, you heard me well. It didn’t use MySQL, or MSSQL or something similar. You’d attach a MS Access database to it.\n\nAnd then you’d have a server, and the client. And that was it. As simple as that.\n\nThese days you have DigitalOcean, Linode, Google Cloud, AWS, Azure, etc. And all these have a ton of stuff in their arsenal to help your software scale, and work with the minimum downtime.\n\nSo, these are my 2 cents."", 'result': {'fake': 0.002, 'real': 0.998}, 'status': 'success'}], 'credits_used': 5, 'credits': 1983593, 'subscription': 0, 'content': ""Hmm.\n\nThis is a very good question.\n\nI’ve been programming for 18 years now.\n\nFirst thing that comes to my mind is Stack Overflow. Now, you’ll say, it’s not a tool, but it is. It’s an invaluable source of information that people before 2008 didn’t have.\n\nWe’ve had manuals, books, and mentors (senior developers), and that’s pretty much how people learned and shared stuff before SO.\n\nSecond thing is intellisense. I know many people bash Microsoft, but Intellisense is a lifesaver. And I’m not talking just about Visual Studio, but VSCode as well.\n\nThis is what I mean. I can hover over the keyword, and I’ll get the relevant information right there. Also, it helps me finish my code, so I don't need to learn every single command or write it down.\n\nThird thing are the IDE’s. Today, you can choose whether you want a nice code editor such as Brackets, VSCode, Atom, etc, or fully fledged IDE, JetBrains stuff, Eclipse, CodeBlocks, etc.\n\nMy editor of choice back then was Emacs (don’t start about VIM vs Emacs flamewar please, since I used both).\n\nThese days, you have a ton of stuff to choose from.\n\nSince I mostly do backend stuff, I’ll say for Ruby and for Go, the invaluable tool for deployment were CI/CD in conjunction with Docker and Kubernetes.\n\nFourth thing is Linux. It has evolved so much in the last decade, that I couldn’t imagine my daily work without it. Yes, I know that a lot of guys still earn money writing software for Microsoft stack, and that’s great, but I just find Linux a sweet spot that works for me.\n\nThat brings me to the final thing.\n\nCloud.\n\nWhen I started dynamic web programming, there was an ASP, and I’m not talking about ASP.NET | Open-source web framework for .NET\n , but good old classic ASP -> Active Server Pages - Wikipedia\n that used MS Access database. Yes, you heard me well. It didn’t use MySQL, or MSSQL or something similar. You’d attach a MS Access database to it.\n\nAnd then you’d have a server, and the client. And that was it. As simple as that.\n\nThese days you have DigitalOcean, Linode, Google Cloud, AWS, Azure, etc. And all these have a ton of stuff in their arsenal to help your software scale, and work with the minimum downtime.\n\nSo, these are my 2 cents."", 'aiModelVersion': '1'}",0.9981
Rana Ashish,6y,How should I maintain self-discipline?,"“Paradise Biryani”, quite a famous restaurant chain in Hyderabad for Biryani. Many of you are aware of it, once I got a chance to taste its biryani and trust me, I had never eaten such a tasty biryani before.

Now, I have complimented Paradise Biryani. Some curiosities must have been aroused in your mind, am I right? The distance between Gachhibowli (IT park of Hyderabad) and Paradise Biryani House is approximately 15 km.

Now, let us consider following assumptions :-

Two people are hungry (Not too hungry, but hungry).
Both have 500 Rupees in their pocket.
They both are living in Gachhibowli
Let us assume, that Paradise Biryani house is the best Biryani vendor in the world.

Since they have enough money and time to spend, they decided to eat Biryani in Paradise.

After travelling 5 km, first person sees “Tandoori Chicken” on the road side. He stops there and eats it.

Since he ate chicken, he got thirsty. So after travelling another 5 km he stops to have a cold drink.

And when he reaches Paradise:

Second person already finished his Biryani.
First person is not hungry anymore, but wants to taste it.
Since he wasn’t hungry at all, he didn’t enjoy the Biryani. And most of the food was wasted.

Now, I am done with my analogy.

If first person wanted to enjoy Biryani, he could have enjoyed it. If he had controlled his temptations for Tandoori.

Same goes with Self Discipline, it is directly related to temptation.

I can’t give any tips or tricks to control your temptation. Because, I can’t stop you. I can’t watch you when you are alone. I can’t monitor your doings.

“Paradise” Restaurant is like your destination. How badly you want to taste success, that depends on you.

If you want to maintain self discipline,

“You need to control your temptations.” Don’t satisfy yourself by temporary pleasures, and stay hungry until you taste your success.

Now, one more thing I want to add here.

People make mistakes, some learn from it. Some accept it as their fate, and some regret their decisions.

Sometimes, things won’t go according to the plan. You need to learn to let it go. Don’t regret your decision and keep wasting time on it.

You will have to “Move on”.

“Self-Discipline begins with the mastery of your thoughts.

If you don’t control what you think,

Then you can’t control what you do.”

PS: Instead of Biryani, concentrate on the answer. This answer is about “self discipline”. So please save yourself from the “Temptation” of commenting about Biryani, Restaurant and its quality.

If you can’t concentrate on the moral of an answer, how will you maintain self-discipline in your life?","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/r1pd5faiv24bcqoz', 'title': 'How should I maintain self-discipline?', 'score': {'original': 0.9998, 'ai': 0.0002}, 'blocks': [{'text': '“Paradise Biryani”, quite a famous restaurant chain in Hyderabad for Biryani. Many of you are aware of it, once I got a chance to taste its biryani and trust me, I had never eaten such a tasty biryani before.\n\nNow, I have complimented Paradise Biryani. Some curiosities must have been aroused in your mind, am I right? The distance between Gachhibowli (IT park of Hyderabad) and Paradise Biryani House is approximately 15 km.\n\nNow, let us consider following assumptions :-\n\nTwo people are hungry (Not too hungry, but hungry).\nBoth have 500 Rupees in their pocket.\nThey both are living in Gachhibowli\nLet us assume, that Paradise Biryani house is the best Biryani vendor in the world.\n\nSince they have enough money and time to spend, they decided to eat Biryani in Paradise.\n\nAfter travelling 5 km, first person sees “Tandoori Chicken” on the road side. He stops there and eats it.\n\nSince he ate chicken, he got thirsty. So after travelling another 5 km he stops to have a cold drink.\n\nAnd when he reaches Paradise:\n\nSecond person already finished his Biryani.\nFirst person is not hungry anymore, but wants to taste it.\nSince he wasn’t hungry at all, he didn’t enjoy the Biryani. And most of the food was wasted.\n\nNow, I am done with my analogy.\n\nIf first person wanted to enjoy Biryani, he could have enjoyed it. If he had controlled his temptations for Tandoori.\n\nSame goes with Self Discipline, it is directly related to temptation.\n\nI can’t give any tips or tricks to control your temptation. Because, I can’t stop you. I can’t watch you when you are alone. I can’t monitor your doings.\n\n“Paradise” Restaurant is like your destination. How badly you want to taste success, that depends on you.\n\nIf you want to maintain self discipline,\n\n“You need to control your temptations.” Don’t satisfy yourself by temporary pleasures, and stay hungry until you taste your success.\n\nNow, one more thing I want to add here.\n\nPeople make mistakes, some learn from it. Some accept it as their fate, and some regret their decisions.\n\nSometimes, things won’t go according to the plan. You need to learn to let it go. Don’t regret your decision and keep wasting time on it.\n\nYou will have to “Move on”.\n\n“Self-Discipline begins with the mastery of your thoughts.\n\nIf you don’t control what you think,\n\nThen you can’t control what you do.”\n\nPS: Instead of Biryani, concentrate on the answer. This answer is about “self discipline”. So please save yourself from the “Temptation” of commenting about Biryani, Restaurant and its quality.\n\nIf you can’t concentrate on the moral of an answer, how will you maintain self-discipline in your life?', 'result': {'fake': 0.0002, 'real': 0.9998}, 'status': 'success'}], 'credits_used': 5, 'credits': 1983588, 'subscription': 0, 'content': '“Paradise Biryani”, quite a famous restaurant chain in Hyderabad for Biryani. Many of you are aware of it, once I got a chance to taste its biryani and trust me, I had never eaten such a tasty biryani before.\n\nNow, I have complimented Paradise Biryani. Some curiosities must have been aroused in your mind, am I right? The distance between Gachhibowli (IT park of Hyderabad) and Paradise Biryani House is approximately 15 km.\n\nNow, let us consider following assumptions :-\n\nTwo people are hungry (Not too hungry, but hungry).\nBoth have 500 Rupees in their pocket.\nThey both are living in Gachhibowli\nLet us assume, that Paradise Biryani house is the best Biryani vendor in the world.\n\nSince they have enough money and time to spend, they decided to eat Biryani in Paradise.\n\nAfter travelling 5 km, first person sees “Tandoori Chicken” on the road side. He stops there and eats it.\n\nSince he ate chicken, he got thirsty. So after travelling another 5 km he stops to have a cold drink.\n\nAnd when he reaches Paradise:\n\nSecond person already finished his Biryani.\nFirst person is not hungry anymore, but wants to taste it.\nSince he wasn’t hungry at all, he didn’t enjoy the Biryani. And most of the food was wasted.\n\nNow, I am done with my analogy.\n\nIf first person wanted to enjoy Biryani, he could have enjoyed it. If he had controlled his temptations for Tandoori.\n\nSame goes with Self Discipline, it is directly related to temptation.\n\nI can’t give any tips or tricks to control your temptation. Because, I can’t stop you. I can’t watch you when you are alone. I can’t monitor your doings.\n\n“Paradise” Restaurant is like your destination. How badly you want to taste success, that depends on you.\n\nIf you want to maintain self discipline,\n\n“You need to control your temptations.” Don’t satisfy yourself by temporary pleasures, and stay hungry until you taste your success.\n\nNow, one more thing I want to add here.\n\nPeople make mistakes, some learn from it. Some accept it as their fate, and some regret their decisions.\n\nSometimes, things won’t go according to the plan. You need to learn to let it go. Don’t regret your decision and keep wasting time on it.\n\nYou will have to “Move on”.\n\n“Self-Discipline begins with the mastery of your thoughts.\n\nIf you don’t control what you think,\n\nThen you can’t control what you do.”\n\nPS: Instead of Biryani, concentrate on the answer. This answer is about “self discipline”. So please save yourself from the “Temptation” of commenting about Biryani, Restaurant and its quality.\n\nIf you can’t concentrate on the moral of an answer, how will you maintain self-discipline in your life?', 'aiModelVersion': '1'}",0.9998
Fabio Akita,7y,What happened to the Ruby community? Where did everybody go?,"First of all, the Ruby community is strong and not going anywhere anytime soon. What many may perceive as ""where did they go?"" is primarily because many of the original evangelists are not here anymore. Let's list some of the top ones:

Chad Fowler, once one of the co-founders of the USA Ruby community and co-founder of the original Rubyconf since faded away since he moved to Living Social and then moved away to Wunderlist. He is probably very busy with this successful german startup.
Ryan Bates, once the primary source of screencasts for Ruby and Rails, he took time off and never returned. His duties was later picked up by others such as GoRails - Ruby on Rails screencasts for Web Developers - GoRails
Gregg Pollack, once the ""Ruby vs X"" videos (parodying the old Mac vs PC commercials from Apple), founder of EnvyLabs, Envycasts, Ruby5, Ruby Heroes, and Code School, is probably busy with his business since Code School was acquired by Pluralsight.
Geoffrey Grosenbach, also once synonymous with quality screencasts also sold to Pluralsight and as far as I know is taking time off.
Yehuda Katz and Carl Lerche, once strong evangelists for Rails-alternative Merb and then strong developers of the Rails 3.0 merge, left to focus on their own startup Skylight under the Tilde services company. They are heavily invested in their own javascript framework Ember.js
José Valim, also once Rails 3.0 full time developers went away to implement his own language in the form of Elixir.
Matt Aimonetti, also once Merb evangelist, left after the Rails 3.0 to Sony and he is more interested in Go Lang these days.
Ilya Grigorik, once known as Igvita and one of the best technical writers I've seen sold his startup PostRank to Google and became Web performance engineer and W3C co-chair of web performance and he's been doing research on the Web in general.
Evan Phoenix, once Rubinius creator and evangelist, also created Puma and he is still maintaining it, he is also a RubyCentral member and RubyConf organizer if I am not mistaken, but he is less vocal about his work nowadays.
Mitchell Hashimoto, from Vagrant fame, moved to Go to do heavy work on Docker and tools around it to improve the life of devops.
Steve Klabnik, philosopher coder of the new crop, he keeps back and forth between Ruby and Rust although I think he is more involved in writing the Rust book nowadays.

There are several other recognizable names that ""vanished"" in the last 10 years. But many are still there doing heavy work and many new faces emerged. It's only natural.

You should follow people such as:

Aaron Patterson, aka Tenderlove, who was recently hired by GitHub. He is Ruby and Rails committer and he is still doing terrific work.
Richard Schneeman, at Heroku he is doing interesting work as well, in particular he helped solve a Sprockets performance problem recently.
Rafael França, former Plataformatec engineer and currently at Shopify, he is still doing a lot of maintenance of the Rails codebase.
Pat Shaughnessy, Michael Hartl and others are still doing a lot of writing (books)
Peter Cooper expanded his Ruby Inside domain into RubyFlow and many other newsletters for other languages. A most follow.
The Japanese committers never stood up as being very vocal, they silently do the heavy lifting so we can do our work. Follow people such as Koichi Sasada, now at Heroku.
Charles Nutter is still doing JRuby development and he is nowhere near done.
Brian Shirai took the Rubinius mantle and is doing some niche work down there too.
Dr. Nic is still doing a lot of under the covers work in Cloud Foundry if I am not mistaken.
Laurent Sansonetti is still doing great with RubyMotion since he left Apple, his technology allows you to write Ruby for both Android and iOS apps, a must try!
Tobias Lütke is also still going on with his successful Shopify, hosted e-commerce platform. It's possibly the oldest Rails app besides DHH's and the fact that it's still going on strong after almost 10 years is a great achievement.
Satish Talim, decade old comrade from Ruby Tutorial - Learn Ruby
 is training beginners to this day. Hundreds of Ruby developers got started because of this relentless passion to teach. Nowadays he is also teaching Go, so you should definitely follow him.

And, of course, there are more important people to list, so this is but a very short list out of the top of my head right now, not a comprehensive list.

What happened is that many startups worked out nicely, many kudos to Peepcode, Code School, PostRank, Github, Heroku, etc And many developers either moved to more managerial roles and have less time to invest in public speaking or open source, but they are there. We now have very interesting and complex platforms from Gitlab, to Spree, to Discourse and a plethora of tools available in a very mature ecosystem. Rails is approaching version 5.0-stable and DHH himself is not near giving up.

So, ""where did everybody go?"" this is part of the answer. We are not shying away and we are not ignoring the current trends in technology. Rubyists are not religious people and we go back and forth, we will use Elixir, we will use Go, we will use Javascript, and we will take the Ruby way with use wherever we go.

Activity over Github will naturally be less accelerated because most of what needed to be built is already built. The advantage is that any Ruby developer will be able to find good, stable, battle tested and reliable Rubygems that solve many of our daily problems. The half-assed stuff is mostly gone, the packages that survived are well maintained and ready to use. You should go to Ruby Toolbox, for example, pick your option and you're ready to go. We ironed out techniques, stacks, libraries, patterns and guidelines. Everybody knows what to do in the best way possible.

Other flourishing ecosystems are taking our lead in one way or the other. The Ruby ecosystem is strong right now, go ahead and use it. Of course, there are rough edges here and there, specially in niche use cases, but for the most part we solved 90% of everybody's use cases already, no need to reinvent the wheel.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/31hs0qkpg4axi2wd', 'title': 'What happened to the Ruby community? Where did everybody go?', 'score': {'original': 0.64176666666667, 'ai': 0.35823333333333}, 'blocks': [{'text': 'First of all, the Ruby community is strong and not going anywhere anytime soon. What many may perceive as ""where did they go?"" is primarily because many of the original evangelists are not here anymore. Let\'s list some of the top ones:\n\nChad Fowler, once one of the co-founders of the USA Ruby community and co-founder of the original Rubyconf since faded away since he moved to Living Social and then moved away to Wunderlist. He is probably very busy with this successful german startup.\nRyan Bates, once the primary source of screencasts for Ruby and Rails, he took time off and never returned. His duties was later picked up by others such as GoRails - Ruby on Rails screencasts for Web Developers - GoRails\nGregg Pollack, once the ""Ruby vs X"" videos (parodying the old Mac vs PC commercials from Apple), founder of EnvyLabs, Envycasts, Ruby5, Ruby Heroes, and Code School, is probably busy with his business since Code School was acquired by Pluralsight.\nGeoffrey Grosenbach, also once synonymous with quality screencasts also sold to Pluralsight and as far as I know is taking time off.\nYehuda Katz and Carl Lerche, once strong evangelists for Rails-alternative Merb and then strong developers of the Rails 3.0 merge, left to focus on their own startup Skylight under the Tilde services company. They are heavily invested in their own javascript framework Ember.js\nJosé Valim, also once Rails 3.0 full time developers went away to implement his own language in the form of Elixir.\nMatt Aimonetti, also once Merb evangelist, left after the Rails 3.0 to Sony and he is more interested in Go Lang these days.\nIlya Grigorik, once known as Igvita and one of the best technical writers I\'ve seen sold his startup PostRank to Google and became Web performance engineer and W3C co-chair of web performance and he\'s been doing research on the Web in general.\nEvan Phoenix, once Rubinius creator and evangelist, also created Puma and he is still maintaining it, he is also a RubyCentral member and RubyConf organizer if I am not mistaken, but he is less vocal about his work nowadays.\nMitchell Hashimoto, from Vagrant fame, moved to Go to do heavy work on Docker and tools around it to improve the life of devops.\nSteve Klabnik, philosopher coder of the new crop, he keeps back and forth between Ruby and Rust although I think he is more involved in writing the Rust book nowadays.\n\nThere are several other recognizable names that ""vanished"" in the last 10 years. But many are still there doing heavy work and many new faces emerged. It\'s only natural.\n\nYou should follow people such as:\n\nAaron Patterson, aka Tenderlove, who was recently hired by GitHub. He is Ruby and Rails committer and he is still doing terrific work.\nRichard Schneeman, at Heroku he is doing interesting work as well, in particular he helped solve a Sprockets performance problem recently.\nRafael França, former Plataformatec engineer and currently at Shopify, he is still doing a lot of maintenance of the Rails codebase.\nPat Shaughnessy, Michael Hartl and others are still doing a lot of writing (books)\nPeter Cooper expanded his Ruby Inside domain', 'result': {'fake': 0.0138, 'real': 0.9862}, 'status': 'success'}, {'text': 'into RubyFlow and many other newsletters for other languages. A most follow.\nThe Japanese committers never stood up as being very vocal, they silently do the heavy lifting so we can do our work. Follow people such as Koichi Sasada, now at Heroku.\nCharles Nutter is still doing JRuby development and he is nowhere near done.\nBrian Shirai took the Rubinius mantle and is doing some niche work down there too.\nDr. Nic is still doing a lot of under the covers work in Cloud Foundry if I am not mistaken.\nLaurent Sansonetti is still doing great with RubyMotion since he left Apple, his technology allows you to write Ruby for both Android and iOS apps, a must try!\nTobias Lütke is also still going on with his successful Shopify, hosted e-commerce platform. It\'s possibly the oldest Rails app besides DHH\'s and the fact that it\'s still going on strong after almost 10 years is a great achievement.\nSatish Talim, decade old comrade from Ruby Tutorial - Learn Ruby\n is training beginners to this day. Hundreds of Ruby developers got started because of this relentless passion to teach. Nowadays he is also teaching Go, so you should definitely follow him.\n\nAnd, of course, there are more important people to list, so this is but a very short list out of the top of my head right now, not a comprehensive list.\n\nWhat happened is that many startups worked out nicely, many kudos to Peepcode, Code School, PostRank, Github, Heroku, etc And many developers either moved to more managerial roles and have less time to invest in public speaking or open source, but they are there. We now have very interesting and complex platforms from Gitlab, to Spree, to Discourse and a plethora of tools available in a very mature ecosystem. Rails is approaching version 5.0-stable and DHH himself is not near giving up.\n\nSo, ""where did everybody go?"" this is part of the answer. We are not shying away and we are not ignoring the current trends in technology. Rubyists are not religious people and we go back and forth, we will use Elixir, we will use Go, we will use Javascript, and we will take the Ruby way with use wherever we go.\n\nActivity over Github will naturally be less accelerated because most of what needed to be built is already built. The advantage is that any Ruby developer will be able to find good, stable, battle tested and reliable Rubygems that solve many of our daily problems. The half-assed stuff is mostly gone, the packages that survived are well maintained and ready to use. You should go to Ruby Toolbox, for example, pick your option and you\'re ready to go. We ironed out techniques, stacks, libraries, patterns and guidelines. Everybody knows what to do in the best way possible.\n\nOther flourishing ecosystems are taking our lead in one way or the other. The Ruby ecosystem is strong right now, go ahead and use it. Of course, there are rough edges here and there, specially in niche use cases, but for the most part we solved 90% of everybody\'s use cases already, no', 'result': {'fake': 0.2571, 'real': 0.7429}, 'status': 'success'}, {'text': 'need to reinvent the wheel.', 'result': {'fake': 1, 'real': 0}, 'status': 'success'}], 'credits_used': 11, 'credits': 1983577, 'subscription': 0, 'content': 'First of all, the Ruby community is strong and not going anywhere anytime soon. What many may perceive as ""where did they go?"" is primarily because many of the original evangelists are not here anymore. Let\'s list some of the top ones:\n\nChad Fowler, once one of the co-founders of the USA Ruby community and co-founder of the original Rubyconf since faded away since he moved to Living Social and then moved away to Wunderlist. He is probably very busy with this successful german startup.\nRyan Bates, once the primary source of screencasts for Ruby and Rails, he took time off and never returned. His duties was later picked up by others such as GoRails - Ruby on Rails screencasts for Web Developers - GoRails\nGregg Pollack, once the ""Ruby vs X"" videos (parodying the old Mac vs PC commercials from Apple), founder of EnvyLabs, Envycasts, Ruby5, Ruby Heroes, and Code School, is probably busy with his business since Code School was acquired by Pluralsight.\nGeoffrey Grosenbach, also once synonymous with quality screencasts also sold to Pluralsight and as far as I know is taking time off.\nYehuda Katz and Carl Lerche, once strong evangelists for Rails-alternative Merb and then strong developers of the Rails 3.0 merge, left to focus on their own startup Skylight under the Tilde services company. They are heavily invested in their own javascript framework Ember.js\nJosé Valim, also once Rails 3.0 full time developers went away to implement his own language in the form of Elixir.\nMatt Aimonetti, also once Merb evangelist, left after the Rails 3.0 to Sony and he is more interested in Go Lang these days.\nIlya Grigorik, once known as Igvita and one of the best technical writers I\'ve seen sold his startup PostRank to Google and became Web performance engineer and W3C co-chair of web performance and he\'s been doing research on the Web in general.\nEvan Phoenix, once Rubinius creator and evangelist, also created Puma and he is still maintaining it, he is also a RubyCentral member and RubyConf organizer if I am not mistaken, but he is less vocal about his work nowadays.\nMitchell Hashimoto, from Vagrant fame, moved to Go to do heavy work on Docker and tools around it to improve the life of devops.\nSteve Klabnik, philosopher coder of the new crop, he keeps back and forth between Ruby and Rust although I think he is more involved in writing the Rust book nowadays.\n\nThere are several other recognizable names that ""vanished"" in the last 10 years. But many are still there doing heavy work and many new faces emerged. It\'s only natural.\n\nYou should follow people such as:\n\nAaron Patterson, aka Tenderlove, who was recently hired by GitHub. He is Ruby and Rails committer and he is still doing terrific work.\nRichard Schneeman, at Heroku he is doing interesting work as well, in particular he helped solve a Sprockets performance problem recently.\nRafael França, former Plataformatec engineer and currently at Shopify, he is still doing a lot of maintenance of the Rails codebase.\nPat Shaughnessy, Michael Hartl and others are still doing a lot of writing (books)\nPeter Cooper expanded his Ruby Inside domain into RubyFlow and many other newsletters for other languages. A most follow.\nThe Japanese committers never stood up as being very vocal, they silently do the heavy lifting so we can do our work. Follow people such as Koichi Sasada, now at Heroku.\nCharles Nutter is still doing JRuby development and he is nowhere near done.\nBrian Shirai took the Rubinius mantle and is doing some niche work down there too.\nDr. Nic is still doing a lot of under the covers work in Cloud Foundry if I am not mistaken.\nLaurent Sansonetti is still doing great with RubyMotion since he left Apple, his technology allows you to write Ruby for both Android and iOS apps, a must try!\nTobias Lütke is also still going on with his successful Shopify, hosted e-commerce platform. It\'s possibly the oldest Rails app besides DHH\'s and the fact that it\'s still going on strong after almost 10 years is a great achievement.\nSatish Talim, decade old comrade from Ruby Tutorial - Learn Ruby\n is training beginners to this day. Hundreds of Ruby developers got started because of this relentless passion to teach. Nowadays he is also teaching Go, so you should definitely follow him.\n\nAnd, of course, there are more important people to list, so this is but a very short list out of the top of my head right now, not a comprehensive list.\n\nWhat happened is that many startups worked out nicely, many kudos to Peepcode, Code School, PostRank, Github, Heroku, etc And many developers either moved to more managerial roles and have less time to invest in public speaking or open source, but they are there. We now have very interesting and complex platforms from Gitlab, to Spree, to Discourse and a plethora of tools available in a very mature ecosystem. Rails is approaching version 5.0-stable and DHH himself is not near giving up.\n\nSo, ""where did everybody go?"" this is part of the answer. We are not shying away and we are not ignoring the current trends in technology. Rubyists are not religious people and we go back and forth, we will use Elixir, we will use Go, we will use Javascript, and we will take the Ruby way with use wherever we go.\n\nActivity over Github will naturally be less accelerated because most of what needed to be built is already built. The advantage is that any Ruby developer will be able to find good, stable, battle tested and reliable Rubygems that solve many of our daily problems. The half-assed stuff is mostly gone, the packages that survived are well maintained and ready to use. You should go to Ruby Toolbox, for example, pick your option and you\'re ready to go. We ironed out techniques, stacks, libraries, patterns and guidelines. Everybody knows what to do in the best way possible.\n\nOther flourishing ecosystems are taking our lead in one way or the other. The Ruby ecosystem is strong right now, go ahead and use it. Of course, there are rough edges here and there, specially in niche use cases, but for the most part we solved 90% of everybody\'s use cases already, no need to reinvent the wheel.', 'aiModelVersion': '1'}",0.64176666666667
Alan Mellor,4y,What are the biggest needs of developers when coding? What modules should the ideal tool provide?,"Quiet. Just shut up for goodness sake when you are nearby. Especially if you have a ‘talky’ job. We can’t think and overhear at the same time
Support. It’s amazing how combative some environments can be. Our job is 80% creative. You can’t create when you’re being berated, harassed, nagged or whatever cajoling trick is going on today
Web Access. Look, I know you’ve got security concerns - but I really, really need access to technical information. At the last gig, I wanted to share an example of design from my blog with a junior: it was blocked.
Time. We can’t do it twice as fast. Really. Honestly. We can’t.
Slack. Not the famous messaging tool - just actual space in the schedule, like the Tom DeMarco book. Space to think, to re-work, to tackle tech debt. And to be stuck. We get stuck a lot.
Comfort. We’re not Marines. Thinking is hard when you are cramped, cold/hot, wet, can’t move around

None of that is to do with machinery. A computer that is comfortable to type on, easy to view and doesn’t get in the way of any workflows is good enough.

My personal request is physical space and acceptance to move around. I just cannot sit still at a desk all day and ‘think’. I need to move about. I cannot stand being judged for ‘not being at my desk’. Does my mind only work when it is less than one metre away from a plank of wood? No, it has no such limitation.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/uq5gb28z9xrwtfpo', 'title': 'What are the biggest needs of developers when coding? What modules should the ideal tool provide?', 'score': {'original': 0.9997, 'ai': 0.0003}, 'blocks': [{'text': 'Quiet. Just shut up for goodness sake when you are nearby. Especially if you have a ‘talky’ job. We can’t think and overhear at the same time\nSupport. It’s amazing how combative some environments can be. Our job is 80% creative. You can’t create when you’re being berated, harassed, nagged or whatever cajoling trick is going on today\nWeb Access. Look, I know you’ve got security concerns - but I really, really need access to technical information. At the last gig, I wanted to share an example of design from my blog with a junior: it was blocked.\nTime. We can’t do it twice as fast. Really. Honestly. We can’t.\nSlack. Not the famous messaging tool - just actual space in the schedule, like the Tom DeMarco book. Space to think, to re-work, to tackle tech debt. And to be stuck. We get stuck a lot.\nComfort. We’re not Marines. Thinking is hard when you are cramped, cold/hot, wet, can’t move around\n\nNone of that is to do with machinery. A computer that is comfortable to type on, easy to view and doesn’t get in the way of any workflows is good enough.\n\nMy personal request is physical space and acceptance to move around. I just cannot sit still at a desk all day and ‘think’. I need to move about. I cannot stand being judged for ‘not being at my desk’. Does my mind only work when it is less than one metre away from a plank of wood? No, it has no such limitation.', 'result': {'fake': 0.0003, 'real': 0.9997}, 'status': 'success'}], 'credits_used': 3, 'credits': 1983574, 'subscription': 0, 'content': 'Quiet. Just shut up for goodness sake when you are nearby. Especially if you have a ‘talky’ job. We can’t think and overhear at the same time\nSupport. It’s amazing how combative some environments can be. Our job is 80% creative. You can’t create when you’re being berated, harassed, nagged or whatever cajoling trick is going on today\nWeb Access. Look, I know you’ve got security concerns - but I really, really need access to technical information. At the last gig, I wanted to share an example of design from my blog with a junior: it was blocked.\nTime. We can’t do it twice as fast. Really. Honestly. We can’t.\nSlack. Not the famous messaging tool - just actual space in the schedule, like the Tom DeMarco book. Space to think, to re-work, to tackle tech debt. And to be stuck. We get stuck a lot.\nComfort. We’re not Marines. Thinking is hard when you are cramped, cold/hot, wet, can’t move around\n\nNone of that is to do with machinery. A computer that is comfortable to type on, easy to view and doesn’t get in the way of any workflows is good enough.\n\nMy personal request is physical space and acceptance to move around. I just cannot sit still at a desk all day and ‘think’. I need to move about. I cannot stand being judged for ‘not being at my desk’. Does my mind only work when it is less than one metre away from a plank of wood? No, it has no such limitation.', 'aiModelVersion': '1'}",0.9997
Ben Podgursky,Updated 4y,What's a single line of code that almost caused a catastrophe?,"if ((options == (__WCLONE|__WALL)) && (current->uid = 0)) 
        retval = -EINVAL; 

Source: The Linux Backdoor Attempt of 2003

The source article is a well-written summary (you should just read it), so I’ll keep this brief:

Someone hacked into the Linux CVS repository (for those who are very young here: CVS is kind of like Git, if Git was implemented as a single-use bathroom stall which also didn’t flush) and modified the source tree.

They inserted a patch with these two line of code. On first reading, it looks like a harmless error check to return an error message when the function is called wrong. On second pass…

The code takes advantage of one of the worst language design decisions in history (worse than Esperanto. worse than the Oxford comma): the use of “==” for equality checking, and “=” for assignment. This would have been perfectly valid:

current->uid == 0 

but this…

current->uid = 0 

well… instead of returning the error message, it escalates the caller to root (aka user 0. aka God.). Whoopsie.

This, if it made it into a production build, would have introduced a privilege escalation attack onto every Linux machine. So… everywhere of even mild importance.

Luckily this got caught by an observant dev during a source-control migration; if it hadn’t been caught then, static analysis checking would have found it eventually. But in the interim, every production server and embedded system in the world (okay, it was 2003, so Linux wasn’t a universal standard yet… but it was already important) would have been wide open to pesky hackers.

Good catch.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/5suhdoy12gm3ewba', 'title': ""What's a single line of code that almost caused a catastrophe?"", 'score': {'original': 0.9998, 'ai': 0.0002}, 'blocks': [{'text': 'if ((options == (__WCLONE|__WALL)) && (current->uid = 0))\xa0\n        retval = -EINVAL;\xa0\n\nSource: The Linux Backdoor Attempt of 2003\n\nThe source article is a well-written summary (you should just read it), so I’ll keep this brief:\n\nSomeone hacked into the Linux CVS repository (for those who are very young here: CVS is kind of like Git, if Git was implemented as a single-use bathroom stall which also didn’t flush) and modified the source tree.\n\nThey inserted a patch with these two line of code. On first reading, it looks like a harmless error check to return an error message when the function is called wrong. On second pass…\n\nThe code takes advantage of one of the worst language design decisions in history (worse than Esperanto. worse than the Oxford comma): the use of “==” for equality checking, and “=” for assignment. This would have been perfectly valid:\n\ncurrent->uid == 0\xa0\n\nbut this…\n\ncurrent->uid = 0\xa0\n\nwell… instead of returning the error message, it escalates the caller to root (aka user 0. aka God.). Whoopsie.\n\nThis, if it made it into a production build, would have introduced a privilege escalation attack onto every Linux machine. So… everywhere of even mild importance.\n\nLuckily this got caught by an observant dev during a source-control migration; if it hadn’t been caught then, static analysis checking would have found it eventually. But in the interim, every production server and embedded system in the world (okay, it was 2003, so Linux wasn’t a universal standard yet… but it was already important) would have been wide open to pesky hackers.\n\nGood catch.', 'result': {'fake': 0.0002, 'real': 0.9998}, 'status': 'success'}], 'credits_used': 3, 'credits': 1983571, 'subscription': 0, 'content': 'if ((options == (__WCLONE|__WALL)) && (current->uid = 0))\xa0\n        retval = -EINVAL;\xa0\n\nSource: The Linux Backdoor Attempt of 2003\n\nThe source article is a well-written summary (you should just read it), so I’ll keep this brief:\n\nSomeone hacked into the Linux CVS repository (for those who are very young here: CVS is kind of like Git, if Git was implemented as a single-use bathroom stall which also didn’t flush) and modified the source tree.\n\nThey inserted a patch with these two line of code. On first reading, it looks like a harmless error check to return an error message when the function is called wrong. On second pass…\n\nThe code takes advantage of one of the worst language design decisions in history (worse than Esperanto. worse than the Oxford comma): the use of “==” for equality checking, and “=” for assignment. This would have been perfectly valid:\n\ncurrent->uid == 0\xa0\n\nbut this…\n\ncurrent->uid = 0\xa0\n\nwell… instead of returning the error message, it escalates the caller to root (aka user 0. aka God.). Whoopsie.\n\nThis, if it made it into a production build, would have introduced a privilege escalation attack onto every Linux machine. So… everywhere of even mild importance.\n\nLuckily this got caught by an observant dev during a source-control migration; if it hadn’t been caught then, static analysis checking would have found it eventually. But in the interim, every production server and embedded system in the world (okay, it was 2003, so Linux wasn’t a universal standard yet… but it was already important) would have been wide open to pesky hackers.\n\nGood catch.', 'aiModelVersion': '1'}",0.9998
Aladin Bensassi,Updated 7y,How does a backend developer get rid of her or his disgust for CSS? Are there any tips on being able to debug CSS and multi-browser functionality?,"I really can’t understand why so many developers hate CSS. It really drives me crazy. I’ve been a developer for the better part of my life, and probably worked on every web technology there is at some point, and the only one I truly enjoy enough to consider a hobby is CSS. I probably enjoy working on CSS more than anything else, and I’m a full-stack developer who does his own designs.

Here are a few stuff I created with pure CSS. It should demonstrate to you, how strong and limitless it truly is:

You can learn everything about CSS by practicing it. To be honest, for a normal website there aren't that many proprieties that you need to know. Mostly you'll only need these:

For Typography:

h1{ 
font-family:Arial; /* Name of the font */ 
font-style: Normal; /* Style of the font, you can also use Italic/oblique */  
font-weight: Normal; /* Weight of the font, you can also use bold/bolder/lighter/number */  
font-size: 18px; /* Size of the font */ 
text-align: Center; /* Alignment of the text you can also use left/right */ 
line-height: 18px; /* Vertical space between lines, its very useful when it comes to centering text vertically in a div */ 
letter-spacing: 2px; /* Spacing between letter */ 
word-spacing: 2px; /* Spacing between words */ 
} 

And you won't even need all of them most of the time.

For Alignment:

div{ 
width:100px; /* Width of div */ 
height: 100px; /* Height of div */ 
margin-top:20px; /* This is the margin between a div and its parents, you can also use margin-right/margin-bot/margin-left */ 
padding-left:10px; /* This is the margin of the content inside the div, you can use padding-top/padding-right/padding-bottom */ 
float:left; /* The alignment of the div, you can also use right/none */ 
position:relative; /* Position of the div, relative to its parent, you can also use absolute/fixed */ 
} 

Most of these are very basic properties and I doubt that you'll have any problem remembering them.

For Backgrounds:

div{ 
background-color: #e74c3c; /* Color of the background */ 
background-image: url(../img/bg-1.jpg); /* Background image of the div */ 
background-size: 1600px 800px; /* Size of the background, you can also use 'cover' so it would cover the size of the div */ 
background-repeat: no-repeat; /* Whether you want the background to be repeated or not, you can also use repeat/repeat-x/repeat-y */ 
background-attachment: scroll; /* This property sets whether a background image is fixed or scrolls with the rest of the page, you can also use fixed/local */ 
} 

These are all the background properties for CSS.

The ones I mentioned above are the properties that you'll use the most while coding websites, and you can master them very easily with a bit of practice. Below I'll leave some other properties that you might also find useful.

Useful:

div{ 
cursor:pointer; /* Type of mouse cursor when you hover it */ 
clear: both; /* If a previous element is set to float left or right, the next div you create might be on the same line, so in order to avoid that, you can use the clear property, you can also use left/right */ 
Overflow: hidden; /* Everything that goes beyond the div's limits is hidden, you can also use scroll/scroll-x/scroll-y */ 
display: inline-block; /* This property specifies the type of box used for an HTML element, you can also use inline/block/flex/inline-flex... */ 
} 

I can think of a thousand other property that you might need, but for now these should do! You can save my answer for reference or contact me whenever you have a question and I'll be more than happy to write back to you once I have the time!","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/6lr1e3a5qxt2npif', 'title': 'How does a backend developer get rid of her or his disgust for CSS? Are there any tips on being able to debug CSS and multi-browser functionality?', 'score': {'original': 0.46345, 'ai': 0.53655}, 'blocks': [{'text': ""I really can’t understand why so many developers hate CSS. It really drives me crazy. I’ve been a developer for the better part of my life, and probably worked on every web technology there is at some point, and the only one I truly enjoy enough to consider a hobby is CSS. I probably enjoy working on CSS more than anything else, and I’m a full-stack developer who does his own designs.\n\nHere are a few stuff I created with pure CSS. It should demonstrate to you, how strong and limitless it truly is:\n\nYou can learn everything about CSS by practicing it. To be honest, for a normal website there aren't that many proprieties that you need to know. Mostly you'll only need these:\n\nFor Typography:\n\nh1{\xa0\nfont-family:Arial; /* Name of the font */\xa0\nfont-style: Normal; /* Style of the font, you can also use Italic/oblique */ \xa0\nfont-weight: Normal; /* Weight of the font, you can also use bold/bolder/lighter/number */ \xa0\nfont-size: 18px; /* Size of the font */\xa0\ntext-align: Center; /* Alignment of the text you can also use left/right */\xa0\nline-height: 18px; /* Vertical space between lines, its very useful when it comes to centering text vertically in a div */\xa0\nletter-spacing: 2px; /* Spacing between letter */\xa0\nword-spacing: 2px; /* Spacing between words */\xa0\n}\xa0\n\nAnd you won't even need all of them most of the time.\n\nFor Alignment:\n\ndiv{\xa0\nwidth:100px; /* Width of div */\xa0\nheight: 100px; /* Height of div */\xa0\nmargin-top:20px; /* This is the margin between a div and its parents, you can also use margin-right/margin-bot/margin-left */\xa0\npadding-left:10px; /* This is the margin of the content inside the div, you can use padding-top/padding-right/padding-bottom */\xa0\nfloat:left; /* The alignment of the div, you can also use right/none */\xa0\nposition:relative; /* Position of the div, relative to its parent, you can also use absolute/fixed */\xa0\n}\xa0\n\nMost of these are very basic properties and I doubt that you'll have any problem remembering them.\n\nFor Backgrounds:\n\ndiv{\xa0\nbackground-color: #e74c3c; /* Color of the background */\xa0\nbackground-image: url(../img/bg-1.jpg); /* Background image of the div */\xa0\nbackground-size: 1600px 800px; /* Size of the background, you can also use 'cover' so it would cover the size of the div */\xa0\nbackground-repeat: no-repeat; /* Whether you want the background to be repeated or not, you can also use repeat/repeat-x/repeat-y */\xa0\nbackground-attachment: scroll; /* This property sets whether a background image is fixed or scrolls with the rest of the page, you can also use fixed/local */\xa0\n}\xa0\n\nThese are all the background properties for CSS.\n\nThe ones I mentioned above are the properties that you'll use the most while coding websites, and you can master them very easily with a bit of practice. Below I'll leave some other properties that you might also find useful.\n\nUseful:\n\ndiv{\xa0\ncursor:pointer; /* Type of mouse cursor when you hover it */\xa0\nclear: both; /* If a previous element is set to float left or right, the next div you create might be on the same line, so in order to avoid that, you can use the clear property, you can also use left/right */\xa0\nOverflow: hidden; /* Everything that goes beyond the div's limits is hidden, you can also use scroll/scroll-x/scroll-y */\xa0\ndisplay: inline-block; /* This property specifies the type of box used"", 'result': {'fake': 0.0095, 'real': 0.9905}, 'status': 'success'}, {'text': ""for an HTML element, you can also use inline/block/flex/inline-flex... */\xa0\n}\xa0\n\nI can think of a thousand other property that you might need, but for now these should do! You can save my answer for reference or contact me whenever you have a question and I'll be more than happy to write back to you once I have the time!"", 'result': {'fake': 0.9982, 'real': 0.0018}, 'status': 'success'}], 'credits_used': 6, 'credits': 1983565, 'subscription': 0, 'content': ""I really can’t understand why so many developers hate CSS. It really drives me crazy. I’ve been a developer for the better part of my life, and probably worked on every web technology there is at some point, and the only one I truly enjoy enough to consider a hobby is CSS. I probably enjoy working on CSS more than anything else, and I’m a full-stack developer who does his own designs.\n\nHere are a few stuff I created with pure CSS. It should demonstrate to you, how strong and limitless it truly is:\n\nYou can learn everything about CSS by practicing it. To be honest, for a normal website there aren't that many proprieties that you need to know. Mostly you'll only need these:\n\nFor Typography:\n\nh1{\xa0\nfont-family:Arial; /* Name of the font */\xa0\nfont-style: Normal; /* Style of the font, you can also use Italic/oblique */ \xa0\nfont-weight: Normal; /* Weight of the font, you can also use bold/bolder/lighter/number */ \xa0\nfont-size: 18px; /* Size of the font */\xa0\ntext-align: Center; /* Alignment of the text you can also use left/right */\xa0\nline-height: 18px; /* Vertical space between lines, its very useful when it comes to centering text vertically in a div */\xa0\nletter-spacing: 2px; /* Spacing between letter */\xa0\nword-spacing: 2px; /* Spacing between words */\xa0\n}\xa0\n\nAnd you won't even need all of them most of the time.\n\nFor Alignment:\n\ndiv{\xa0\nwidth:100px; /* Width of div */\xa0\nheight: 100px; /* Height of div */\xa0\nmargin-top:20px; /* This is the margin between a div and its parents, you can also use margin-right/margin-bot/margin-left */\xa0\npadding-left:10px; /* This is the margin of the content inside the div, you can use padding-top/padding-right/padding-bottom */\xa0\nfloat:left; /* The alignment of the div, you can also use right/none */\xa0\nposition:relative; /* Position of the div, relative to its parent, you can also use absolute/fixed */\xa0\n}\xa0\n\nMost of these are very basic properties and I doubt that you'll have any problem remembering them.\n\nFor Backgrounds:\n\ndiv{\xa0\nbackground-color: #e74c3c; /* Color of the background */\xa0\nbackground-image: url(../img/bg-1.jpg); /* Background image of the div */\xa0\nbackground-size: 1600px 800px; /* Size of the background, you can also use 'cover' so it would cover the size of the div */\xa0\nbackground-repeat: no-repeat; /* Whether you want the background to be repeated or not, you can also use repeat/repeat-x/repeat-y */\xa0\nbackground-attachment: scroll; /* This property sets whether a background image is fixed or scrolls with the rest of the page, you can also use fixed/local */\xa0\n}\xa0\n\nThese are all the background properties for CSS.\n\nThe ones I mentioned above are the properties that you'll use the most while coding websites, and you can master them very easily with a bit of practice. Below I'll leave some other properties that you might also find useful.\n\nUseful:\n\ndiv{\xa0\ncursor:pointer; /* Type of mouse cursor when you hover it */\xa0\nclear: both; /* If a previous element is set to float left or right, the next div you create might be on the same line, so in order to avoid that, you can use the clear property, you can also use left/right */\xa0\nOverflow: hidden; /* Everything that goes beyond the div's limits is hidden, you can also use scroll/scroll-x/scroll-y */\xa0\ndisplay: inline-block; /* This property specifies the type of box used for an HTML element, you can also use inline/block/flex/inline-flex... */\xa0\n}\xa0\n\nI can think of a thousand other property that you might need, but for now these should do! You can save my answer for reference or contact me whenever you have a question and I'll be more than happy to write back to you once I have the time!"", 'aiModelVersion': '1'}",0.46345
Phillip McMullen,Updated 6y,Why are developers so obsessed with full stack title?,"Here's why. Let me walk you through a call with a recruiter if you've never had the unfortunate experience before:

Recruiter: Now it says here you have experience with HTML, CSS, JQuery, JavaScript, SQL, C#, and NodeJS and that you are familiar with setup and administration of Linux and Windows servers.

Me: Yes that's correct.

Recruiter: Hmm okay, I’m just trying to determine if this role would work for you. It's for a Full Stack position, are you familiar with Full Stack work?

Me: …yes

Recruiter: Oh okay perfect, it's not on your resume so I wasn't sure. Can you add it? Now they are looking for someone that can do CSS but you only have CSS3, are you familiar with CSS too?

Me: …

This is why we strive for any sort of role that becomes the new buzzword of the business community. Soon it will be AI Afficionado just so the HR manager looking at the resume gets a little bit of excitement thinking they found the one instead of the 30yr developer in the pile next to them that contributed to Linux and has been programming since 8bit computers.

Update 1/25/2018: Wow! Not a ton of upvotes but it is for me. Judging by the comments this issue has plagued the IT industry unfortunately. This on top of recruiters that try to push your requested salary down so they can get their margin just makes the IT recruiting that much more of a pain.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/8e046yrqmdwtpci3', 'title': 'Why are developers so obsessed with full stack title?', 'score': {'original': 0.9985, 'ai': 0.0015}, 'blocks': [{'text': ""Here's why. Let me walk you through a call with a recruiter if you've never had the unfortunate experience before:\n\nRecruiter: Now it says here you have experience with HTML, CSS, JQuery, JavaScript, SQL, C#, and NodeJS and that you are familiar with setup and administration of Linux and Windows servers.\n\nMe: Yes that's correct.\n\nRecruiter: Hmm okay, I’m just trying to determine if this role would work for you. It's for a Full Stack position, are you familiar with Full Stack work?\n\nMe: …yes\n\nRecruiter: Oh okay perfect, it's not on your resume so I wasn't sure. Can you add it? Now they are looking for someone that can do CSS but you only have CSS3, are you familiar with CSS too?\n\nMe: …\n\nThis is why we strive for any sort of role that becomes the new buzzword of the business community. Soon it will be AI Afficionado just so the HR manager looking at the resume gets a little bit of excitement thinking they found the one instead of the 30yr developer in the pile next to them that contributed to Linux and has been programming since 8bit computers.\n\nUpdate 1/25/2018: Wow! Not a ton of upvotes but it is for me. Judging by the comments this issue has plagued the IT industry unfortunately. This on top of recruiters that try to push your requested salary down so they can get their margin just makes the IT recruiting that much more of a pain."", 'result': {'fake': 0.0015, 'real': 0.9985}, 'status': 'success'}], 'credits_used': 3, 'credits': 1983562, 'subscription': 0, 'content': ""Here's why. Let me walk you through a call with a recruiter if you've never had the unfortunate experience before:\n\nRecruiter: Now it says here you have experience with HTML, CSS, JQuery, JavaScript, SQL, C#, and NodeJS and that you are familiar with setup and administration of Linux and Windows servers.\n\nMe: Yes that's correct.\n\nRecruiter: Hmm okay, I’m just trying to determine if this role would work for you. It's for a Full Stack position, are you familiar with Full Stack work?\n\nMe: …yes\n\nRecruiter: Oh okay perfect, it's not on your resume so I wasn't sure. Can you add it? Now they are looking for someone that can do CSS but you only have CSS3, are you familiar with CSS too?\n\nMe: …\n\nThis is why we strive for any sort of role that becomes the new buzzword of the business community. Soon it will be AI Afficionado just so the HR manager looking at the resume gets a little bit of excitement thinking they found the one instead of the 30yr developer in the pile next to them that contributed to Linux and has been programming since 8bit computers.\n\nUpdate 1/25/2018: Wow! Not a ton of upvotes but it is for me. Judging by the comments this issue has plagued the IT industry unfortunately. This on top of recruiters that try to push your requested salary down so they can get their margin just makes the IT recruiting that much more of a pain."", 'aiModelVersion': '1'}",0.9985
Greg Moore,2y,What is the most dramatic speedup you've had in a piece of code from a simple change?,"A $40K change!

Setting the scene, this was in about 2001 or so. I was working at a company that provided services to put newspapers on line. Back then ad-serving was still sort of in its infancy and we did our own.

We were moderately successful and to the point where we needed two SQL Servers to handle the ads. This included determining what page was being shown and the appropriate ad to show, and then recording the information. The SQL Servers were running at about 60–70% CPU capacity. But occasionally it would spike over 80% and when it did, it would basically skyrocket to 100% and ad serving would get backlogged. We were starting to look at another large server, (with disks, etc, would have run about $40K) plus the necessary SQL licenses.

I came across an article in SQL Server magazine that started to talk about how SQL Server handled looking up the name of stored procedures and how you could get a high number of what are known as recompiles. Back then SQL Server didn’t have nearly the tools it does now to debug performance. But the article gave me enough clues.

A developer and I got together and made several changes, but two of them were basically the equivalent of renaming a stored procedure from sp_ServeAd to dbo.usp_ServeAd.

Simply put the lack of the schema, and prefixing the name of the stored procedure with sp_ (which many folks still do, please don’t!) was causing the SQL engine to first look in the Master DB (sp_ indicates a system procedure, not stored procedure, so it gets treated specially by the SQL engine) and when it couldn’t find it, look in the current DB and then recompile it.

The speed improvement was so impressive not only did we NOT need a 3rd server, but we could run the entire ad load on a SINGLE SQL server, running at less than 60% CPU, and when we did exceed the previous 60–70% CPU we no longer would skyrocket to 100%. Instead it would continue to scale in a nice linear fashion.

So that single change not only saved us the cost of a new server (plus the licenses) but allowed us to basically turn an existing ad server into a DR server.

All that with a pretty simple change.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/pd0xrogfml486hzj', 'title': ""What is the most dramatic speedup you've had in a piece of code from a simple change?"", 'score': {'original': 0.9999, 'ai': 0.0001}, 'blocks': [{'text': 'A $40K change!\n\nSetting the scene, this was in about 2001 or so. I was working at a company that provided services to put newspapers on line. Back then ad-serving was still sort of in its infancy and we did our own.\n\nWe were moderately successful and to the point where we needed two SQL Servers to handle the ads. This included determining what page was being shown and the appropriate ad to show, and then recording the information. The SQL Servers were running at about 60–70% CPU capacity. But occasionally it would spike over 80% and when it did, it would basically skyrocket to 100% and ad serving would get backlogged. We were starting to look at another large server, (with disks, etc, would have run about $40K) plus the necessary SQL licenses.\n\nI came across an article in SQL Server magazine that started to talk about how SQL Server handled looking up the name of stored procedures and how you could get a high number of what are known as recompiles. Back then SQL Server didn’t have nearly the tools it does now to debug performance. But the article gave me enough clues.\n\nA developer and I got together and made several changes, but two of them were basically the equivalent of renaming a stored procedure from sp_ServeAd to dbo.usp_ServeAd.\n\nSimply put the lack of the schema, and prefixing the name of the stored procedure with sp_ (which many folks still do, please don’t!) was causing the SQL engine to first look in the Master DB (sp_ indicates a system procedure, not stored procedure, so it gets treated specially by the SQL engine) and when it couldn’t find it, look in the current DB and then recompile it.\n\nThe speed improvement was so impressive not only did we NOT need a 3rd server, but we could run the entire ad load on a SINGLE SQL server, running at less than 60% CPU, and when we did exceed the previous 60–70% CPU we no longer would skyrocket to 100%. Instead it would continue to scale in a nice linear fashion.\n\nSo that single change not only saved us the cost of a new server (plus the licenses) but allowed us to basically turn an existing ad server into a DR server.\n\nAll that with a pretty simple change.', 'result': {'fake': 0.0001, 'real': 0.9999}, 'status': 'success'}], 'credits_used': 4, 'credits': 1983558, 'subscription': 0, 'content': 'A $40K change!\n\nSetting the scene, this was in about 2001 or so. I was working at a company that provided services to put newspapers on line. Back then ad-serving was still sort of in its infancy and we did our own.\n\nWe were moderately successful and to the point where we needed two SQL Servers to handle the ads. This included determining what page was being shown and the appropriate ad to show, and then recording the information. The SQL Servers were running at about 60–70% CPU capacity. But occasionally it would spike over 80% and when it did, it would basically skyrocket to 100% and ad serving would get backlogged. We were starting to look at another large server, (with disks, etc, would have run about $40K) plus the necessary SQL licenses.\n\nI came across an article in SQL Server magazine that started to talk about how SQL Server handled looking up the name of stored procedures and how you could get a high number of what are known as recompiles. Back then SQL Server didn’t have nearly the tools it does now to debug performance. But the article gave me enough clues.\n\nA developer and I got together and made several changes, but two of them were basically the equivalent of renaming a stored procedure from sp_ServeAd to dbo.usp_ServeAd.\n\nSimply put the lack of the schema, and prefixing the name of the stored procedure with sp_ (which many folks still do, please don’t!) was causing the SQL engine to first look in the Master DB (sp_ indicates a system procedure, not stored procedure, so it gets treated specially by the SQL engine) and when it couldn’t find it, look in the current DB and then recompile it.\n\nThe speed improvement was so impressive not only did we NOT need a 3rd server, but we could run the entire ad load on a SINGLE SQL server, running at less than 60% CPU, and when we did exceed the previous 60–70% CPU we no longer would skyrocket to 100%. Instead it would continue to scale in a nice linear fashion.\n\nSo that single change not only saved us the cost of a new server (plus the licenses) but allowed us to basically turn an existing ad server into a DR server.\n\nAll that with a pretty simple change.', 'aiModelVersion': '1'}",0.9999
Mark Phaedrus,Updated 1y,What is the most dramatic speedup you've had in a piece of code from a simple change?,"I made a change to the Windows Update client, which has shipped to around a billion devices at this point. The change was, I believe, less than one page of code.

How much did it help? In the most egregious log I looked at, a check for updates took three days before the change, and roughly fifteen seconds after. That’s an improvement of, let’s see, around 17,000-fold.

The change and the reason for the change are on the public record. So, I’ll go ahead and explain.

If you’re a programmer, this explanation will be maddeningly brief in places. I will not elaborate. If you want to learn more, come work at Microsoft. Even in this economic mess, we’re hiring.

If you’re not a programmer: This explanation may cause drowsiness. Alcohol may intensify this effect. Do not drive or operate heavy machinery while reading this explanation.

There will sometimes be multiple published updates applicable to the computer, but only one of them is really needed. Maybe a product is updated once a month. If you install an old version of that product, and then check for updates, there might be six or twelve months’ worth of monthly updates still online and available. But the monthly updates are cumulative, so you only actually need to install one of them — normally the most recent one.

To handle this, Windows Update has a ‘supersedence’ system. When an update is published, it can be marked as ‘I supersede this set of earlier updates.’ Let’s say that Update B supersedes Update A. If the Windows Update client scans for updates and finds that both Update A and Update B are applicable, then the client sets Update A aside and only offers Update B.

Anyway, the problem was this: because of the way the system works, things get harder when there are lots of layers of supersedence — Update Z supersedes Update Y which supersedes Update X which supersedes Update W and so on. The client has to work its way up and down the supersedence chain. The code for this was very nice, very readable, very bulletproof. It did have one teensy problem. The time it took to evaluate the supersedence chain went up factorially with the number of published updates in the chain.

Depending on your life experiences, you may be wondering why I bolded and italicized “factorially”. Or you may be screaming in horror. The possibilities are wide open, really.

The result is that it was still extremely quick to evaluate supersedence chains of, say, nine or ten active updates. Let’s say that it takes ten seconds to evaluate ten. But then you add an eleventh update, and now it takes eleven times longer. 110 seconds. And then you add a twelfth, and now it takes 12 times longer than that. 22 minutes. And you add a thirteenth, and now it takes 13 times longer than that. Over four hours. You see where this is going.

As long as the update publication process went as expected — which included expiring an old update every time a new one was published — everything was fine and dandy. But things just don’t always go as expected, do they?

And so, one day, something in the process stopped working quite right. And sometime after that, everything was no longer fine and dandy.

And a bug was filed, and the bug was assigned to me, and I very carefully made some very targeted changes to this crucial bit of code, and made a lot of tests, and several Important People inspected the change and pronounced it to be good.

And I cannot give more details than that. The very fact that the previous algorithm for handling supersedence was 
O
(
n
!
)
O(n!)
 may give some hints. I brought it down to 
O
(
n
2
)
O(n2)
. There were faster approaches, but they would have been clever and interesting to read. And this was a situation where you don’t want the solution to be clever and interesting.

And the change was duly published. And those poor computers that were taking three days to check for updates started taking fifteen seconds instead.

And there was much rejoicing.

EDIT: I really appreciate the “I remember when scanning for updates suddenly became so much faster!” comments. But I have to point out that there have been a lot of efforts, by a lot of people, over the years, to make the Windows Update process faster.

Some of these performance improvements have been large-scale changes to the whole update pipeline, requiring lots of design and implementation work by lots of different teams within Microsoft. For example, the pipeline to deliver “feature updates” to Windows 10/11 devices — starting with how the updates are formatted and published, and going all the way through to how the updates are actually installed on a PC — is almost unrecognizably different than the pipeline used to deliver OS updates to Windows 8. And in turn, that pipeline is very different than what was used in early Windows 7 and before. As with lots of other parts of Windows, we sometimes find ourselves having to replace a propellor with a jet engine while the plane is still in the air. The fact that it works at all — let alone that it works well enough that very few people notice anything other than “huh, that works better now” — is an engineering marvel that’s made possible by the efforts of hundreds and hundreds of people.

Other performance improvements are smaller and more localized, but they’re still made by a variety of different teams. Sometimes they’re carefully planned and implemented over months. Sometimes they’re the result of… issues, and they have to be planned and executed more quickly than that.

Even on the change I made, a change that was made particularly quickly and in response to a particularly severe issue, there were other teams involved. There was the team that stopped the immediate bleeding, by quickly identifying and removing the small number of old updates that had pushed the clients off the performance cliff. There was the team that rapidly published my fix. And there were the invaluable customer support personnel who dealt with the screaming.

So if you ever noticed Windows Update suddenly getting much faster, that wasn’t necessarily even something I touched. But I’m glad if it was.

Disclaimer:

The statements I make are my own and do not necessarily reflect the positions or opinions of Microsoft Corporation.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/kyq9ame568igwd7c', 'title': ""What is the most dramatic speedup you've had in a piece of code from a simple change?"", 'score': {'original': 0.62663333333333, 'ai': 0.37336666666667}, 'blocks': [{'text': 'I made a change to the Windows Update client, which has shipped to around a billion devices at this point. The change was, I believe, less than one page of code.\n\nHow much did it help? In the most egregious log I looked at, a check for updates took three days before the change, and roughly fifteen seconds after. That’s an improvement of, let’s see, around 17,000-fold.\n\nThe change and the reason for the change are on the public record. So, I’ll go ahead and explain.\n\nIf you’re a programmer, this explanation will be maddeningly brief in places. I will not elaborate. If you want to learn more, come work at Microsoft. Even in this economic mess, we’re hiring.\n\nIf you’re not a programmer: This explanation may cause drowsiness. Alcohol may intensify this effect. Do not drive or operate heavy machinery while reading this explanation.\n\nThere will sometimes be multiple published updates applicable to the computer, but only one of them is really needed. Maybe a product is updated once a month. If you install an old version of that product, and then check for updates, there might be six or twelve months’ worth of monthly updates still online and available. But the monthly updates are cumulative, so you only actually need to install one of them — normally the most recent one.\n\nTo handle this, Windows Update has a ‘supersedence’ system. When an update is published, it can be marked as ‘I supersede this set of earlier updates.’ Let’s say that Update B supersedes Update A. If the Windows Update client scans for updates and finds that both Update A and Update B are applicable, then the client sets Update A aside and only offers Update B.\n\nAnyway, the problem was this: because of the way the system works, things get harder when there are lots of layers of supersedence — Update Z supersedes Update Y which supersedes Update X which supersedes Update W and so on. The client has to work its way up and down the supersedence chain. The code for this was very nice, very readable, very bulletproof. It did have one teensy problem. The time it took to evaluate the supersedence chain went up factorially with the number of published updates in the chain.\n\nDepending on your life experiences, you may be wondering why I bolded and italicized “factorially”. Or you may be screaming in horror. The possibilities are wide open, really.\n\nThe result is that it was still extremely quick to evaluate supersedence chains of, say, nine or ten active updates. Let’s say that it takes ten seconds to evaluate ten. But then you add an eleventh update, and now it takes eleven times longer. 110 seconds. And then you add a twelfth, and now it takes 12 times longer than that. 22 minutes. And you add a thirteenth, and now it takes 13 times longer than that. Over four hours. You see where this is going.\n\nAs long as the update publication process went as expected — which included expiring an old update every time a new one was published — everything was fine and', 'result': {'fake': 0.0327, 'real': 0.9673}, 'status': 'success'}, {'text': 'dandy. But things just don’t always go as expected, do they?\n\nAnd so, one day, something in the process stopped working quite right. And sometime after that, everything was no longer fine and dandy.\n\nAnd a bug was filed, and the bug was assigned to me, and I very carefully made some very targeted changes to this crucial bit of code, and made a lot of tests, and several Important People inspected the change and pronounced it to be good.\n\nAnd I cannot give more details than that. The very fact that the previous algorithm for handling supersedence was \nO\n(\nn\n!\n)\nO(n!)\n may give some hints. I brought it down to \nO\n(\nn\n2\n)\nO(n2)\n. There were faster approaches, but they would have been clever and interesting to read. And this was a situation where you don’t want the solution to be clever and interesting.\n\nAnd the change was duly published. And those poor computers that were taking three days to check for updates started taking fifteen seconds instead.\n\nAnd there was much rejoicing.\n\nEDIT: I really appreciate the “I remember when scanning for updates suddenly became so much faster!” comments. But I have to point out that there have been a lot of efforts, by a lot of people, over the years, to make the Windows Update process faster.\n\nSome of these performance improvements have been large-scale changes to the whole update pipeline, requiring lots of design and implementation work by lots of different teams within Microsoft. For example, the pipeline to deliver “feature updates” to Windows 10/11 devices — starting with how the updates are formatted and published, and going all the way through to how the updates are actually installed on a PC — is almost unrecognizably different than the pipeline used to deliver OS updates to Windows 8. And in turn, that pipeline is very different than what was used in early Windows 7 and before. As with lots of other parts of Windows, we sometimes find ourselves having to replace a propellor with a jet engine while the plane is still in the air. The fact that it works at all — let alone that it works well enough that very few people notice anything other than “huh, that works better now” — is an engineering marvel that’s made possible by the efforts of hundreds and hundreds of people.\n\nOther performance improvements are smaller and more localized, but they’re still made by a variety of different teams. Sometimes they’re carefully planned and implemented over months. Sometimes they’re the result of… issues, and they have to be planned and executed more quickly than that.\n\nEven on the change I made, a change that was made particularly quickly and in response to a particularly severe issue, there were other teams involved. There was the team that stopped the immediate bleeding, by quickly identifying and removing the small number of old updates that had pushed the clients off the performance cliff. There was the team that rapidly published my fix. And there were the invaluable customer support personnel who dealt with the screaming.\n\nSo if you ever noticed Windows Update suddenly getting much faster, that', 'result': {'fake': 0.5021, 'real': 0.4979}, 'status': 'success'}, {'text': 'wasn’t necessarily even something I touched. But I’m glad if it was.\n\nDisclaimer:\n\nThe statements I make are my own and do not necessarily reflect the positions or opinions of Microsoft Corporation.', 'result': {'fake': 1, 'real': 0}, 'status': 'success'}], 'credits_used': 11, 'credits': 1983547, 'subscription': 0, 'content': 'I made a change to the Windows Update client, which has shipped to around a billion devices at this point. The change was, I believe, less than one page of code.\n\nHow much did it help? In the most egregious log I looked at, a check for updates took three days before the change, and roughly fifteen seconds after. That’s an improvement of, let’s see, around 17,000-fold.\n\nThe change and the reason for the change are on the public record. So, I’ll go ahead and explain.\n\nIf you’re a programmer, this explanation will be maddeningly brief in places. I will not elaborate. If you want to learn more, come work at Microsoft. Even in this economic mess, we’re hiring.\n\nIf you’re not a programmer: This explanation may cause drowsiness. Alcohol may intensify this effect. Do not drive or operate heavy machinery while reading this explanation.\n\nThere will sometimes be multiple published updates applicable to the computer, but only one of them is really needed. Maybe a product is updated once a month. If you install an old version of that product, and then check for updates, there might be six or twelve months’ worth of monthly updates still online and available. But the monthly updates are cumulative, so you only actually need to install one of them — normally the most recent one.\n\nTo handle this, Windows Update has a ‘supersedence’ system. When an update is published, it can be marked as ‘I supersede this set of earlier updates.’ Let’s say that Update B supersedes Update A. If the Windows Update client scans for updates and finds that both Update A and Update B are applicable, then the client sets Update A aside and only offers Update B.\n\nAnyway, the problem was this: because of the way the system works, things get harder when there are lots of layers of supersedence — Update Z supersedes Update Y which supersedes Update X which supersedes Update W and so on. The client has to work its way up and down the supersedence chain. The code for this was very nice, very readable, very bulletproof. It did have one teensy problem. The time it took to evaluate the supersedence chain went up factorially with the number of published updates in the chain.\n\nDepending on your life experiences, you may be wondering why I bolded and italicized “factorially”. Or you may be screaming in horror. The possibilities are wide open, really.\n\nThe result is that it was still extremely quick to evaluate supersedence chains of, say, nine or ten active updates. Let’s say that it takes ten seconds to evaluate ten. But then you add an eleventh update, and now it takes eleven times longer. 110 seconds. And then you add a twelfth, and now it takes 12 times longer than that. 22 minutes. And you add a thirteenth, and now it takes 13 times longer than that. Over four hours. You see where this is going.\n\nAs long as the update publication process went as expected — which included expiring an old update every time a new one was published — everything was fine and dandy. But things just don’t always go as expected, do they?\n\nAnd so, one day, something in the process stopped working quite right. And sometime after that, everything was no longer fine and dandy.\n\nAnd a bug was filed, and the bug was assigned to me, and I very carefully made some very targeted changes to this crucial bit of code, and made a lot of tests, and several Important People inspected the change and pronounced it to be good.\n\nAnd I cannot give more details than that. The very fact that the previous algorithm for handling supersedence was \nO\n(\nn\n!\n)\nO(n!)\n may give some hints. I brought it down to \nO\n(\nn\n2\n)\nO(n2)\n. There were faster approaches, but they would have been clever and interesting to read. And this was a situation where you don’t want the solution to be clever and interesting.\n\nAnd the change was duly published. And those poor computers that were taking three days to check for updates started taking fifteen seconds instead.\n\nAnd there was much rejoicing.\n\nEDIT: I really appreciate the “I remember when scanning for updates suddenly became so much faster!” comments. But I have to point out that there have been a lot of efforts, by a lot of people, over the years, to make the Windows Update process faster.\n\nSome of these performance improvements have been large-scale changes to the whole update pipeline, requiring lots of design and implementation work by lots of different teams within Microsoft. For example, the pipeline to deliver “feature updates” to Windows 10/11 devices — starting with how the updates are formatted and published, and going all the way through to how the updates are actually installed on a PC — is almost unrecognizably different than the pipeline used to deliver OS updates to Windows 8. And in turn, that pipeline is very different than what was used in early Windows 7 and before. As with lots of other parts of Windows, we sometimes find ourselves having to replace a propellor with a jet engine while the plane is still in the air. The fact that it works at all — let alone that it works well enough that very few people notice anything other than “huh, that works better now” — is an engineering marvel that’s made possible by the efforts of hundreds and hundreds of people.\n\nOther performance improvements are smaller and more localized, but they’re still made by a variety of different teams. Sometimes they’re carefully planned and implemented over months. Sometimes they’re the result of… issues, and they have to be planned and executed more quickly than that.\n\nEven on the change I made, a change that was made particularly quickly and in response to a particularly severe issue, there were other teams involved. There was the team that stopped the immediate bleeding, by quickly identifying and removing the small number of old updates that had pushed the clients off the performance cliff. There was the team that rapidly published my fix. And there were the invaluable customer support personnel who dealt with the screaming.\n\nSo if you ever noticed Windows Update suddenly getting much faster, that wasn’t necessarily even something I touched. But I’m glad if it was.\n\nDisclaimer:\n\nThe statements I make are my own and do not necessarily reflect the positions or opinions of Microsoft Corporation.', 'aiModelVersion': '1'}",0.62663333333333
Rohit Kashyap,Updated 4y,How can I improve myself in 6 months?,"Once a man went to a golf court for playing golf with his family.
He tried to hit the ball several times but the ball went to a lake instead of the hole or ground every time.
Man calls his instructor, asked him about this and said: “it will take ages to learn golf if I play like this.”
The instructor said “No, you are just 1mm or 2mm from the hole”
the man amazed and said “what?” but the ball goes very far from the post, it is not even on the ground.
The instructor now said, “when you hit the ball, if you hit 1mm in other direction then it will go on the ground and if you hit 1 more 1mm in other direction then it will go in the hole.”

Amazing, isn't it?

Now, Let's come on the actual question “How can I improve myself in 6 months?”

See you don’t have to make any extraordinary changes to be successful in your life just like a ball you can make tiny changes to reach your destination. Even if you improve 1% daily then you will improve a lot in the long run.

You can decide to read 10 pages daily, it will not take a lot of time. You can read that in less than 30 mins but reading will increase your knowledge
You can watch a Ted talk daily. It will take just 10–15mins but it is very beneficial.
You can just exercise for 15 mins daily and also take 15 mins walk, it will boost your energy and make you healthy.
Meet a new person every week, you will get to know a lot of people in a year. The relationship is the key to success.
You can learn a new skill every month, in a year you will get to know about 12 different skills.
Just cut 1 bad habit every month, you will get rid of 12 bad habits in a year.
There are many small things you can do that will improve your life in the long run. I am not asking you to do something like wake up at 4 am instead of 11 am. Dude, it is impossible to make big changes but you can wake up just 15 mins early every week till you find the actual time you decided to wake up on. tiny changes can make a big difference, try to make them.

All the best.

Namaste,

Rohit Kashyap

(Feel free to connect)","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/0iwnb7teljosay35', 'title': 'How can I improve myself in 6 months?', 'score': {'original': 0.9993, 'ai': 0.0007}, 'blocks': [{'text': ""Once a man went to a golf court for playing golf with his family.\nHe tried to hit the ball several times but the ball went to a lake instead of the hole or ground every time.\nMan calls his instructor, asked him about this and said: “it will take ages to learn golf if I play like this.”\nThe instructor said “No, you are just 1mm or 2mm from the hole”\nthe man amazed and said “what?” but the ball goes very far from the post, it is not even on the ground.\nThe instructor now said, “when you hit the ball, if you hit 1mm in other direction then it will go on the ground and if you hit 1 more 1mm in other direction then it will go in the hole.”\n\nAmazing, isn't it?\n\nNow, Let's come on the actual question “How can I improve myself in 6 months?”\n\nSee you don’t have to make any extraordinary changes to be successful in your life just like a ball you can make tiny changes to reach your destination. Even if you improve 1% daily then you will improve a lot in the long run.\n\nYou can decide to read 10 pages daily, it will not take a lot of time. You can read that in less than 30 mins but reading will increase your knowledge\nYou can watch a Ted talk daily. It will take just 10–15mins but it is very beneficial.\nYou can just exercise for 15 mins daily and also take 15 mins walk, it will boost your energy and make you healthy.\nMeet a new person every week, you will get to know a lot of people in a year. The relationship is the key to success.\nYou can learn a new skill every month, in a year you will get to know about 12 different skills.\nJust cut 1 bad habit every month, you will get rid of 12 bad habits in a year.\nThere are many small things you can do that will improve your life in the long run. I am not asking you to do something like wake up at 4 am instead of 11 am. Dude, it is impossible to make big changes but you can wake up just 15 mins early every week till you find the actual time you decided to wake up on. tiny changes can make a big difference, try to make them.\n\nAll the best.\n\nNamaste,\n\nRohit Kashyap\n\n(Feel free to connect)"", 'result': {'fake': 0.0007, 'real': 0.9993}, 'status': 'success'}], 'credits_used': 5, 'credits': 1983542, 'subscription': 0, 'content': ""Once a man went to a golf court for playing golf with his family.\nHe tried to hit the ball several times but the ball went to a lake instead of the hole or ground every time.\nMan calls his instructor, asked him about this and said: “it will take ages to learn golf if I play like this.”\nThe instructor said “No, you are just 1mm or 2mm from the hole”\nthe man amazed and said “what?” but the ball goes very far from the post, it is not even on the ground.\nThe instructor now said, “when you hit the ball, if you hit 1mm in other direction then it will go on the ground and if you hit 1 more 1mm in other direction then it will go in the hole.”\n\nAmazing, isn't it?\n\nNow, Let's come on the actual question “How can I improve myself in 6 months?”\n\nSee you don’t have to make any extraordinary changes to be successful in your life just like a ball you can make tiny changes to reach your destination. Even if you improve 1% daily then you will improve a lot in the long run.\n\nYou can decide to read 10 pages daily, it will not take a lot of time. You can read that in less than 30 mins but reading will increase your knowledge\nYou can watch a Ted talk daily. It will take just 10–15mins but it is very beneficial.\nYou can just exercise for 15 mins daily and also take 15 mins walk, it will boost your energy and make you healthy.\nMeet a new person every week, you will get to know a lot of people in a year. The relationship is the key to success.\nYou can learn a new skill every month, in a year you will get to know about 12 different skills.\nJust cut 1 bad habit every month, you will get rid of 12 bad habits in a year.\nThere are many small things you can do that will improve your life in the long run. I am not asking you to do something like wake up at 4 am instead of 11 am. Dude, it is impossible to make big changes but you can wake up just 15 mins early every week till you find the actual time you decided to wake up on. tiny changes can make a big difference, try to make them.\n\nAll the best.\n\nNamaste,\n\nRohit Kashyap\n\n(Feel free to connect)"", 'aiModelVersion': '1'}",0.9993
Alan Mellor,6y,What should every developer know but probably does not?,"You prove your cleverness by how simple your solutions are
Most development involves a healthy dose of stuff that entry level juniors can do. It’s not all super fancy
Most of the difficulty comes from dealing with people, processes and past decisions
We don’t teach development anything like it is done in a commercial environment
We are more like welders than rock stars
You can add any features you want, in any language you want, following any trend you want. If your sales team can’t find a buyer, it never mattered
Development is tribal. Do not expect to change the minds of developers in other tribes (OSes, languages, techniques and so on)
Developers will give you a technical sounding reason for an emotional decision.
Development relies on social skills more than you think. Negotiation, empathy, questioning
Any problem typically can be solved multiple ways, with no clear “single best one”, so it’s not worth the arguments usually
People can’t see inside your head. If you are quiet, and are thoughtful, you are seen as not working. Fix this with voluntary updates
Normal people are pretty imprecise with words. So we have to ask a lot of clarifications.
People you report to appreciate short summaries in language they can understand
We are paid because of profits made on per-unit sales(*). We are not entitled to jobs, we have to make sure we are coding something which will be bought. (*) VC/Angel funded and public sector may ignore this, to an extent","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/z145cu2d37klegji', 'title': 'What should every developer know but probably does not?', 'score': {'original': 0.9997, 'ai': 0.0003}, 'blocks': [{'text': 'You prove your cleverness by how simple your solutions are\nMost development involves a healthy dose of stuff that entry level juniors can do. It’s not all super fancy\nMost of the difficulty comes from dealing with people, processes and past decisions\nWe don’t teach development anything like it is done in a commercial environment\nWe are more like welders than rock stars\nYou can add any features you want, in any language you want, following any trend you want. If your sales team can’t find a buyer, it never mattered\nDevelopment is tribal. Do not expect to change the minds of developers in other tribes (OSes, languages, techniques and so on)\nDevelopers will give you a technical sounding reason for an emotional decision.\nDevelopment relies on social skills more than you think. Negotiation, empathy, questioning\nAny problem typically can be solved multiple ways, with no clear “single best one”, so it’s not worth the arguments usually\nPeople can’t see inside your head. If you are quiet, and are thoughtful, you are seen as not working. Fix this with voluntary updates\nNormal people are pretty imprecise with words. So we have to ask a lot of clarifications.\nPeople you report to appreciate short summaries in language they can understand\nWe are paid because of profits made on per-unit sales(*). We are not entitled to jobs, we have to make sure we are coding something which will be bought. (*) VC/Angel funded and public sector may ignore this, to an extent', 'result': {'fake': 0.0003, 'real': 0.9997}, 'status': 'success'}], 'credits_used': 3, 'credits': 1983539, 'subscription': 0, 'content': 'You prove your cleverness by how simple your solutions are\nMost development involves a healthy dose of stuff that entry level juniors can do. It’s not all super fancy\nMost of the difficulty comes from dealing with people, processes and past decisions\nWe don’t teach development anything like it is done in a commercial environment\nWe are more like welders than rock stars\nYou can add any features you want, in any language you want, following any trend you want. If your sales team can’t find a buyer, it never mattered\nDevelopment is tribal. Do not expect to change the minds of developers in other tribes (OSes, languages, techniques and so on)\nDevelopers will give you a technical sounding reason for an emotional decision.\nDevelopment relies on social skills more than you think. Negotiation, empathy, questioning\nAny problem typically can be solved multiple ways, with no clear “single best one”, so it’s not worth the arguments usually\nPeople can’t see inside your head. If you are quiet, and are thoughtful, you are seen as not working. Fix this with voluntary updates\nNormal people are pretty imprecise with words. So we have to ask a lot of clarifications.\nPeople you report to appreciate short summaries in language they can understand\nWe are paid because of profits made on per-unit sales(*). We are not entitled to jobs, we have to make sure we are coding something which will be bought. (*) VC/Angel funded and public sector may ignore this, to an extent', 'aiModelVersion': '1'}",0.9997
Jason Slavin,6y,How can full stack developers learn so many skills?,"There is a really great part of the film “Gran Torino” where he brings the kid into his garage. The kid sees all of his tools and is astonished, saying “I can’t afford to buy all this stuff” to which Eastwood’s character replies “Even a bonehead like you can understand that a man acquires this over a period of 50 years”. But he then gives the kid some vice-grips, wd-40, and duct tape, and says he could keep it, and that he could solve a lot of household issues with those.

Despite the rudeness of his statement, there is truth to it, especially for programmers.

I was a beginner, not so long ago, and I remember thinking to myself the same thing “how am I gonna learn all this stuff, I don’t have time for it and there is so much!”

The truth is, you acquire each skill / tool / language over time. Certainly, it is harder for us as programmers since Libraries and Frameworks seem to spring out of the ground and have surprising complexity, but it gets easier to learn new things, and there is familiarity that grows with use. As you progress in your career, you will have to learn new things, new skills, new tools, but your ability to use the old ones doesn’t just disappear, and some of the underlying structures of all that we do as developers does not move as quickly as the languages do.

So essentially, time is how. It just takes time. When you look at the entirety of the full range of tools in the tech stack, thinking that is what you have to take on, you’ll get buried. But if you focus on small parts of it and acquire ability in that chosen discipline, you can then move on to another, and add it to your tool belt.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/okir0lgeqsmuwfn4', 'title': 'How can full stack developers learn so many skills?', 'score': {'original': 0.9998, 'ai': 0.0002}, 'blocks': [{'text': 'There is a really great part of the film “Gran Torino” where he brings the kid into his garage. The kid sees all of his tools and is astonished, saying “I can’t afford to buy all this stuff” to which Eastwood’s character replies “Even a bonehead like you can understand that a man acquires this over a period of 50 years”. But he then gives the kid some vice-grips, wd-40, and duct tape, and says he could keep it, and that he could solve a lot of household issues with those.\n\nDespite the rudeness of his statement, there is truth to it, especially for programmers.\n\nI was a beginner, not so long ago, and I remember thinking to myself the same thing “how am I gonna learn all this stuff, I don’t have time for it and there is so much!”\n\nThe truth is, you acquire each skill / tool / language over time. Certainly, it is harder for us as programmers since Libraries and Frameworks seem to spring out of the ground and have surprising complexity, but it gets easier to learn new things, and there is familiarity that grows with use. As you progress in your career, you will have to learn new things, new skills, new tools, but your ability to use the old ones doesn’t just disappear, and some of the underlying structures of all that we do as developers does not move as quickly as the languages do.\n\nSo essentially, time is how. It just takes time. When you look at the entirety of the full range of tools in the tech stack, thinking that is what you have to take on, you’ll get buried. But if you focus on small parts of it and acquire ability in that chosen discipline, you can then move on to another, and add it to your tool belt.', 'result': {'fake': 0.0002, 'real': 0.9998}, 'status': 'success'}], 'credits_used': 4, 'credits': 1983535, 'subscription': 0, 'content': 'There is a really great part of the film “Gran Torino” where he brings the kid into his garage. The kid sees all of his tools and is astonished, saying “I can’t afford to buy all this stuff” to which Eastwood’s character replies “Even a bonehead like you can understand that a man acquires this over a period of 50 years”. But he then gives the kid some vice-grips, wd-40, and duct tape, and says he could keep it, and that he could solve a lot of household issues with those.\n\nDespite the rudeness of his statement, there is truth to it, especially for programmers.\n\nI was a beginner, not so long ago, and I remember thinking to myself the same thing “how am I gonna learn all this stuff, I don’t have time for it and there is so much!”\n\nThe truth is, you acquire each skill / tool / language over time. Certainly, it is harder for us as programmers since Libraries and Frameworks seem to spring out of the ground and have surprising complexity, but it gets easier to learn new things, and there is familiarity that grows with use. As you progress in your career, you will have to learn new things, new skills, new tools, but your ability to use the old ones doesn’t just disappear, and some of the underlying structures of all that we do as developers does not move as quickly as the languages do.\n\nSo essentially, time is how. It just takes time. When you look at the entirety of the full range of tools in the tech stack, thinking that is what you have to take on, you’ll get buried. But if you focus on small parts of it and acquire ability in that chosen discipline, you can then move on to another, and add it to your tool belt.', 'aiModelVersion': '1'}",0.9998
Curtis Poe,6y,Do some programmers intentionally write unreadable code?,"I once worked for a company that:

Didn’t allow developers to write tests
Forbade refactoring
Considered cutting-and-pasting a virtue
Had no code reviews
Valued how fast you could churn out features over all other metrics

After a while, some developers “checked out”, but were happy to collect a paycheck. I routinely came across code that was written so strangely, often by developers who I knew knew better, that it became apparent that they didn’t care any more and were just having fun seeing what strange stuff they could put into code. It wasn’t malicious, it wasn’t about job security, it was just trying to find a way to relieve boredom in a job where they couldn’t grow their technical skills.

I didn’t last long before I bailed. The last straw was having a promotion withdrawn after they caught me writing tests for a particularly difficult section of code.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/y4w5np63i2j9dgco', 'title': 'Do some programmers intentionally write unreadable code?', 'score': {'original': 0.9986, 'ai': 0.0014}, 'blocks': [{'text': 'I once worked for a company that:\n\nDidn’t allow developers to write tests\nForbade refactoring\nConsidered cutting-and-pasting a virtue\nHad no code reviews\nValued how fast you could churn out features over all other metrics\n\nAfter a while, some developers “checked out”, but were happy to collect a paycheck. I routinely came across code that was written so strangely, often by developers who I knew knew better, that it became apparent that they didn’t care any more and were just having fun seeing what strange stuff they could put into code. It wasn’t malicious, it wasn’t about job security, it was just trying to find a way to relieve boredom in a job where they couldn’t grow their technical skills.\n\nI didn’t last long before I bailed. The last straw was having a promotion withdrawn after they caught me writing tests for a particularly difficult section of code.', 'result': {'fake': 0.0014, 'real': 0.9986}, 'status': 'success'}], 'credits_used': 2, 'credits': 1983533, 'subscription': 0, 'content': 'I once worked for a company that:\n\nDidn’t allow developers to write tests\nForbade refactoring\nConsidered cutting-and-pasting a virtue\nHad no code reviews\nValued how fast you could churn out features over all other metrics\n\nAfter a while, some developers “checked out”, but were happy to collect a paycheck. I routinely came across code that was written so strangely, often by developers who I knew knew better, that it became apparent that they didn’t care any more and were just having fun seeing what strange stuff they could put into code. It wasn’t malicious, it wasn’t about job security, it was just trying to find a way to relieve boredom in a job where they couldn’t grow their technical skills.\n\nI didn’t last long before I bailed. The last straw was having a promotion withdrawn after they caught me writing tests for a particularly difficult section of code.', 'aiModelVersion': '1'}",0.9986
Sandesh,1y,How good is the Learnbay Full-Stack software Development course?,"With the increasing number of IT professionals entering the job market, it is important to note that full-stack software development is one of the most sought-after skills in today’s job market. As a result, businesses are constantly looking for candidates with full-stack skills. This makes it important for IT professionals to make sure they have a strong grasp of full-stack development. In addition, it is also important for IT professionals to make sure they have a solid knowledge of their application stack. By doing so, they will be able to better understand how their applications work and make changes accordingly. Full-stack development can be challenging at times, but it can also be very rewarding.

So, how good is the Full Stack Software Development course at Learnbay?

Both beginners and professionals who are currently employed can take Data Structures and Algorithms (DSA) courses on Learnbay. They offer interactive question-and-answer sessions and live lectures with subject-matter experts for the courses DSA & System Design and Full Stack Software Development.

Learnbay's Full Stack Software Development course is a fantastic resource for new graduates who desire to advance their careers in this field. Only Learnbay offers Full Stack Software Development that encompasses Data Structure and Algorithm Concepts. They offer the best online data structure course in Bangalore in addition to a data structure course. If you're a working professional who wants to become an expert in your area, Learnbay is your best option.

Let's discover the characteristics and specifics of the course.

Course Name: Full Stack Software Development Program

Weekday Batches: 8 Months
Weekend Batches: 9 Months
12+ Real-time Projects

Course Modules:

Data Structure and Algorithm
System Design
Real-time Projects & Use cases
Interview Preparation: Crack MAANG
Elite Domains

Some qualities that distinguish Learnbay from competing sites include:

Elite Domains

Learnbay provides its professionals with a variety of top domain elites so they can flourish and advance their careers in a particular field. Elite Domain specialization is the process of concentrating one's professional efforts on a specific industry. To begin with, it might help people identify the aspects of a subject that they find desirable and unwelcome. It also saves students from spending money on pointless tasks. You may benefit from taking one of Learnbay's software development courses.

This program's domains include, among others:

Product Management
Web 3.0 Programmer
Clouds & DevOps

But, what’s the importance of having elite domain expertise? What do algorithms and data structures' elite domains mean?

According to the ""Elite Domain approach,"" individuals should spend their whole working life honing a single field of competence. There are some of the reasons that make elite domain specialization a great value addition:

You can find that as you are striving to enhance your skills, reading up on related subjects will help you gain more information.
Depending on the business, experts could be granted the freedom to use whatever premium domain they like.
As a result, you may focus on enhancing your skills in the area that most interests you while still having plenty of opportunities to gain experience in a variety of contexts.
Through interview questions, puzzles, 1:1 mock interviews, resume development, and profile building, Learnbay assists with interview preparation. If you want qualified career advice, you can select career counseling.
Under the direction of MAANG professionals who will support you throughout the projects, you will work on live projects. There are more than 12 real-world projects and use cases offered.

These would be some of the projects:

Binary search trees with a secret.
Time to insert the heap.
K-D tree research project.
Text editor with stacks.
Online real-time sessions conducted by an instructor give students the opportunity to actively participate and ask questions. According to Learnbay experts, student interaction should be a part of knowledge.
Learnbay offers tailored scope analyses and module building based on career stage, education level, and personal interests. Learnbay offers a free consultation session that may help you decide if a career in web development is right for you.

Let’s also look at some other options: Coursera

They offer programs for algorithms and data structures. Students will study the theoretical underpinnings of algorithms in this course, which blends theory and practice. They will then build those algorithms in a programming language of their choice and use them in real-world scenarios.

The course includes the following topics:

Graph data organization
Algorithms based on graphs
Methods for getting strings

Cons: The only thing that is missing in this scenario is assistance with the job interview, which makes it a little difficult to choose one applicant over others.

CONCLUSION

I hope the concepts above help you understand how to start and improve your grasp of Full stack software development, but my personal recommendation is to enroll in online certification programs that will direct you in the right direction.

Note: Learnbay is the best place to go if you want to take an online course. During your interview at a prominent company, Learnbay's special features will be helpful.

I wish you luck.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/onpyq5wj1bmu2zrd', 'title': 'How good is the Learnbay Full-Stack software Development course?', 'score': {'original': 0, 'ai': 1}, 'blocks': [{'text': 'With the increasing number of IT professionals entering the job market, it is important to note that full-stack software development is one of the most sought-after skills in today’s job market. As a result, businesses are constantly looking for candidates with full-stack skills. This makes it important for IT professionals to make sure they have a strong grasp of full-stack development. In addition, it is also important for IT professionals to make sure they have a solid knowledge of their application stack. By doing so, they will be able to better understand how their applications work and make changes accordingly. Full-stack development can be challenging at times, but it can also be very rewarding.\n\nSo, how good is the Full Stack Software Development course at Learnbay?\n\nBoth beginners and professionals who are currently employed can take Data Structures and Algorithms (DSA) courses on Learnbay. They offer interactive question-and-answer sessions and live lectures with subject-matter experts for the courses DSA & System Design and Full Stack Software Development.\n\nLearnbay\'s Full Stack Software Development course is a fantastic resource for new graduates who desire to advance their careers in this field. Only Learnbay offers Full Stack Software Development that encompasses Data Structure and Algorithm Concepts. They offer the best online data structure course in Bangalore in addition to a data structure course. If you\'re a working professional who wants to become an expert in your area, Learnbay is your best option.\n\nLet\'s discover the characteristics and specifics of the course.\n\nCourse Name: Full Stack Software Development Program\n\nWeekday Batches: 8 Months\nWeekend Batches: 9 Months\n12+ Real-time Projects\n\nCourse Modules:\n\nData Structure and Algorithm\nSystem Design\nReal-time Projects & Use cases\nInterview Preparation: Crack MAANG\nElite Domains\n\nSome qualities that distinguish Learnbay from competing sites include:\n\nElite Domains\n\nLearnbay provides its professionals with a variety of top domain elites so they can flourish and advance their careers in a particular field. Elite Domain specialization is the process of concentrating one\'s professional efforts on a specific industry. To begin with, it might help people identify the aspects of a subject that they find desirable and unwelcome. It also saves students from spending money on pointless tasks. You may benefit from taking one of Learnbay\'s software development courses.\n\nThis program\'s domains include, among others:\n\nProduct Management\nWeb 3.0 Programmer\nClouds & DevOps\n\nBut, what’s the importance of having elite domain expertise? What do algorithms and data structures\' elite domains mean?\n\nAccording to the ""Elite Domain approach,"" individuals should spend their whole working life honing a single field of competence. There are some of the reasons that make elite domain specialization a great value addition:\n\nYou can find that as you are striving to enhance your skills, reading up on related subjects will help you gain more information.\nDepending on the business, experts could be granted the freedom to use whatever premium domain they like.\nAs a result, you may focus on enhancing your skills in the area that most interests you while still having plenty of opportunities to gain experience in a variety of contexts.\nThrough interview questions, puzzles, 1:1 mock interviews, resume development, and profile building, Learnbay assists with interview preparation. If you want qualified career advice, you can select career counseling.\nUnder', 'result': {'fake': 1, 'real': 0}, 'status': 'success'}, {'text': ""the direction of MAANG professionals who will support you throughout the projects, you will work on live projects. There are more than 12 real-world projects and use cases offered.\n\nThese would be some of the projects:\n\nBinary search trees with a secret.\nTime to insert the heap.\nK-D tree research project.\nText editor with stacks.\nOnline real-time sessions conducted by an instructor give students the opportunity to actively participate and ask questions. According to Learnbay experts, student interaction should be a part of knowledge.\nLearnbay offers tailored scope analyses and module building based on career stage, education level, and personal interests. Learnbay offers a free consultation session that may help you decide if a career in web development is right for you.\n\nLet’s also look at some other options: Coursera\n\nThey offer programs for algorithms and data structures. Students will study the theoretical underpinnings of algorithms in this course, which blends theory and practice. They will then build those algorithms in a programming language of their choice and use them in real-world scenarios.\n\nThe course includes the following topics:\n\nGraph data organization\nAlgorithms based on graphs\nMethods for getting strings\n\nCons: The only thing that is missing in this scenario is assistance with the job interview, which makes it a little difficult to choose one applicant over others.\n\nCONCLUSION\n\nI hope the concepts above help you understand how to start and improve your grasp of Full stack software development, but my personal recommendation is to enroll in online certification programs that will direct you in the right direction.\n\nNote: Learnbay is the best place to go if you want to take an online course. During your interview at a prominent company, Learnbay's special features will be helpful.\n\nI wish you luck."", 'result': {'fake': 1, 'real': 0}, 'status': 'success'}], 'credits_used': 9, 'credits': 1983524, 'subscription': 0, 'content': 'With the increasing number of IT professionals entering the job market, it is important to note that full-stack software development is one of the most sought-after skills in today’s job market. As a result, businesses are constantly looking for candidates with full-stack skills. This makes it important for IT professionals to make sure they have a strong grasp of full-stack development. In addition, it is also important for IT professionals to make sure they have a solid knowledge of their application stack. By doing so, they will be able to better understand how their applications work and make changes accordingly. Full-stack development can be challenging at times, but it can also be very rewarding.\n\nSo, how good is the Full Stack Software Development course at Learnbay?\n\nBoth beginners and professionals who are currently employed can take Data Structures and Algorithms (DSA) courses on Learnbay. They offer interactive question-and-answer sessions and live lectures with subject-matter experts for the courses DSA & System Design and Full Stack Software Development.\n\nLearnbay\'s Full Stack Software Development course is a fantastic resource for new graduates who desire to advance their careers in this field. Only Learnbay offers Full Stack Software Development that encompasses Data Structure and Algorithm Concepts. They offer the best online data structure course in Bangalore in addition to a data structure course. If you\'re a working professional who wants to become an expert in your area, Learnbay is your best option.\n\nLet\'s discover the characteristics and specifics of the course.\n\nCourse Name: Full Stack Software Development Program\n\nWeekday Batches: 8 Months\nWeekend Batches: 9 Months\n12+ Real-time Projects\n\nCourse Modules:\n\nData Structure and Algorithm\nSystem Design\nReal-time Projects & Use cases\nInterview Preparation: Crack MAANG\nElite Domains\n\nSome qualities that distinguish Learnbay from competing sites include:\n\nElite Domains\n\nLearnbay provides its professionals with a variety of top domain elites so they can flourish and advance their careers in a particular field. Elite Domain specialization is the process of concentrating one\'s professional efforts on a specific industry. To begin with, it might help people identify the aspects of a subject that they find desirable and unwelcome. It also saves students from spending money on pointless tasks. You may benefit from taking one of Learnbay\'s software development courses.\n\nThis program\'s domains include, among others:\n\nProduct Management\nWeb 3.0 Programmer\nClouds & DevOps\n\nBut, what’s the importance of having elite domain expertise? What do algorithms and data structures\' elite domains mean?\n\nAccording to the ""Elite Domain approach,"" individuals should spend their whole working life honing a single field of competence. There are some of the reasons that make elite domain specialization a great value addition:\n\nYou can find that as you are striving to enhance your skills, reading up on related subjects will help you gain more information.\nDepending on the business, experts could be granted the freedom to use whatever premium domain they like.\nAs a result, you may focus on enhancing your skills in the area that most interests you while still having plenty of opportunities to gain experience in a variety of contexts.\nThrough interview questions, puzzles, 1:1 mock interviews, resume development, and profile building, Learnbay assists with interview preparation. If you want qualified career advice, you can select career counseling.\nUnder the direction of MAANG professionals who will support you throughout the projects, you will work on live projects. There are more than 12 real-world projects and use cases offered.\n\nThese would be some of the projects:\n\nBinary search trees with a secret.\nTime to insert the heap.\nK-D tree research project.\nText editor with stacks.\nOnline real-time sessions conducted by an instructor give students the opportunity to actively participate and ask questions. According to Learnbay experts, student interaction should be a part of knowledge.\nLearnbay offers tailored scope analyses and module building based on career stage, education level, and personal interests. Learnbay offers a free consultation session that may help you decide if a career in web development is right for you.\n\nLet’s also look at some other options: Coursera\n\nThey offer programs for algorithms and data structures. Students will study the theoretical underpinnings of algorithms in this course, which blends theory and practice. They will then build those algorithms in a programming language of their choice and use them in real-world scenarios.\n\nThe course includes the following topics:\n\nGraph data organization\nAlgorithms based on graphs\nMethods for getting strings\n\nCons: The only thing that is missing in this scenario is assistance with the job interview, which makes it a little difficult to choose one applicant over others.\n\nCONCLUSION\n\nI hope the concepts above help you understand how to start and improve your grasp of Full stack software development, but my personal recommendation is to enroll in online certification programs that will direct you in the right direction.\n\nNote: Learnbay is the best place to go if you want to take an online course. During your interview at a prominent company, Learnbay\'s special features will be helpful.\n\nI wish you luck.', 'aiModelVersion': '1'}",0.0
Grant Fritchey,Updated 4y,Why should developers not have access to a production database?,"Every time I get a developer who wants access to the production database, I ask them if they’re going to be on call? If you can get into production and muck things up, you can certainly plan to be the one to fix that. Every time, I get turned down.

We can go round & round about whether or not developers should have access to production and whether or not they’d be safe. I know tons of developers I’d absolutely trust inside production. I know some I wouldn’t trust inside their own laptop. However, we’re in a new age. Here is a long stack of letters, that if you don’t know, or don’t understand, you should also not be allowed into the production database:

GDPR, CPPA, FERPA, HIPAA, SOX, PCI

That’s just a few, but if you know what those are, that’s why developers, and lots of other people, aren’t going to be allowed unfettered access to production. Heck, those letters mean we really have to carefully delineate, with least privilege principal leading the way, exactly who can get to the production servers.

Asked to answer.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/1t8d7e6xuzply3wi', 'title': 'Why should developers not have access to a production database?', 'score': {'original': 0.8658, 'ai': 0.1342}, 'blocks': [{'text': 'Every time I get a developer who wants access to the production database, I ask them if they’re going to be on call? If you can get into production and muck things up, you can certainly plan to be the one to fix that. Every time, I get turned down.\n\nWe can go round & round about whether or not developers should have access to production and whether or not they’d be safe. I know tons of developers I’d absolutely trust inside production. I know some I wouldn’t trust inside their own laptop. However, we’re in a new age. Here is a long stack of letters, that if you don’t know, or don’t understand, you should also not be allowed into the production database:\n\nGDPR, CPPA, FERPA, HIPAA, SOX, PCI\n\nThat’s just a few, but if you know what those are, that’s why developers, and lots of other people, aren’t going to be allowed unfettered access to production. Heck, those letters mean we really have to carefully delineate, with least privilege principal leading the way, exactly who can get to the production servers.\n\nAsked to answer.', 'result': {'fake': 0.1677, 'real': 0.8323}, 'status': 'success'}], 'credits_used': 2, 'credits': 1983522, 'subscription': 0, 'content': 'Every time I get a developer who wants access to the production database, I ask them if they’re going to be on call? If you can get into production and muck things up, you can certainly plan to be the one to fix that. Every time, I get turned down.\n\nWe can go round & round about whether or not developers should have access to production and whether or not they’d be safe. I know tons of developers I’d absolutely trust inside production. I know some I wouldn’t trust inside their own laptop. However, we’re in a new age. Here is a long stack of letters, that if you don’t know, or don’t understand, you should also not be allowed into the production database:\n\nGDPR, CPPA, FERPA, HIPAA, SOX, PCI\n\nThat’s just a few, but if you know what those are, that’s why developers, and lots of other people, aren’t going to be allowed unfettered access to production. Heck, those letters mean we really have to carefully delineate, with least privilege principal leading the way, exactly who can get to the production servers.\n\nAsked to answer.', 'aiModelVersion': '1'}",0.8658
Muskan,6mo,How good is the Learnbay Full-Stack software Development course?,"I am absolutely thrilled to share my experience with the Learnbay Full-Stack Software Development course!

From the moment I started to research, I knew I was in for a phenomenal researching journey. The curriculum is comprehensive and well-structured, covering all the essential topics needed to become a proficient full-stack developer. Whether it's front-end technologies like HTML, CSS, and JavaScript, or back-end frameworks like Node.js and Django, this course covers it all.

But, what are the major takeaways and features of this course and institute?

One of the aspects is the quality of instructors. The instructors are industry experts with years of experience in the field. Their knowledge and expertise shine through in every lecture, making the learning process engaging and enjoyable. They are always available to answer questions and provide guidance, ensuring that students understand the concepts thoroughly.
Another highlight of this course is the hands-on approach to learning. Theory is important, but practical application is what truly solidifies understanding. Learnbay recognizes this and provides ample opportunities for students to apply their knowledge through projects and assignments. These projects simulate real-world scenarios and allow students to showcase their skills while also gaining valuable experience.
Furthermore, the team at the institute goes above and beyond to ensure that students have access to all the necessary resources. They provide a well-equipped learning platform that includes video lectures, coding exercises, quizzes, and a dedicated support system. The platform is user-friendly and intuitive, making it easy for students to navigate and access the materials they need.
One of the things I appreciate most is the emphasis on practical skills. The course focuses on teaching practical techniques and best practices that are relevant in today's industry. This ensures that students are not just equipped with theoretical knowledge but also have the skills required to excel in real-world scenarios.

Note:

It is an exceptional program that provides a comprehensive learning experience for aspiring full-stack developers. With top-notch instructors, hands-on learning opportunities, and a focus on practical skills, this course truly stands out. Whether you are a beginner or an experienced developer looking to upskill, Learnbay is the perfect place to further your career in software development.

To know more in-depth about the platform, let’s analyze the most influential features offered by the institute:

Course Name: Software Development Master Program

Course Highlights:

1:1 dedicated mentorship
Duration: 400+ hrs
Weekday bach: 9 months
Weekend batch: 11 months

Course Features:

Career support services (online and offline)
These services are designed to provide you with the necessary tools and guidance to navigate the competitive job market.
You can also access these services offline through the offline centers situated in cities including Bangalore, Hyderabad, Pune, and Delhi.
The team provides unlimited interview calls, 3 years of dedicated support, and 6 assured mock interviews sessions to prepare you.

2. Elite domain specialization

These professionals will provide you with invaluable knowledge and insights that will set you apart from the rest.
Not only will you gain a deeper understanding of your subject matter, but you'll also develop a strong network.
The domains to specialize in include MERN and product management.

3. Real-time and Capstone projects

It enhances their problem-solving skills as they face challenges and find solutions during the project.
Not only will you gain a deeper understanding of the subject matter, but you'll also develop problem-solving abilities.

Some of the projects you will work on include:

Design slack
Design reddit
Design tinder
Design airbnb

4. Verified certificates from renowned companies

Receiving IBM and Microsoft prestigious certifications not only validate your skills and knowledge but also provide you with immense recognition in the industry.
Employers highly value individuals who possess these certifications, as they demonstrate a high level of expertise.

However, if you are looking for an affordable alternative to Learnbay, you can check out Coursera:

Course Name: Master of Science in Software Engineering

Course Features:

Firstly, the course is designed by industry experts who have years of experience in the field.
Additionally, the course offers a flexible learning schedule, allowing you to study at your own pace and fit your education around your busy lifestyle.
Furthermore, the curriculum is comprehensive and up-to-date, covering all the essential topics in software engineering such as software design, development methodologies, and quality assurance.

However, the course does not provide career support services.

CONCLUSION

Online courses are absolutely the best resources to learn software development! With the advancements in technology, we no longer have to rely solely on traditional classroom settings to gain knowledge. Online courses provide the flexibility and convenience that allows us to learn at our own pace and in our own time. Whether you're a beginner or already have some coding experience, online courses cater to all skill levels.

Thank you","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/rqygxs8d0k51oizj', 'title': 'How good is the Learnbay Full-Stack software Development course?', 'score': {'original': 0, 'ai': 1}, 'blocks': [{'text': ""I am absolutely thrilled to share my experience with the Learnbay Full-Stack Software Development course!\n\nFrom the moment I started to research, I knew I was in for a phenomenal researching journey. The curriculum is comprehensive and well-structured, covering all the essential topics needed to become a proficient full-stack developer. Whether it's front-end technologies like HTML, CSS, and JavaScript, or back-end frameworks like Node.js and Django, this course covers it all.\n\nBut, what are the major takeaways and features of this course and institute?\n\nOne of the aspects is the quality of instructors. The instructors are industry experts with years of experience in the field. Their knowledge and expertise shine through in every lecture, making the learning process engaging and enjoyable. They are always available to answer questions and provide guidance, ensuring that students understand the concepts thoroughly.\nAnother highlight of this course is the hands-on approach to learning. Theory is important, but practical application is what truly solidifies understanding. Learnbay recognizes this and provides ample opportunities for students to apply their knowledge through projects and assignments. These projects simulate real-world scenarios and allow students to showcase their skills while also gaining valuable experience.\nFurthermore, the team at the institute goes above and beyond to ensure that students have access to all the necessary resources. They provide a well-equipped learning platform that includes video lectures, coding exercises, quizzes, and a dedicated support system. The platform is user-friendly and intuitive, making it easy for students to navigate and access the materials they need.\nOne of the things I appreciate most is the emphasis on practical skills. The course focuses on teaching practical techniques and best practices that are relevant in today's industry. This ensures that students are not just equipped with theoretical knowledge but also have the skills required to excel in real-world scenarios.\n\nNote:\n\nIt is an exceptional program that provides a comprehensive learning experience for aspiring full-stack developers. With top-notch instructors, hands-on learning opportunities, and a focus on practical skills, this course truly stands out. Whether you are a beginner or an experienced developer looking to upskill, Learnbay is the perfect place to further your career in software development.\n\nTo know more in-depth about the platform, let’s analyze the most influential features offered by the institute:\n\nCourse Name: Software Development Master Program\n\nCourse Highlights:\n\n1:1 dedicated mentorship\nDuration: 400+ hrs\nWeekday bach: 9 months\nWeekend batch: 11 months\n\nCourse Features:\n\nCareer support services (online and offline)\nThese services are designed to provide you with the necessary tools and guidance to navigate the competitive job market.\nYou can also access these services offline through the offline centers situated in cities including Bangalore, Hyderabad, Pune, and Delhi.\nThe team provides unlimited interview calls, 3 years of dedicated support, and 6 assured mock interviews sessions to prepare you.\n\n2. Elite domain specialization\n\nThese professionals will provide you with invaluable knowledge and insights that will set you apart from the rest.\nNot only will you gain a deeper understanding of your subject matter, but you'll also develop a strong network.\nThe domains to specialize in include MERN and product management.\n\n3. Real-time and Capstone projects\n\nIt enhances their problem-solving skills as they face challenges and find solutions during the project.\nNot only"", 'result': {'fake': 1, 'real': 0}, 'status': 'success'}, {'text': ""will you gain a deeper understanding of the subject matter, but you'll also develop problem-solving abilities.\n\nSome of the projects you will work on include:\n\nDesign slack\nDesign reddit\nDesign tinder\nDesign airbnb\n\n4. Verified certificates from renowned companies\n\nReceiving IBM and Microsoft prestigious certifications not only validate your skills and knowledge but also provide you with immense recognition in the industry.\nEmployers highly value individuals who possess these certifications, as they demonstrate a high level of expertise.\n\nHowever, if you are looking for an affordable alternative to Learnbay, you can check out Coursera:\n\nCourse Name: Master of Science in Software Engineering\n\nCourse Features:\n\nFirstly, the course is designed by industry experts who have years of experience in the field.\nAdditionally, the course offers a flexible learning schedule, allowing you to study at your own pace and fit your education around your busy lifestyle.\nFurthermore, the curriculum is comprehensive and up-to-date, covering all the essential topics in software engineering such as software design, development methodologies, and quality assurance.\n\nHowever, the course does not provide career support services.\n\nCONCLUSION\n\nOnline courses are absolutely the best resources to learn software development! With the advancements in technology, we no longer have to rely solely on traditional classroom settings to gain knowledge. Online courses provide the flexibility and convenience that allows us to learn at our own pace and in our own time. Whether you're a beginner or already have some coding experience, online courses cater to all skill levels.\n\nThank you"", 'result': {'fake': 1, 'real': 0}, 'status': 'success'}], 'credits_used': 8, 'credits': 1983514, 'subscription': 0, 'content': ""I am absolutely thrilled to share my experience with the Learnbay Full-Stack Software Development course!\n\nFrom the moment I started to research, I knew I was in for a phenomenal researching journey. The curriculum is comprehensive and well-structured, covering all the essential topics needed to become a proficient full-stack developer. Whether it's front-end technologies like HTML, CSS, and JavaScript, or back-end frameworks like Node.js and Django, this course covers it all.\n\nBut, what are the major takeaways and features of this course and institute?\n\nOne of the aspects is the quality of instructors. The instructors are industry experts with years of experience in the field. Their knowledge and expertise shine through in every lecture, making the learning process engaging and enjoyable. They are always available to answer questions and provide guidance, ensuring that students understand the concepts thoroughly.\nAnother highlight of this course is the hands-on approach to learning. Theory is important, but practical application is what truly solidifies understanding. Learnbay recognizes this and provides ample opportunities for students to apply their knowledge through projects and assignments. These projects simulate real-world scenarios and allow students to showcase their skills while also gaining valuable experience.\nFurthermore, the team at the institute goes above and beyond to ensure that students have access to all the necessary resources. They provide a well-equipped learning platform that includes video lectures, coding exercises, quizzes, and a dedicated support system. The platform is user-friendly and intuitive, making it easy for students to navigate and access the materials they need.\nOne of the things I appreciate most is the emphasis on practical skills. The course focuses on teaching practical techniques and best practices that are relevant in today's industry. This ensures that students are not just equipped with theoretical knowledge but also have the skills required to excel in real-world scenarios.\n\nNote:\n\nIt is an exceptional program that provides a comprehensive learning experience for aspiring full-stack developers. With top-notch instructors, hands-on learning opportunities, and a focus on practical skills, this course truly stands out. Whether you are a beginner or an experienced developer looking to upskill, Learnbay is the perfect place to further your career in software development.\n\nTo know more in-depth about the platform, let’s analyze the most influential features offered by the institute:\n\nCourse Name: Software Development Master Program\n\nCourse Highlights:\n\n1:1 dedicated mentorship\nDuration: 400+ hrs\nWeekday bach: 9 months\nWeekend batch: 11 months\n\nCourse Features:\n\nCareer support services (online and offline)\nThese services are designed to provide you with the necessary tools and guidance to navigate the competitive job market.\nYou can also access these services offline through the offline centers situated in cities including Bangalore, Hyderabad, Pune, and Delhi.\nThe team provides unlimited interview calls, 3 years of dedicated support, and 6 assured mock interviews sessions to prepare you.\n\n2. Elite domain specialization\n\nThese professionals will provide you with invaluable knowledge and insights that will set you apart from the rest.\nNot only will you gain a deeper understanding of your subject matter, but you'll also develop a strong network.\nThe domains to specialize in include MERN and product management.\n\n3. Real-time and Capstone projects\n\nIt enhances their problem-solving skills as they face challenges and find solutions during the project.\nNot only will you gain a deeper understanding of the subject matter, but you'll also develop problem-solving abilities.\n\nSome of the projects you will work on include:\n\nDesign slack\nDesign reddit\nDesign tinder\nDesign airbnb\n\n4. Verified certificates from renowned companies\n\nReceiving IBM and Microsoft prestigious certifications not only validate your skills and knowledge but also provide you with immense recognition in the industry.\nEmployers highly value individuals who possess these certifications, as they demonstrate a high level of expertise.\n\nHowever, if you are looking for an affordable alternative to Learnbay, you can check out Coursera:\n\nCourse Name: Master of Science in Software Engineering\n\nCourse Features:\n\nFirstly, the course is designed by industry experts who have years of experience in the field.\nAdditionally, the course offers a flexible learning schedule, allowing you to study at your own pace and fit your education around your busy lifestyle.\nFurthermore, the curriculum is comprehensive and up-to-date, covering all the essential topics in software engineering such as software design, development methodologies, and quality assurance.\n\nHowever, the course does not provide career support services.\n\nCONCLUSION\n\nOnline courses are absolutely the best resources to learn software development! With the advancements in technology, we no longer have to rely solely on traditional classroom settings to gain knowledge. Online courses provide the flexibility and convenience that allows us to learn at our own pace and in our own time. Whether you're a beginner or already have some coding experience, online courses cater to all skill levels.\n\nThank you"", 'aiModelVersion': '1'}",0.0
Rumana Jameel,7mo,"Which is better Learnbay, Simplilearn, Coursera, or UpGrad for learning Full-Stack software Development Course?","Software development as an industry has grown rapidly and massively because of the growth of Artificial intelligence and the changing landscape of technology. Many people have started to show interest in learning software development, especially in full-stack development as it has more demand than backend or frontend development partially. This has triggered the Ed-tech platforms to offer Software development programs.

The institutes mentioned above are some of the well-known ed-tech platforms that offer software development programs.

To know which course offers the best software development training, you should consider whether the course has the following features with it. The following features will help you to learn in a comprehensive manner and prepare you for the job.

Certification accredited by renowned institutions and companies
Taught by industry professionals
Domain-specific training
Placement assistance
Real-time project sessions.

If the course has the above-mentioned features, students can select the course confidently. Let us take the courses and their features.

Program - Software Development Master Program.

Features

Participants of this program will receive training from expert faculties with industry experience. This institute allows you to collaborate with your peers to learn and find growth opportunities.
Students of this course will receive domain-specific training, this training allows them to master a particular domain and help them to land their dream job easily. The following are the available domains in this course.
MERN Stack
Product Management
Students will receive a course completion certificate from IBM and Microsoft.
This course offers various real-time projects to provide exposure to the real-world software development process. In total, they offer 12+ real-time projects, some of these projects include
Designing Reddit API, focusing on core functionalities for seamless interaction with the platform.
Developing a robust API for Zerodha, with functionalities such as account authentication, real-time market data, order placement, and more.
This course consists of a career service pro feature, which offers comprehensive job assistance features for three years. This feature includes unlimited interview calls, career guidance, mock interviews, 1:1 resume & profile review sessions, and more.

However, this course is created specifically for working professionals and their needs.

Program - Full-Stack Java Developer

Features

Students will receive placement assistance from industry experts. Also, they offer interview preparation which includes resume and profile building, mock interview sessions, and more.
Upon the successful completion of the course, students will receive a course completion certificate from Simplilearn.
Students will receive an opportunity to work on four industry-relevant projects. Some of the projects include,
Building a Food delivery application
Building a Healthcare web application

Drawbacks - Simplilearn does not offer domain-specific training and the program is based on Java programming language only.

Program - IBM Full Stack Software Developer Professional Certificate Course.

Features

The course is offered by IBM and taught by the working professionals of IBM.
Students will receive a certificate that is accredited by both IBM and Coursera.
Students will receive various soft skills training, resume review sessions, interview preparation, mock interview sessions, career support, and more.
Students will receive the opportunity to work on various real-world projects, that are taken based on various industry and their software full-stack software development projects.

However, Coursera doesn’t offer domain-specific training to its students.

Program - Executive Post Graduate Program in Software Development - Specialisation in Full Stack Development.

Features

Participants of this course will receive training from expert faculties who are from top-tier companies like LinkedIn, Google, Walmart, and more.
Students will receive training to work on real-time industry projects. Students will be mentored by industry experts in project sessions. Some of the projects include
Developing a Restaurant finder application
Developing a Mobile Cart Application.
Their curriculum includes a career assistance feature, which includes career mentorship, interview preparation, and more.
Participants of this program will receive course completion certificates from the International Institute of Information Technology Bangalore. Also, students will receive alumni status from IIIT Bangalore. This alumni status and certificate will enhance the student’s profile and professional value as it is offered by a College of national importance.

However, they do not offer different specializations other than Full-stack development.

Summing up:

Please refer to the above-mentioned information and do your due diligence to select the appropriate course which meets your needs and wants.

I hope this information helps you.

Thank you!","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/3c1w8zaxeojsyunl', 'title': 'Which is better Learnbay, Simplilearn, Coursera, or UpGrad for learning Full-Stack software Development Course?', 'score': {'original': 0.4744, 'ai': 0.5256}, 'blocks': [{'text': 'Software development as an industry has grown rapidly and massively because of the growth of Artificial intelligence and the changing landscape of technology. Many people have started to show interest in learning software development, especially in full-stack development as it has more demand than backend or frontend development partially. This has triggered the Ed-tech platforms to offer Software development programs.\n\nThe institutes mentioned above are some of the well-known ed-tech platforms that offer software development programs.\n\nTo know which course offers the best software development training, you should consider whether the course has the following features with it. The following features will help you to learn in a comprehensive manner and prepare you for the job.\n\nCertification accredited by renowned institutions and companies\nTaught by industry professionals\nDomain-specific training\nPlacement assistance\nReal-time project sessions.\n\nIf the course has the above-mentioned features, students can select the course confidently. Let us take the courses and their features.\n\nProgram - Software Development Master Program.\n\nFeatures\n\nParticipants of this program will receive training from expert faculties with industry experience. This institute allows you to collaborate with your peers to learn and find growth opportunities.\nStudents of this course will receive domain-specific training, this training allows them to master a particular domain and help them to land their dream job easily. The following are the available domains in this course.\nMERN Stack\nProduct Management\nStudents will receive a course completion certificate from IBM and Microsoft.\nThis course offers various real-time projects to provide exposure to the real-world software development process. In total, they offer 12+ real-time projects, some of these projects include\nDesigning Reddit API, focusing on core functionalities for seamless interaction with the platform.\nDeveloping a robust API for Zerodha, with functionalities such as account authentication, real-time market data, order placement, and more.\nThis course consists of a career service pro feature, which offers comprehensive job assistance features for three years. This feature includes unlimited interview calls, career guidance, mock interviews, 1:1 resume & profile review sessions, and more.\n\nHowever, this course is created specifically for working professionals and their needs.\n\nProgram - Full-Stack Java Developer\n\nFeatures\n\nStudents will receive placement assistance from industry experts. Also, they offer interview preparation which includes resume and profile building, mock interview sessions, and more.\nUpon the successful completion of the course, students will receive a course completion certificate from Simplilearn.\nStudents will receive an opportunity to work on four industry-relevant projects. Some of the projects include,\nBuilding a Food delivery application\nBuilding a Healthcare web application\n\nDrawbacks - Simplilearn does not offer domain-specific training and the program is based on Java programming language only.\n\nProgram - IBM Full Stack Software Developer Professional Certificate Course.\n\nFeatures\n\nThe course is offered by IBM and taught by the working professionals of IBM.\nStudents will receive a certificate that is accredited by both IBM and Coursera.\nStudents will receive various soft skills training, resume review sessions, interview preparation, mock interview sessions, career support, and more.\nStudents will receive the opportunity to work on various real-world projects, that are taken based on various industry and their software full-stack software development projects.\n\nHowever, Coursera doesn’t offer domain-specific training to its students.\n\nProgram - Executive Post Graduate Program in Software Development - Specialisation in Full Stack Development.\n\nFeatures\n\nParticipants of this course will receive', 'result': {'fake': 0.0522, 'real': 0.9478}, 'status': 'success'}, {'text': 'training from expert faculties who are from top-tier companies like LinkedIn, Google, Walmart, and more.\nStudents will receive training to work on real-time industry projects. Students will be mentored by industry experts in project sessions. Some of the projects include\nDeveloping a Restaurant finder application\nDeveloping a Mobile Cart Application.\nTheir curriculum includes a career assistance feature, which includes career mentorship, interview preparation, and more.\nParticipants of this program will receive course completion certificates from the International Institute of Information Technology Bangalore. Also, students will receive alumni status from IIIT Bangalore. This alumni status and certificate will enhance the student’s profile and professional value as it is offered by a College of national importance.\n\nHowever, they do not offer different specializations other than Full-stack development.\n\nSumming up:\n\nPlease refer to the above-mentioned information and do your due diligence to select the appropriate course which meets your needs and wants.\n\nI hope this information helps you.\n\nThank you!', 'result': {'fake': 0.987, 'real': 0.013}, 'status': 'success'}], 'credits_used': 8, 'credits': 1983506, 'subscription': 0, 'content': 'Software development as an industry has grown rapidly and massively because of the growth of Artificial intelligence and the changing landscape of technology. Many people have started to show interest in learning software development, especially in full-stack development as it has more demand than backend or frontend development partially. This has triggered the Ed-tech platforms to offer Software development programs.\n\nThe institutes mentioned above are some of the well-known ed-tech platforms that offer software development programs.\n\nTo know which course offers the best software development training, you should consider whether the course has the following features with it. The following features will help you to learn in a comprehensive manner and prepare you for the job.\n\nCertification accredited by renowned institutions and companies\nTaught by industry professionals\nDomain-specific training\nPlacement assistance\nReal-time project sessions.\n\nIf the course has the above-mentioned features, students can select the course confidently. Let us take the courses and their features.\n\nProgram - Software Development Master Program.\n\nFeatures\n\nParticipants of this program will receive training from expert faculties with industry experience. This institute allows you to collaborate with your peers to learn and find growth opportunities.\nStudents of this course will receive domain-specific training, this training allows them to master a particular domain and help them to land their dream job easily. The following are the available domains in this course.\nMERN Stack\nProduct Management\nStudents will receive a course completion certificate from IBM and Microsoft.\nThis course offers various real-time projects to provide exposure to the real-world software development process. In total, they offer 12+ real-time projects, some of these projects include\nDesigning Reddit API, focusing on core functionalities for seamless interaction with the platform.\nDeveloping a robust API for Zerodha, with functionalities such as account authentication, real-time market data, order placement, and more.\nThis course consists of a career service pro feature, which offers comprehensive job assistance features for three years. This feature includes unlimited interview calls, career guidance, mock interviews, 1:1 resume & profile review sessions, and more.\n\nHowever, this course is created specifically for working professionals and their needs.\n\nProgram - Full-Stack Java Developer\n\nFeatures\n\nStudents will receive placement assistance from industry experts. Also, they offer interview preparation which includes resume and profile building, mock interview sessions, and more.\nUpon the successful completion of the course, students will receive a course completion certificate from Simplilearn.\nStudents will receive an opportunity to work on four industry-relevant projects. Some of the projects include,\nBuilding a Food delivery application\nBuilding a Healthcare web application\n\nDrawbacks - Simplilearn does not offer domain-specific training and the program is based on Java programming language only.\n\nProgram - IBM Full Stack Software Developer Professional Certificate Course.\n\nFeatures\n\nThe course is offered by IBM and taught by the working professionals of IBM.\nStudents will receive a certificate that is accredited by both IBM and Coursera.\nStudents will receive various soft skills training, resume review sessions, interview preparation, mock interview sessions, career support, and more.\nStudents will receive the opportunity to work on various real-world projects, that are taken based on various industry and their software full-stack software development projects.\n\nHowever, Coursera doesn’t offer domain-specific training to its students.\n\nProgram - Executive Post Graduate Program in Software Development - Specialisation in Full Stack Development.\n\nFeatures\n\nParticipants of this course will receive training from expert faculties who are from top-tier companies like LinkedIn, Google, Walmart, and more.\nStudents will receive training to work on real-time industry projects. Students will be mentored by industry experts in project sessions. Some of the projects include\nDeveloping a Restaurant finder application\nDeveloping a Mobile Cart Application.\nTheir curriculum includes a career assistance feature, which includes career mentorship, interview preparation, and more.\nParticipants of this program will receive course completion certificates from the International Institute of Information Technology Bangalore. Also, students will receive alumni status from IIIT Bangalore. This alumni status and certificate will enhance the student’s profile and professional value as it is offered by a College of national importance.\n\nHowever, they do not offer different specializations other than Full-stack development.\n\nSumming up:\n\nPlease refer to the above-mentioned information and do your due diligence to select the appropriate course which meets your needs and wants.\n\nI hope this information helps you.\n\nThank you!', 'aiModelVersion': '1'}",0.4744
James Barton,Updated 3y,"In computer programming, why do we learn about recursion if we really shouldn't use it in practice (having to maintain and keep track of the stack, when it would just be easier to use loops)?","Don't use recursion when iteration works well. But some situations are extremely difficult to address with an iterative approach. Here are some examples:

You use recursion for a dump, print, or serialize function that processes data structures that may be nested to any depth.
A B+Tree index system for a database consists of many dozens or even hundreds of functions that all must be callable recursively.
Some kinds of parsers are much easier to implement recursively.

I've implemented all of the above and learned to appreciate recursion when it fits the need. But unless it's necessary, I prefer iteration, which is easier to debug, has less chance of memory leakage, and generally runs faster as well.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/p3ny0ortcl2zkeqj', 'title': ""In computer programming, why do we learn about recursion if we really shouldn't use it in practice (having to maintain and keep track of the stack, when it would just be easier to use loops)?"", 'score': {'original': 0.9822, 'ai': 0.0178}, 'blocks': [{'text': ""Don't use recursion when iteration works well. But some situations are extremely difficult to address with an iterative approach. Here are some examples:\n\nYou use recursion for a dump, print, or serialize function that processes data structures that may be nested to any depth.\nA B+Tree index system for a database consists of many dozens or even hundreds of functions that all must be callable recursively.\nSome kinds of parsers are much easier to implement recursively.\n\nI've implemented all of the above and learned to appreciate recursion when it fits the need. But unless it's necessary, I prefer iteration, which is easier to debug, has less chance of memory leakage, and generally runs faster as well."", 'result': {'fake': 0.0178, 'real': 0.9822}, 'status': 'success'}], 'credits_used': 2, 'credits': 1983504, 'subscription': 0, 'content': ""Don't use recursion when iteration works well. But some situations are extremely difficult to address with an iterative approach. Here are some examples:\n\nYou use recursion for a dump, print, or serialize function that processes data structures that may be nested to any depth.\nA B+Tree index system for a database consists of many dozens or even hundreds of functions that all must be callable recursively.\nSome kinds of parsers are much easier to implement recursively.\n\nI've implemented all of the above and learned to appreciate recursion when it fits the need. But unless it's necessary, I prefer iteration, which is easier to debug, has less chance of memory leakage, and generally runs faster as well."", 'aiModelVersion': '1'}",0.9822
Hans Olsen,2y,What is the most dramatic speedup you've had in a piece of code from a simple change?,"About 20 years ago, I was asked to implement firmware loading over a parallel port, for one of the products we were manufacturing. The setup was that we used a generic I/O card that could be connected to any type of product that we were manufacturing and I had to implement the parallel port communication and firmware loading from scratch using bit-banging.

(The device that should be firmware loaded, a print server, used in the days before printers were network connected.)

So I read up on how parallel port communication works, how to do the appropriate hand shaking, signalling etc on the different pins and then implemented this into our firmware loading software.

The issue here was that the firmware loading software was a user level application running on top of the OS and writing low level I/O communication requires several very very short waits between different state changes. Writing software on an application level, you can't wait for very very short time, at best about 10 milliseconds. The end result worked but it was rather slow, loading firmware took about 20-30 seconds.

The solution was rolled out to one production lane for testing, to see if it would work and could be used. Feedback from production was that it was better than their old legacy solution, but there was complaints on it being slow.

So I looked at it again to see what could be done. I knew the issue was the waiting, I replaced the thread waits with busy loops, trying to make the waiting faster. This did improve it somewhat, but there were other side effects when doing this. I then dug up the boot loader code that was running from the ROM, in device that should be firmware loaded.

Turns out that the code in the boot loader was really cut down to the bare minimum and it made a bunch of assumptions on how to receive the firmware on the parallel port and at this level it was doing bit-banging as well.

I had been told that the parallel port had to be set in a specific mode before uploading the firmware, which was probably true if going though a proper parallel port driver, but looking at the boot loader code, it clearly didn't care about the mode at all, it did respond to it, but it would not have any effect what so ever on loading the firmware. So out with that code, tried it, it worked and gave a speed up. Nice.

Realizing that the boot loader wasn't really following the parallel port protocol at all, I didn't need to do that either and could throw out a bunch of other code and signalling as well. Final solution did only the things needed to satisfy the boot loader and with this very minimal and optimized code, I could do busy waits without side-effect on other parts of the firmware loader. Firmware loading went from 20-30 seconds down to a fraction of a second, which was just unbelievable.

For fun, I down played the speed improvement when handing it over to the production test engineer and casually said that I had done some improvements here and there, not sure how much of a difference it will really make, let me know how it turns out. Once he had tested it in production he came back and said they had tested it several times and it worked, but they could not believe the difference, now it was almost instant. I explained what I had done and we had a good laugh about it.

It went into production, everyone was happy and it made me look awesome that day. Sure, I wrote the ""crappy code"" in the first try, but the final solution was still many times faster than the old legacy solution, which was going through a parallel port driver, implementing the full parallel port protocol and not doing any shortcuts. That was a really great feeling.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/m0wkfid5jgotb32s', 'title': ""What is the most dramatic speedup you've had in a piece of code from a simple change?"", 'score': {'original': 0.58015, 'ai': 0.41985}, 'blocks': [{'text': ""About 20 years ago, I was asked to implement firmware loading over a parallel port, for one of the products we were manufacturing. The setup was that we used a generic I/O card that could be connected to any type of product that we were manufacturing and I had to implement the parallel port communication and firmware loading from scratch using bit-banging.\n\n(The device that should be firmware loaded, a print server, used in the days before printers were network connected.)\n\nSo I read up on how parallel port communication works, how to do the appropriate hand shaking, signalling etc on the different pins and then implemented this into our firmware loading software.\n\nThe issue here was that the firmware loading software was a user level application running on top of the OS and writing low level I/O communication requires several very very short waits between different state changes. Writing software on an application level, you can't wait for very very short time, at best about 10 milliseconds. The end result worked but it was rather slow, loading firmware took about 20-30 seconds.\n\nThe solution was rolled out to one production lane for testing, to see if it would work and could be used. Feedback from production was that it was better than their old legacy solution, but there was complaints on it being slow.\n\nSo I looked at it again to see what could be done. I knew the issue was the waiting, I replaced the thread waits with busy loops, trying to make the waiting faster. This did improve it somewhat, but there were other side effects when doing this. I then dug up the boot loader code that was running from the ROM, in device that should be firmware loaded.\n\nTurns out that the code in the boot loader was really cut down to the bare minimum and it made a bunch of assumptions on how to receive the firmware on the parallel port and at this level it was doing bit-banging as well.\n\nI had been told that the parallel port had to be set in a specific mode before uploading the firmware, which was probably true if going though a proper parallel port driver, but looking at the boot loader code, it clearly didn't care about the mode at all, it did respond to it, but it would not have any effect what so ever on loading the firmware. So out with that code, tried it, it worked and gave a speed up. Nice.\n\nRealizing that the boot loader wasn't really following the parallel port protocol at all, I didn't need to do that either and could throw out a bunch of other code and signalling as well. Final solution did only the things needed to satisfy the boot loader and with this very minimal and optimized code, I could do busy waits without side-effect on other parts of the firmware loader. Firmware loading went from 20-30 seconds down to a fraction of a second, which was just unbelievable.\n\nFor fun, I down played the speed improvement when handing it over to the production test engineer"", 'result': {'fake': 0.0527, 'real': 0.9473}, 'status': 'success'}, {'text': 'and casually said that I had done some improvements here and there, not sure how much of a difference it will really make, let me know how it turns out. Once he had tested it in production he came back and said they had tested it several times and it worked, but they could not believe the difference, now it was almost instant. I explained what I had done and we had a good laugh about it.\n\nIt went into production, everyone was happy and it made me look awesome that day. Sure, I wrote the ""crappy code"" in the first try, but the final solution was still many times faster than the old legacy solution, which was going through a parallel port driver, implementing the full parallel port protocol and not doing any shortcuts. That was a really great feeling.', 'result': {'fake': 0.073, 'real': 0.927}, 'status': 'success'}], 'credits_used': 7, 'credits': 1983497, 'subscription': 0, 'content': 'About 20 years ago, I was asked to implement firmware loading over a parallel port, for one of the products we were manufacturing. The setup was that we used a generic I/O card that could be connected to any type of product that we were manufacturing and I had to implement the parallel port communication and firmware loading from scratch using bit-banging.\n\n(The device that should be firmware loaded, a print server, used in the days before printers were network connected.)\n\nSo I read up on how parallel port communication works, how to do the appropriate hand shaking, signalling etc on the different pins and then implemented this into our firmware loading software.\n\nThe issue here was that the firmware loading software was a user level application running on top of the OS and writing low level I/O communication requires several very very short waits between different state changes. Writing software on an application level, you can\'t wait for very very short time, at best about 10 milliseconds. The end result worked but it was rather slow, loading firmware took about 20-30 seconds.\n\nThe solution was rolled out to one production lane for testing, to see if it would work and could be used. Feedback from production was that it was better than their old legacy solution, but there was complaints on it being slow.\n\nSo I looked at it again to see what could be done. I knew the issue was the waiting, I replaced the thread waits with busy loops, trying to make the waiting faster. This did improve it somewhat, but there were other side effects when doing this. I then dug up the boot loader code that was running from the ROM, in device that should be firmware loaded.\n\nTurns out that the code in the boot loader was really cut down to the bare minimum and it made a bunch of assumptions on how to receive the firmware on the parallel port and at this level it was doing bit-banging as well.\n\nI had been told that the parallel port had to be set in a specific mode before uploading the firmware, which was probably true if going though a proper parallel port driver, but looking at the boot loader code, it clearly didn\'t care about the mode at all, it did respond to it, but it would not have any effect what so ever on loading the firmware. So out with that code, tried it, it worked and gave a speed up. Nice.\n\nRealizing that the boot loader wasn\'t really following the parallel port protocol at all, I didn\'t need to do that either and could throw out a bunch of other code and signalling as well. Final solution did only the things needed to satisfy the boot loader and with this very minimal and optimized code, I could do busy waits without side-effect on other parts of the firmware loader. Firmware loading went from 20-30 seconds down to a fraction of a second, which was just unbelievable.\n\nFor fun, I down played the speed improvement when handing it over to the production test engineer and casually said that I had done some improvements here and there, not sure how much of a difference it will really make, let me know how it turns out. Once he had tested it in production he came back and said they had tested it several times and it worked, but they could not believe the difference, now it was almost instant. I explained what I had done and we had a good laugh about it.\n\nIt went into production, everyone was happy and it made me look awesome that day. Sure, I wrote the ""crappy code"" in the first try, but the final solution was still many times faster than the old legacy solution, which was going through a parallel port driver, implementing the full parallel port protocol and not doing any shortcuts. That was a really great feeling.', 'aiModelVersion': '1'}",0.58015
Ben Podgursky,4y,"Will technology like AWS, Firebase, and Docker take backend engineers' jobs? Is the future of backend engineers dark?","Backend engineer — nah.

If my job title was “Ops”, “System Administrator”, “Deployment Engineer” or “DBA” though, I’d be hitting the books like Dwayne Johnson hits the gym.

The traditional “system mechanics, separated from domain knowledge” roles are being rapidly, rapidly automated by tools that empower developers to perform ‘operations’ tasks (see, DevOps
):

Lambda, Kubernetes and Docker are rapidly removing the “System Administrator” from the picture. For most applications, engineers don’t need to administer a physical system, or perform kernel tuning — they can just make a container and run it on on GKE, EC2 or Lambda.

This sounds dismissive, but I want to be clear — I deeply respect Linux kernel optimization skills (which I do not really have), and believe there is a place for them, but that place is increasingly within the cloud provider itself, not at the companies using the cloud. AWS will always need engineers who understand microprocessor performance tuning — but the startups using AWS likely will not.
Kubernetes and Terraform are obviating “Deployment Engineers.” Very few companies in 3 years are going to have a once-a-quarter, 15 stage deployment process that requires a dedicated engineer. They’re going to have a K8s manifest, red/green deployment clusters, and an ELB that carefully cuts traffic over during deploys.

Deploys will be frequent, safe, and run by the engineers writing code, not specialists.
The DBA responsibilities for data permissioning, backups, replication, and scaling are all getting replaced by RDS, Aurora, and other hosted databases where “enabling backups” means “clicking the button that says ‘enable backup’”.

There will still be query optimization and a bit of tricky-join writing, but I think it’s unlikely that DBA will be a distinct role in 5 years except in the largest of organizations.
Holistically, cloud consoles have replaced the suite of services that an Ops team traditionally provides an engineering team. There’s no reason for a layer between “installing NFS” and an application engineer.

But that’s not the world of a “backend engineer”. “Backend engineer” in the cloud era* will mean:

“I am able to translate business logic and domain knowledge into a maintainable mix of cloud-native services.”
“I am able to identify performance hot-spots and go deep where needed; I rely on the abstractions provided by the Cloud when possible, but have the judgement to drop down to self-managed services when those fail me.”
“I have a solid understanding of the services our company has already built — I’m able to use domain knowledge to combine those services into novel products rapidly and cost-effectively.”

It’s hard to imagine a world where these roles are automated in the near future. The edges are going to be nibbled at — some BI users will be hacking together AirFlow applications, and product teams will be messing around with Lambda for routine tasks — but it’s unlikely that non-technical users will be putting together full product stacks without “real engineers.”

*Holy s***. I literally just figured out through autocorrect that “Cloudera” is “Cloud era”. I maintained a Cloudera cluster for 6 years. Was that intentional? I feel so dumb.

So, long story short, the way I see it:

If your job is highly specialized and many layers separated from domain knowledge and the product stack — I would be careful. The demand for your skills won’t necessarily evaporate, but they may only be needed…. elsewhere.
If you are connected to your product stack, have domain knowledge, and are able to translate ideas into a product using cloud services — my guess is that your job is safe forever*

*or you know, at least 5 years.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/xd9ojn6vi57pqbsw', 'title': ""Will technology like AWS, Firebase, and Docker take backend engineers' jobs? Is the future of backend engineers dark?"", 'score': {'original': 0.7512, 'ai': 0.2488}, 'blocks': [{'text': 'Backend engineer — nah.\n\nIf my job title was “Ops”, “System Administrator”, “Deployment Engineer” or “DBA” though, I’d be hitting the books like Dwayne Johnson hits the gym.\n\nThe traditional “system mechanics, separated from domain knowledge” roles are being rapidly, rapidly automated by tools that empower developers to perform ‘operations’ tasks (see, DevOps\n):\n\nLambda, Kubernetes and Docker are rapidly removing the “System Administrator” from the picture. For most applications, engineers don’t need to administer a physical system, or perform kernel tuning — they can just make a container and run it on on GKE, EC2 or Lambda.\n\nThis sounds dismissive, but I want to be clear — I deeply respect Linux kernel optimization skills (which I do not really have), and believe there is a place for them, but that place is increasingly within the cloud provider itself, not at the companies using the cloud. AWS will always need engineers who understand microprocessor performance tuning — but the startups using AWS likely will not.\nKubernetes and Terraform are obviating “Deployment Engineers.” Very few companies in 3 years are going to have a once-a-quarter, 15 stage deployment process that requires a dedicated engineer. They’re going to have a K8s manifest, red/green deployment clusters, and an ELB that carefully cuts traffic over during deploys.\n\nDeploys will be frequent, safe, and run by the engineers writing code, not specialists.\nThe DBA responsibilities for data permissioning, backups, replication, and scaling are all getting replaced by RDS, Aurora, and other hosted databases where “enabling backups” means “clicking the button that says ‘enable backup’”.\n\nThere will still be query optimization and a bit of tricky-join writing, but I think it’s unlikely that DBA will be a distinct role in 5 years except in the largest of organizations.\nHolistically, cloud consoles have replaced the suite of services that an Ops team traditionally provides an engineering team. There’s no reason for a layer between “installing NFS” and an application engineer.\n\nBut that’s not the world of a “backend engineer”. “Backend engineer” in the cloud era* will mean:\n\n“I am able to translate business logic and domain knowledge into a maintainable mix of cloud-native services.”\n“I am able to identify performance hot-spots and go deep where needed; I rely on the abstractions provided by the Cloud when possible, but have the judgement to drop down to self-managed services when those fail me.”\n“I have a solid understanding of the services our company has already built — I’m able to use domain knowledge to combine those services into novel products rapidly and cost-effectively.”\n\nIt’s hard to imagine a world where these roles are automated in the near future. The edges are going to be nibbled at — some BI users will be hacking together AirFlow applications, and product teams will be messing around with Lambda for routine tasks — but it’s unlikely that non-technical users will be putting together full product stacks without “real engineers.”\n\n*Holy s***. I literally just figured out through autocorrect that “Cloudera” is “Cloud era”. I maintained a Cloudera cluster for 6 years. Was that intentional? I feel so dumb.\n\nSo, long story short, the way I see it:\n\nIf your job is highly specialized', 'result': {'fake': 0.001, 'real': 0.999}, 'status': 'success'}, {'text': 'and many layers separated from domain knowledge and the product stack — I would be careful. The demand for your skills won’t necessarily evaporate, but they may only be needed…. elsewhere.\nIf you are connected to your product stack, have domain knowledge, and are able to translate ideas into a product using cloud services — my guess is that your job is safe forever*\n\n*or you know, at least 5 years.', 'result': {'fake': 0.5626, 'real': 0.4374}, 'status': 'success'}], 'credits_used': 6, 'credits': 1983491, 'subscription': 0, 'content': 'Backend engineer — nah.\n\nIf my job title was “Ops”, “System Administrator”, “Deployment Engineer” or “DBA” though, I’d be hitting the books like Dwayne Johnson hits the gym.\n\nThe traditional “system mechanics, separated from domain knowledge” roles are being rapidly, rapidly automated by tools that empower developers to perform ‘operations’ tasks (see, DevOps\n):\n\nLambda, Kubernetes and Docker are rapidly removing the “System Administrator” from the picture. For most applications, engineers don’t need to administer a physical system, or perform kernel tuning — they can just make a container and run it on on GKE, EC2 or Lambda.\n\nThis sounds dismissive, but I want to be clear — I deeply respect Linux kernel optimization skills (which I do not really have), and believe there is a place for them, but that place is increasingly within the cloud provider itself, not at the companies using the cloud. AWS will always need engineers who understand microprocessor performance tuning — but the startups using AWS likely will not.\nKubernetes and Terraform are obviating “Deployment Engineers.” Very few companies in 3 years are going to have a once-a-quarter, 15 stage deployment process that requires a dedicated engineer. They’re going to have a K8s manifest, red/green deployment clusters, and an ELB that carefully cuts traffic over during deploys.\n\nDeploys will be frequent, safe, and run by the engineers writing code, not specialists.\nThe DBA responsibilities for data permissioning, backups, replication, and scaling are all getting replaced by RDS, Aurora, and other hosted databases where “enabling backups” means “clicking the button that says ‘enable backup’”.\n\nThere will still be query optimization and a bit of tricky-join writing, but I think it’s unlikely that DBA will be a distinct role in 5 years except in the largest of organizations.\nHolistically, cloud consoles have replaced the suite of services that an Ops team traditionally provides an engineering team. There’s no reason for a layer between “installing NFS” and an application engineer.\n\nBut that’s not the world of a “backend engineer”. “Backend engineer” in the cloud era* will mean:\n\n“I am able to translate business logic and domain knowledge into a maintainable mix of cloud-native services.”\n“I am able to identify performance hot-spots and go deep where needed; I rely on the abstractions provided by the Cloud when possible, but have the judgement to drop down to self-managed services when those fail me.”\n“I have a solid understanding of the services our company has already built — I’m able to use domain knowledge to combine those services into novel products rapidly and cost-effectively.”\n\nIt’s hard to imagine a world where these roles are automated in the near future. The edges are going to be nibbled at — some BI users will be hacking together AirFlow applications, and product teams will be messing around with Lambda for routine tasks — but it’s unlikely that non-technical users will be putting together full product stacks without “real engineers.”\n\n*Holy s***. I literally just figured out through autocorrect that “Cloudera” is “Cloud era”. I maintained a Cloudera cluster for 6 years. Was that intentional? I feel so dumb.\n\nSo, long story short, the way I see it:\n\nIf your job is highly specialized and many layers separated from domain knowledge and the product stack — I would be careful. The demand for your skills won’t necessarily evaporate, but they may only be needed…. elsewhere.\nIf you are connected to your product stack, have domain knowledge, and are able to translate ideas into a product using cloud services — my guess is that your job is safe forever*\n\n*or you know, at least 5 years.', 'aiModelVersion': '1'}",0.7512
Trausti Thor Johannsson,Updated 1y,Which programming language will be completely abandoned in the near future due to no-code development?,"This one is so easy to answer. The answer is so obvious.

No code will be replaced by code. Simple as that. No code nonsense has been tried for decades, without any success to speak of. It is actually much harder to do anything useful with it. Changing anything, moving anything around or trying not to have everything look identical costs crazy amount of time.

I have seen this in action. Crazy expensive no code project was instantiated at work. It was so expensive that it would not surprise me if they were still crying wolf and asking for extension on their demo license. A company that prints money, decided to use this product to generate some simple reports and simple input fields. It cost so much time, money and they still could not do things without injecting CODE into it. Did they cancel it? Of course not. When something does not work, has no way of working out, the right way is to double and tribble down.

I probably made no friends when I posted this on the intranet

Another commit strip gold cartoon which I could not find is like this. Two people talking. One guy is a programmer (PR) and one is not a programmer (NP).

Update. It was found.

There is a good reason for why we are still typing in code, into an editor, running linkers and compilers and spewing out machine language. We have been doing this since the 1960s. Because frankly, this could be the only way.

Like Uncle Bob said (wish he was my uncle). You could take a programmer from 1960–1970 and put him/her in front of a new computer. After a little wow, this and wow that, he/she could write code. You can also take a programmer from 2020 and put him/her in front of a computer from the early days, and after a little complaining, he/she would be writing code.

Just like we have not found a better way to communicate than reading, writing and talking, and this is as old as modern humans, even older, perhaps this simply is the best possible thing.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/bpris7w20zhu3ml8', 'title': 'Which programming language will be completely abandoned in the near future due to no-code development?', 'score': {'original': 0.9995, 'ai': 0.0005}, 'blocks': [{'text': 'This one is so easy to answer. The answer is so obvious.\n\nNo code will be replaced by code. Simple as that. No code nonsense has been tried for decades, without any success to speak of. It is actually much harder to do anything useful with it. Changing anything, moving anything around or trying not to have everything look identical costs crazy amount of time.\n\nI have seen this in action. Crazy expensive no code project was instantiated at work. It was so expensive that it would not surprise me if they were still crying wolf and asking for extension on their demo license. A company that prints money, decided to use this product to generate some simple reports and simple input fields. It cost so much time, money and they still could not do things without injecting CODE into it. Did they cancel it? Of course not. When something does not work, has no way of working out, the right way is to double and tribble down.\n\nI probably made no friends when I posted this on the intranet\n\nAnother commit strip gold cartoon which I could not find is like this. Two people talking. One guy is a programmer (PR) and one is not a programmer (NP).\n\nUpdate. It was found.\n\nThere is a good reason for why we are still typing in code, into an editor, running linkers and compilers and spewing out machine language. We have been doing this since the 1960s. Because frankly, this could be the only way.\n\nLike Uncle Bob said (wish he was my uncle). You could take a programmer from 1960–1970 and put him/her in front of a new computer. After a little wow, this and wow that, he/she could write code. You can also take a programmer from 2020 and put him/her in front of a computer from the early days, and after a little complaining, he/she would be writing code.\n\nJust like we have not found a better way to communicate than reading, writing and talking, and this is as old as modern humans, even older, perhaps this simply is the best possible thing.', 'result': {'fake': 0.0005, 'real': 0.9995}, 'status': 'success'}], 'credits_used': 4, 'credits': 1983487, 'subscription': 0, 'content': 'This one is so easy to answer. The answer is so obvious.\n\nNo code will be replaced by code. Simple as that. No code nonsense has been tried for decades, without any success to speak of. It is actually much harder to do anything useful with it. Changing anything, moving anything around or trying not to have everything look identical costs crazy amount of time.\n\nI have seen this in action. Crazy expensive no code project was instantiated at work. It was so expensive that it would not surprise me if they were still crying wolf and asking for extension on their demo license. A company that prints money, decided to use this product to generate some simple reports and simple input fields. It cost so much time, money and they still could not do things without injecting CODE into it. Did they cancel it? Of course not. When something does not work, has no way of working out, the right way is to double and tribble down.\n\nI probably made no friends when I posted this on the intranet\n\nAnother commit strip gold cartoon which I could not find is like this. Two people talking. One guy is a programmer (PR) and one is not a programmer (NP).\n\nUpdate. It was found.\n\nThere is a good reason for why we are still typing in code, into an editor, running linkers and compilers and spewing out machine language. We have been doing this since the 1960s. Because frankly, this could be the only way.\n\nLike Uncle Bob said (wish he was my uncle). You could take a programmer from 1960–1970 and put him/her in front of a new computer. After a little wow, this and wow that, he/she could write code. You can also take a programmer from 2020 and put him/her in front of a computer from the early days, and after a little complaining, he/she would be writing code.\n\nJust like we have not found a better way to communicate than reading, writing and talking, and this is as old as modern humans, even older, perhaps this simply is the best possible thing.', 'aiModelVersion': '1'}",0.9995
Kurt Guntheroth,2y,How do software development companies train junior developers?,"All companies expect entry-level developers to already know how to code in the company’s favorite programming language. It’s been 40–50 years since companies took in accountants and clerks and tried to teach them to program, in the US at least.
All companies look for entry-level developers who have some relevant work experience, or extra coding experience. That’s why it’s so hard to find a first job if you don’t have this experience.
Smaller companies make no attempt to train junior developers. This is why you see entry level jobs advertised that call for two years of experience.
Some larger companies offer internships to help develop talent. It also gives them a look at the talent, and an advantage in hiring the interns that do the best.
Some large companies (Google and Facebook are two) and some smaller companies have “onboarding” programs where new hires tour several departments and do sample coding tasks relevant to each department.
Other companies who hire entry level developers start them out small, on a reasonably obvious bug that needs fixing or a simple function to write. Ideally, the new hire is mentored and closely supervised to ensure they have a good experience, though there are companies that just drop the new hire into the shark tank and wait to see if they swim or die.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/1kg3zdyi0e7jcwxp', 'title': 'How do software development companies train junior developers?', 'score': {'original': 0.9992, 'ai': 0.0008}, 'blocks': [{'text': 'All companies expect entry-level developers to already know how to code in the company’s favorite programming language. It’s been 40–50 years since companies took in accountants and clerks and tried to teach them to program, in the US at least.\nAll companies look for entry-level developers who have some relevant work experience, or extra coding experience. That’s why it’s so hard to find a first job if you don’t have this experience.\nSmaller companies make no attempt to train junior developers. This is why you see entry level jobs advertised that call for two years of experience.\nSome larger companies offer internships to help develop talent. It also gives them a look at the talent, and an advantage in hiring the interns that do the best.\nSome large companies (Google and Facebook are two) and some smaller companies have “onboarding” programs where new hires tour several departments and do sample coding tasks relevant to each department.\nOther companies who hire entry level developers start them out small, on a reasonably obvious bug that needs fixing or a simple function to write. Ideally, the new hire is mentored and closely supervised to ensure they have a good experience, though there are companies that just drop the new hire into the shark tank and wait to see if they swim or die.', 'result': {'fake': 0.0008, 'real': 0.9992}, 'status': 'success'}], 'credits_used': 3, 'credits': 1983484, 'subscription': 0, 'content': 'All companies expect entry-level developers to already know how to code in the company’s favorite programming language. It’s been 40–50 years since companies took in accountants and clerks and tried to teach them to program, in the US at least.\nAll companies look for entry-level developers who have some relevant work experience, or extra coding experience. That’s why it’s so hard to find a first job if you don’t have this experience.\nSmaller companies make no attempt to train junior developers. This is why you see entry level jobs advertised that call for two years of experience.\nSome larger companies offer internships to help develop talent. It also gives them a look at the talent, and an advantage in hiring the interns that do the best.\nSome large companies (Google and Facebook are two) and some smaller companies have “onboarding” programs where new hires tour several departments and do sample coding tasks relevant to each department.\nOther companies who hire entry level developers start them out small, on a reasonably obvious bug that needs fixing or a simple function to write. Ideally, the new hire is mentored and closely supervised to ensure they have a good experience, though there are companies that just drop the new hire into the shark tank and wait to see if they swim or die.', 'aiModelVersion': '1'}",0.9992
Stephen Sibbald,Updated 2y,What is the most dramatic speedup you've had in a piece of code from a simple change?,"Brace yourself for some serious geekery!

At the height of the Cold War, scientists monitored nuclear detonations globally using delicate seismometers. (I've seen an array of sensors in the high Arctic.) Consequently, there was a surge in data collection and a growing demand for digital signal processing.

And then the enormous 1964 Alaska earthquake
 presented an ever bigger data set that geologists wanted to analyze. (Remember, they were just starting to think about plate tectonics at this time.)

One of the biggest data-crunching tasks, whether you're looking at an earthquake or an H-bomb, is conducting a spectral analysis of the the seismometer data, a process called Fourier transformation.

A standard digital Fourier analysis is a mind-numbing set of matrix operations on an exceedingly large two-dimensional matrix of data. This involves reading two data points, performing a simple arithmetic operation, and re-writing them.

The computers in 1964 had very little memory and it was slow. Disks and tapes were even slower. So all this reading and writing was ponderous, and each Fourier transformation took hours.

Then along come two brilliant computer scientists, who re-discover an alternate algorithm that was invented in 1805 by Gauss (yes, that Gauss!!), and implement the Cooley–Tukey FFT algorithm - Wikipedia
.

Grossly simplified, rather than multiplying all N points by N different sequences of numbers (N^2 operations), Cooley and Tukey noted that those N different sequences can factored, reducing the number of operations to Nlog2(N). (Thanks to Jim Lux for the correction.)

The result was that raw data crunching of the Alaska quake data — on the same computer — was done in seconds! The performance gain was three orders of magnitude.

This is the kind of success that has kept algorithm specialists drooling for decades, though I am not aware of another quantum leap as amazing as this one.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/qymeaugxj93rf1si', 'title': ""What is the most dramatic speedup you've had in a piece of code from a simple change?"", 'score': {'original': 0.9998, 'ai': 0.0002}, 'blocks': [{'text': ""Brace yourself for some serious geekery!\n\nAt the height of the Cold War, scientists monitored nuclear detonations globally using delicate seismometers. (I've seen an array of sensors in the high Arctic.) Consequently, there was a surge in data collection and a growing demand for digital signal processing.\n\nAnd then the enormous 1964 Alaska earthquake\n presented an ever bigger data set that geologists wanted to analyze. (Remember, they were just starting to think about plate tectonics at this time.)\n\nOne of the biggest data-crunching tasks, whether you're looking at an earthquake or an H-bomb, is conducting a spectral analysis of the the seismometer data, a process called Fourier transformation.\n\nA standard digital Fourier analysis is a mind-numbing set of matrix operations on an exceedingly large two-dimensional matrix of data. This involves reading two data points, performing a simple arithmetic operation, and re-writing them.\n\nThe computers in 1964 had very little memory and it was slow. Disks and tapes were even slower. So all this reading and writing was ponderous, and each Fourier transformation took hours.\n\nThen along come two brilliant computer scientists, who re-discover an alternate algorithm that was invented in 1805 by Gauss (yes, that Gauss!!), and implement the Cooley–Tukey FFT algorithm - Wikipedia\n.\n\nGrossly simplified, rather than multiplying all N points by N different sequences of numbers (N^2 operations), Cooley and Tukey noted that those N different sequences can factored, reducing the number of operations to Nlog2(N). (Thanks to Jim Lux for the correction.)\n\nThe result was that raw data crunching of the Alaska quake data — on the same computer — was done in seconds! The performance gain was three orders of magnitude.\n\nThis is the kind of success that has kept algorithm specialists drooling for decades, though I am not aware of another quantum leap as amazing as this one."", 'result': {'fake': 0.0002, 'real': 0.9998}, 'status': 'success'}], 'credits_used': 3, 'credits': 1983481, 'subscription': 0, 'content': ""Brace yourself for some serious geekery!\n\nAt the height of the Cold War, scientists monitored nuclear detonations globally using delicate seismometers. (I've seen an array of sensors in the high Arctic.) Consequently, there was a surge in data collection and a growing demand for digital signal processing.\n\nAnd then the enormous 1964 Alaska earthquake\n presented an ever bigger data set that geologists wanted to analyze. (Remember, they were just starting to think about plate tectonics at this time.)\n\nOne of the biggest data-crunching tasks, whether you're looking at an earthquake or an H-bomb, is conducting a spectral analysis of the the seismometer data, a process called Fourier transformation.\n\nA standard digital Fourier analysis is a mind-numbing set of matrix operations on an exceedingly large two-dimensional matrix of data. This involves reading two data points, performing a simple arithmetic operation, and re-writing them.\n\nThe computers in 1964 had very little memory and it was slow. Disks and tapes were even slower. So all this reading and writing was ponderous, and each Fourier transformation took hours.\n\nThen along come two brilliant computer scientists, who re-discover an alternate algorithm that was invented in 1805 by Gauss (yes, that Gauss!!), and implement the Cooley–Tukey FFT algorithm - Wikipedia\n.\n\nGrossly simplified, rather than multiplying all N points by N different sequences of numbers (N^2 operations), Cooley and Tukey noted that those N different sequences can factored, reducing the number of operations to Nlog2(N). (Thanks to Jim Lux for the correction.)\n\nThe result was that raw data crunching of the Alaska quake data — on the same computer — was done in seconds! The performance gain was three orders of magnitude.\n\nThis is the kind of success that has kept algorithm specialists drooling for decades, though I am not aware of another quantum leap as amazing as this one."", 'aiModelVersion': '1'}",0.9998
Franklin Veaux,1y,Is it against a copyright to make a website name 'stuckoverflow'?,"Against copyright? No. You cannot copyright a word.

Against trademark? Yes.

Trademark and copyright are not the same. Trademark is a subset of patent law (and in the US, is administered by the Patent and Trademark Office, not the Copyright Office). In particular:

Trademark has no expiration. As long as a trademark is still being used, it can be registered forever.
Trademark has no parody exemption. There is a parody exemption built into copyright law; it does not apply to trademarks.

Put simply, and handwaving over legal details, anything that can create a reasonable association in a reasonable person’s mind can be a violation of trademark.

“Stack Exchange” and “StackOverflow” are both trademarked
. If you attempt to make a site called StuckOverflow, expect a cease and desist from a lawyer right quick.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/nxtigqh72wsy98jb', 'title': ""Is it against a copyright to make a website name 'stuckoverflow'?"", 'score': {'original': 0.9991, 'ai': 0.0009}, 'blocks': [{'text': 'Against copyright? No. You cannot copyright a word.\n\nAgainst trademark? Yes.\n\nTrademark and copyright are not the same. Trademark is a subset of patent law (and in the US, is administered by the Patent and Trademark Office, not the Copyright Office). In particular:\n\nTrademark has no expiration. As long as a trademark is still being used, it can be registered forever.\nTrademark has no parody exemption. There is a parody exemption built into copyright law; it does not apply to trademarks.\n\nPut simply, and handwaving over legal details, anything that can create a reasonable association in a reasonable person’s mind can be a violation of trademark.\n\n“Stack Exchange” and “StackOverflow” are both trademarked\n. If you attempt to make a site called StuckOverflow, expect a cease and desist from a lawyer right quick.', 'result': {'fake': 0.0009, 'real': 0.9991}, 'status': 'success'}], 'credits_used': 2, 'credits': 1983479, 'subscription': 0, 'content': 'Against copyright? No. You cannot copyright a word.\n\nAgainst trademark? Yes.\n\nTrademark and copyright are not the same. Trademark is a subset of patent law (and in the US, is administered by the Patent and Trademark Office, not the Copyright Office). In particular:\n\nTrademark has no expiration. As long as a trademark is still being used, it can be registered forever.\nTrademark has no parody exemption. There is a parody exemption built into copyright law; it does not apply to trademarks.\n\nPut simply, and handwaving over legal details, anything that can create a reasonable association in a reasonable person’s mind can be a violation of trademark.\n\n“Stack Exchange” and “StackOverflow” are both trademarked\n. If you attempt to make a site called StuckOverflow, expect a cease and desist from a lawyer right quick.', 'aiModelVersion': '1'}",0.9991
Phillip Remaker,Updated 1y,Why is PPP used over Ethernet (PPPoE)?,"PPPoE is a dirty hack created by DSL based Internet Service Providers to solve an organizational problem.

Let’s rewind a bit, shall we?

When the Internet started becoming popular in the US, the phone companies hated the idea. They wanted to see minutes of phone calls, or expensive dedicated point to point circuits. An unmetered, multiplexed data transport system was far outside the models they knew how to make money from.

Renegade startups built banks of modems for people to access the Internet. Phone companies were bypassed, except for the “free unmetered local call” to the modem, and the phone subscriber fees at both ends. Still, these unnaturally long phone calls broke all of their assumptions. They were pretty pissed off. They tried to get special rates for modem calls, but the regulators were having none of that.

Then came Telecommunications Act of 1996
, which let phone companies open unregulated divisions to provide Internet access. Oh boy! Now they are in the game.

But, how do you make money? You have to have people dial up to your modem bank and log in with a password. So the ISP sides of the telcos built up giant login infrastructures based on RADIUS (Remote Authentication Dial-In User Service) with attendant provisioning and billing machinery. Users would dial in using the PPP protocol and authenticate over that, securing Internet access.

Summary: Phone companies had a regulated side that provided circuits and connections, and unregulated side that provided dialup modems for Internet access.

Telephone lines have a fundamental speed limit. The fastest they can EVER go is 64 kbps, but often can’t connect at more than 30–40 kbps. As the internet exploded, so did the demand for bandwidth.

Fortunately, the phone company had a solution, based on a nascent technology that had never taken off: Digital Subscriber Line (DSL).

DSL was envisioned as a premium spoke-and-hub connector where endpoints might concentrate on specific sites, using ATM as a transport, provisioned by phone company techs, in a point-to-point fashion. The sudden, overwhelming demand for high speed links to central concentration points would not scale. Either a lot of expensive techs would need to be hired, or a VERY expensive provisioning system would need to be developed.

Even worse: DSL was on the REGULATED side; Internet access was on the UNREGULATED side. Directly provisioning Internet access over DSL would run afoul of the laws and regulations.

And now, the EVIL HACK.

Redback Networks had the insight that there needed to be something akin to a “modem bank” for DSL users, so they could extend the model they already had for dialup.

They invented the Subscriber Management System, a chunk of hardware that would terminate hundreds of ATM virtual circuits, just like a modem bank would connect phone circuits. The problem was that these circuits, like phone calls, had no authorization or verification of who was on the other side.

But wait! The unregulated side already HAD a provisioning system for dial up users, and could authenticate PPP connections from anywhere. If only there were a way to make a PPP connection…. over Ethernet!

And that’s how we got here. PPPoE became a lightweight Layer 2 Protocol to carry PPP packets in Ethernet frames, primarily to fix the structural limitations of provisioning and billing users crossing regulated and unregulated domains while taking advantage of existing investment in the obsolete modem bank model.

Early DSL users ran a PPPoE client on their PC connected to a DSL line to get Internet access. Later, home router vendors like Linksys and Netgear built a PPPoE client into their Router/NAT boxes and let Ethernet users share the connection.

Even more unholy than PPPoE is also PPPoEoE (PPP over Ethernet over Ethernet), to tunnel PPPoE sessions beyond their local Layer 2 domain.

It’s turtles all the way down.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/al8zwd9bokjy547u', 'title': 'Why is PPP used over Ethernet (PPPoE)?', 'score': {'original': 0.97585, 'ai': 0.02415}, 'blocks': [{'text': 'PPPoE is a dirty hack created by DSL based Internet Service Providers to solve an organizational problem.\n\nLet’s rewind a bit, shall we?\n\nWhen the Internet started becoming popular in the US, the phone companies hated the idea. They wanted to see minutes of phone calls, or expensive dedicated point to point circuits. An unmetered, multiplexed data transport system was far outside the models they knew how to make money from.\n\nRenegade startups built banks of modems for people to access the Internet. Phone companies were bypassed, except for the “free unmetered local call” to the modem, and the phone subscriber fees at both ends. Still, these unnaturally long phone calls broke all of their assumptions. They were pretty pissed off. They tried to get special rates for modem calls, but the regulators were having none of that.\n\nThen came Telecommunications Act of 1996\n, which let phone companies open unregulated divisions to provide Internet access. Oh boy! Now they are in the game.\n\nBut, how do you make money? You have to have people dial up to your modem bank and log in with a password. So the ISP sides of the telcos built up giant login infrastructures based on RADIUS (Remote Authentication Dial-In User Service) with attendant provisioning and billing machinery. Users would dial in using the PPP protocol and authenticate over that, securing Internet access.\n\nSummary: Phone companies had a regulated side that provided circuits and connections, and unregulated side that provided dialup modems for Internet access.\n\nTelephone lines have a fundamental speed limit. The fastest they can EVER go is 64 kbps, but often can’t connect at more than 30–40 kbps. As the internet exploded, so did the demand for bandwidth.\n\nFortunately, the phone company had a solution, based on a nascent technology that had never taken off: Digital Subscriber Line (DSL).\n\nDSL was envisioned as a premium spoke-and-hub connector where endpoints might concentrate on specific sites, using ATM as a transport, provisioned by phone company techs, in a point-to-point fashion. The sudden, overwhelming demand for high speed links to central concentration points would not scale. Either a lot of expensive techs would need to be hired, or a VERY expensive provisioning system would need to be developed.\n\nEven worse: DSL was on the REGULATED side; Internet access was on the UNREGULATED side. Directly provisioning Internet access over DSL would run afoul of the laws and regulations.\n\nAnd now, the EVIL HACK.\n\nRedback Networks had the insight that there needed to be something akin to a “modem bank” for DSL users, so they could extend the model they already had for dialup.\n\nThey invented the Subscriber Management System, a chunk of hardware that would terminate hundreds of ATM virtual circuits, just like a modem bank would connect phone circuits. The problem was that these circuits, like phone calls, had no authorization or verification of who was on the other side.\n\nBut wait! The unregulated side already HAD a provisioning system for dial up users, and could authenticate PPP connections from anywhere. If only there were a way to make a PPP connection…. over Ethernet!\n\nAnd that’s how we got here. PPPoE became a lightweight', 'result': {'fake': 0.0204, 'real': 0.9796}, 'status': 'success'}, {'text': 'Layer 2 Protocol to carry PPP packets in Ethernet frames, primarily to fix the structural limitations of provisioning and billing users crossing regulated and unregulated domains while taking advantage of existing investment in the obsolete modem bank model.\n\nEarly DSL users ran a PPPoE client on their PC connected to a DSL line to get Internet access. Later, home router vendors like Linksys and Netgear built a PPPoE client into their Router/NAT boxes and let Ethernet users share the connection.\n\nEven more unholy than PPPoE is also PPPoEoE (PPP over Ethernet over Ethernet), to tunnel PPPoE sessions beyond their local Layer 2 domain.\n\nIt’s turtles all the way down.', 'result': {'fake': 0.0108, 'real': 0.9892}, 'status': 'success'}], 'credits_used': 7, 'credits': 1983472, 'subscription': 0, 'content': 'PPPoE is a dirty hack created by DSL based Internet Service Providers to solve an organizational problem.\n\nLet’s rewind a bit, shall we?\n\nWhen the Internet started becoming popular in the US, the phone companies hated the idea. They wanted to see minutes of phone calls, or expensive dedicated point to point circuits. An unmetered, multiplexed data transport system was far outside the models they knew how to make money from.\n\nRenegade startups built banks of modems for people to access the Internet. Phone companies were bypassed, except for the “free unmetered local call” to the modem, and the phone subscriber fees at both ends. Still, these unnaturally long phone calls broke all of their assumptions. They were pretty pissed off. They tried to get special rates for modem calls, but the regulators were having none of that.\n\nThen came Telecommunications Act of 1996\n, which let phone companies open unregulated divisions to provide Internet access. Oh boy! Now they are in the game.\n\nBut, how do you make money? You have to have people dial up to your modem bank and log in with a password. So the ISP sides of the telcos built up giant login infrastructures based on RADIUS (Remote Authentication Dial-In User Service) with attendant provisioning and billing machinery. Users would dial in using the PPP protocol and authenticate over that, securing Internet access.\n\nSummary: Phone companies had a regulated side that provided circuits and connections, and unregulated side that provided dialup modems for Internet access.\n\nTelephone lines have a fundamental speed limit. The fastest they can EVER go is 64 kbps, but often can’t connect at more than 30–40 kbps. As the internet exploded, so did the demand for bandwidth.\n\nFortunately, the phone company had a solution, based on a nascent technology that had never taken off: Digital Subscriber Line (DSL).\n\nDSL was envisioned as a premium spoke-and-hub connector where endpoints might concentrate on specific sites, using ATM as a transport, provisioned by phone company techs, in a point-to-point fashion. The sudden, overwhelming demand for high speed links to central concentration points would not scale. Either a lot of expensive techs would need to be hired, or a VERY expensive provisioning system would need to be developed.\n\nEven worse: DSL was on the REGULATED side; Internet access was on the UNREGULATED side. Directly provisioning Internet access over DSL would run afoul of the laws and regulations.\n\nAnd now, the EVIL HACK.\n\nRedback Networks had the insight that there needed to be something akin to a “modem bank” for DSL users, so they could extend the model they already had for dialup.\n\nThey invented the Subscriber Management System, a chunk of hardware that would terminate hundreds of ATM virtual circuits, just like a modem bank would connect phone circuits. The problem was that these circuits, like phone calls, had no authorization or verification of who was on the other side.\n\nBut wait! The unregulated side already HAD a provisioning system for dial up users, and could authenticate PPP connections from anywhere. If only there were a way to make a PPP connection…. over Ethernet!\n\nAnd that’s how we got here. PPPoE became a lightweight Layer 2 Protocol to carry PPP packets in Ethernet frames, primarily to fix the structural limitations of provisioning and billing users crossing regulated and unregulated domains while taking advantage of existing investment in the obsolete modem bank model.\n\nEarly DSL users ran a PPPoE client on their PC connected to a DSL line to get Internet access. Later, home router vendors like Linksys and Netgear built a PPPoE client into their Router/NAT boxes and let Ethernet users share the connection.\n\nEven more unholy than PPPoE is also PPPoEoE (PPP over Ethernet over Ethernet), to tunnel PPPoE sessions beyond their local Layer 2 domain.\n\nIt’s turtles all the way down.', 'aiModelVersion': '1'}",0.97585
Brian Zoebisch,Updated 5y,"Is it true that software developers should never teach everything to junior developers because once those junior developers learn all their skills, senior developers will be kicked out?","No, actually,

You might be kicked out for writing clean, functional, easy-to-read code with all of the documentation that explains what you have figured out. Then you move on.

The thing is, the hard part isn’t writing the code. I mean, yes, there will be challenges and hey that’s what drives most of (us) to keep going. We just like working with code…but the real challenge is figuring out what the hell is going on. Seriously. Most of the time, even managers and people who have been working on a problem might not know just about anything going on. They look to you, the senior, to distill all of this.

Point-in-case. One role I had, I came in and the junior developer had supposedly mapped out what I needed to do. My job was simply to write out the algorithms/functions/framework/etc from this “complete” map. Thing is, the map was completely wrong. I mean there was probably like 20% salvageable information there. I couldn’t trust anything in that document. The poor kid was just copy-pasting things like Ruby “reject” enumerables because he has seen that pattern in code elsewhere. He didn’t understand what it was doing, didn’t understand what a “block” was, and on-and-on. I deleted everything he wrote.

So for the next few months, I had to do a deep dive and find out what was really going on. In the end, I would say almost all of his “documentation” was actually a time sink and worthless. It didn’t help me at all. It confused the problem, but at the same time, his manager was secure in the (false) knowledge that he had clearly guided this junior engineer to be “productive” by making this document. So they were happy in their delusion. I don’t blame the junior at all. He was an excellent worker, but just way in over his head. The bad part was this underlying assumption about work that had been done but actually was not.

After I bit the bullet and worked through all of the completely absurd frameworks from some really exhausting (lack of) documentation, I condensed it all into very easy-to-use code and then documented as much of the process that I could.

However, I donated a lot of my personal time to clearly explain to that junior developer the why behind what he needed to do. He would just google, copy and paste just about everything. He was bright, but unfortunately under so much pressure that he couldn’t keep up and actually learn. So I took it upon myself to teach him and give him my undivided attention whenever I could.

Why? Because that is what we (software developers) do. Well, most of us. There is elitism and “my code is better than your code” attitudes floating around, but for the most part, over the course of my career I have experienced that most senior developers are more-than-willing to set aside some time for helping those who are learning. And, we are all learning so there is that too….

Why?!? That is because, in the end, this is the wisest path. For instance, if I teach you how to properly lay out a RESTful framework, I won’t have to come back later and wonder “what the hell was he/she they doing here”?!?

At the end of the day, regardless of whether they had to remove, update or keep my code, I know that it was, for the most part, easy to follow and that the junior developer could easily pick it up.

Yes, this can and will happen, but not because you taught the junior developer.

In companies that have tight budgets and cannot see the “value” of keeping someone who is being paid properly for their abilities…this does absolutely happen. But that doesn’t mean that anyone should conform to this low standard. I would never replace my honor and character for “job security”. Period. I will continue to teach those that need help, and accept help from those that can help me.

Software is not a “one-man-show” these days, but heavily relies on integrated team players, working towards a bigger goal.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/yt1gef6n3qb2z90h', 'title': 'Is it true that software developers should never teach everything to junior developers because once those junior developers learn all their skills, senior developers will be kicked out?', 'score': {'original': 0.9405, 'ai': 0.0595}, 'blocks': [{'text': 'No, actually,\n\nYou might be kicked out for writing clean, functional, easy-to-read code with all of the documentation that explains what you have figured out. Then you move on.\n\nThe thing is, the hard part isn’t writing the code. I mean, yes, there will be challenges and hey that’s what drives most of (us) to keep going. We just like working with code…but the real challenge is figuring out what the hell is going on. Seriously. Most of the time, even managers and people who have been working on a problem might not know just about anything going on. They look to you, the senior, to distill all of this.\n\nPoint-in-case. One role I had, I came in and the junior developer had supposedly mapped out what I needed to do. My job was simply to write out the algorithms/functions/framework/etc from this “complete” map. Thing is, the map was completely wrong. I mean there was probably like 20% salvageable information there. I couldn’t trust anything in that document. The poor kid was just copy-pasting things like Ruby “reject” enumerables because he has seen that pattern in code elsewhere. He didn’t understand what it was doing, didn’t understand what a “block” was, and on-and-on. I deleted everything he wrote.\n\nSo for the next few months, I had to do a deep dive and find out what was really going on. In the end, I would say almost all of his “documentation” was actually a time sink and worthless. It didn’t help me at all. It confused the problem, but at the same time, his manager was secure in the (false) knowledge that he had clearly guided this junior engineer to be “productive” by making this document. So they were happy in their delusion. I don’t blame the junior at all. He was an excellent worker, but just way in over his head. The bad part was this underlying assumption about work that had been done but actually was not.\n\nAfter I bit the bullet and worked through all of the completely absurd frameworks from some really exhausting (lack of) documentation, I condensed it all into very easy-to-use code and then documented as much of the process that I could.\n\nHowever, I donated a lot of my personal time to clearly explain to that junior developer the why behind what he needed to do. He would just google, copy and paste just about everything. He was bright, but unfortunately under so much pressure that he couldn’t keep up and actually learn. So I took it upon myself to teach him and give him my undivided attention whenever I could.\n\nWhy? Because that is what we (software developers) do. Well, most of us. There is elitism and “my code is better than your code” attitudes floating around, but for the most part, over the course of my career I have experienced that most senior developers are more-than-willing to set aside some time for helping those who are learning. And, we are all learning so there is that too….\n\nWhy?!? That is because, in the end, this is the wisest path. For instance, if', 'result': {'fake': 0.0233, 'real': 0.9767}, 'status': 'success'}, {'text': 'I teach you how to properly lay out a RESTful framework, I won’t have to come back later and wonder “what the hell was he/she they doing here”?!?\n\nAt the end of the day, regardless of whether they had to remove, update or keep my code, I know that it was, for the most part, easy to follow and that the junior developer could easily pick it up.\n\nYes, this can and will happen, but not because you taught the junior developer.\n\nIn companies that have tight budgets and cannot see the “value” of keeping someone who is being paid properly for their abilities…this does absolutely happen. But that doesn’t mean that anyone should conform to this low standard. I would never replace my honor and character for “job security”. Period. I will continue to teach those that need help, and accept help from those that can help me.\n\nSoftware is not a “one-man-show” these days, but heavily relies on integrated team players, working towards a bigger goal.', 'result': {'fake': 0.0166, 'real': 0.9834}, 'status': 'success'}], 'credits_used': 8, 'credits': 1983464, 'subscription': 0, 'content': 'No, actually,\n\nYou might be kicked out for writing clean, functional, easy-to-read code with all of the documentation that explains what you have figured out. Then you move on.\n\nThe thing is, the hard part isn’t writing the code. I mean, yes, there will be challenges and hey that’s what drives most of (us) to keep going. We just like working with code…but the real challenge is figuring out what the hell is going on. Seriously. Most of the time, even managers and people who have been working on a problem might not know just about anything going on. They look to you, the senior, to distill all of this.\n\nPoint-in-case. One role I had, I came in and the junior developer had supposedly mapped out what I needed to do. My job was simply to write out the algorithms/functions/framework/etc from this “complete” map. Thing is, the map was completely wrong. I mean there was probably like 20% salvageable information there. I couldn’t trust anything in that document. The poor kid was just copy-pasting things like Ruby “reject” enumerables because he has seen that pattern in code elsewhere. He didn’t understand what it was doing, didn’t understand what a “block” was, and on-and-on. I deleted everything he wrote.\n\nSo for the next few months, I had to do a deep dive and find out what was really going on. In the end, I would say almost all of his “documentation” was actually a time sink and worthless. It didn’t help me at all. It confused the problem, but at the same time, his manager was secure in the (false) knowledge that he had clearly guided this junior engineer to be “productive” by making this document. So they were happy in their delusion. I don’t blame the junior at all. He was an excellent worker, but just way in over his head. The bad part was this underlying assumption about work that had been done but actually was not.\n\nAfter I bit the bullet and worked through all of the completely absurd frameworks from some really exhausting (lack of) documentation, I condensed it all into very easy-to-use code and then documented as much of the process that I could.\n\nHowever, I donated a lot of my personal time to clearly explain to that junior developer the why behind what he needed to do. He would just google, copy and paste just about everything. He was bright, but unfortunately under so much pressure that he couldn’t keep up and actually learn. So I took it upon myself to teach him and give him my undivided attention whenever I could.\n\nWhy? Because that is what we (software developers) do. Well, most of us. There is elitism and “my code is better than your code” attitudes floating around, but for the most part, over the course of my career I have experienced that most senior developers are more-than-willing to set aside some time for helping those who are learning. And, we are all learning so there is that too….\n\nWhy?!? That is because, in the end, this is the wisest path. For instance, if I teach you how to properly lay out a RESTful framework, I won’t have to come back later and wonder “what the hell was he/she they doing here”?!?\n\nAt the end of the day, regardless of whether they had to remove, update or keep my code, I know that it was, for the most part, easy to follow and that the junior developer could easily pick it up.\n\nYes, this can and will happen, but not because you taught the junior developer.\n\nIn companies that have tight budgets and cannot see the “value” of keeping someone who is being paid properly for their abilities…this does absolutely happen. But that doesn’t mean that anyone should conform to this low standard. I would never replace my honor and character for “job security”. Period. I will continue to teach those that need help, and accept help from those that can help me.\n\nSoftware is not a “one-man-show” these days, but heavily relies on integrated team players, working towards a bigger goal.', 'aiModelVersion': '1'}",0.9405
Par Botes,Updated 2y,What is the most dramatic speedup you've had in a piece of code from a simple change?,"Edit: someone accused me of plagiarism based on that person having a recollection of seeing a similar answer before. These are my experiences and no one elses. I added another picture at the end of the thread with my conference badge to JavaOne in 97, it has my name and my employer (sun) on it. For those who remembers those days, I started out in pal1 (garrison lab) then mpk02, which moved to Newark after that was built. My last time was in mtv16 (sunlabs). I'm a bit unsure if it was mtv16 or a different number, but it was the MTV building closest to the bay. Keith Leong was my co-worker all the way from the start, he still works in the benchmark center (these days he is a boss) all these years later but now under Oracle.

Early days of Solaris threads. A company had built a highly concurrent, threaded text search engine (late 90s pre Google era). Used at library of Congress and similar places.Targeted the new 64 CPU sun E10k server. Pic of an E10k from Wikipedia.

Code ran busy but ran like a dog. Mostly user level, a couple of waits on system calls according to trace. Suspected memory lock contention after talking to the developer about what the code actually does.

decided to try to see if the threads serialized on a global lock used to make malloc() and free() thread safe. Added a new library that did per thread memory management and was compatible with libc malloc(). Worked out great, code started humming on those processors. Basic issue was lock contention and too many malloc,() / free() calls where happening concurrently blocking on a global lock.

Then I removed a bunch of thread scheduling logic and let the kernel scheduler manage thread scheduling. The app logic used up more time managing scheduling vs just brute forcing it and oversubscribing those CPUs with threads and relying on the kernel to timeshare the CPUs. The kernel scheduler was far more optimized than the homebuilt scheduler (and did cool things like gang scheduling for cache affinity). The app developer had made it easy to remove the scheduling logic. Yhey had a preprocessor directive that let me recompile the source and use a -D flag to disable this scheduling logic. If it wasn’t for that it would have taken much longer to get the kernel scheduler to manage thread concurrency. Given how easy it was (thanks to the developer) i figured it was worth trying, to me it looked like they spent too much time in that part of the code when i looked at traces and system stats. But i would probably have tried it anyway, it was low risk and potentially a good reward -so worth a test run.

All in about10,000X speedup. Mostly from removing the serialization of the memory lock and then getting threads to just run as much as possible. It was lovely. Probably an hour of work or so. Suns benchmark center in menlo park where I worked. Great memories!

Some more old memories. The processor in the E10k. About the size of an large man's palm of the hand. Torqued down on the system board, 4 CPUs per system board and 16 system boards per chassis.

for those not familiar with the system architecture of that computer. It's a 64 processor cache coherent, uniform memory (ie not numa) machine. Systems architecture:

My JavaOne badge from 97. Second year of JavaOne. Early days…","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/yi7x8psb3mwhe5z4', 'title': ""What is the most dramatic speedup you've had in a piece of code from a simple change?"", 'score': {'original': 0.9211, 'ai': 0.0789}, 'blocks': [{'text': ""Edit: someone accused me of plagiarism based on that person having a recollection of seeing a similar answer before. These are my experiences and no one elses. I added another picture at the end of the thread with my conference badge to JavaOne in 97, it has my name and my employer (sun) on it. For those who remembers those days, I started out in pal1 (garrison lab) then mpk02, which moved to Newark after that was built. My last time was in mtv16 (sunlabs). I'm a bit unsure if it was mtv16 or a different number, but it was the MTV building closest to the bay. Keith Leong was my co-worker all the way from the start, he still works in the benchmark center (these days he is a boss) all these years later but now under Oracle.\n\nEarly days of Solaris threads. A company had built a highly concurrent, threaded text search engine (late 90s pre Google era). Used at library of Congress and similar places.Targeted the new 64 CPU sun E10k server. Pic of an E10k from Wikipedia.\n\nCode ran busy but ran like a dog. Mostly user level, a couple of waits on system calls according to trace. Suspected memory lock contention after talking to the developer about what the code actually does.\n\ndecided to try to see if the threads serialized on a global lock used to make malloc() and free() thread safe. Added a new library that did per thread memory management and was compatible with libc malloc(). Worked out great, code started humming on those processors. Basic issue was lock contention and too many malloc,() / free() calls where happening concurrently blocking on a global lock.\n\nThen I removed a bunch of thread scheduling logic and let the kernel scheduler manage thread scheduling. The app logic used up more time managing scheduling vs just brute forcing it and oversubscribing those CPUs with threads and relying on the kernel to timeshare the CPUs. The kernel scheduler was far more optimized than the homebuilt scheduler (and did cool things like gang scheduling for cache affinity). The app developer had made it easy to remove the scheduling logic. Yhey had a preprocessor directive that let me recompile the source and use a -D flag to disable this scheduling logic. If it wasn’t for that it would have taken much longer to get the kernel scheduler to manage thread concurrency. Given how easy it was (thanks to the developer) i figured it was worth trying, to me it looked like they spent too much time in that part of the code when i looked at traces and system stats. But i would probably have tried it anyway, it was low risk and potentially a good reward -so worth a test run.\n\nAll in about10,000X speedup. Mostly from removing the serialization of the memory lock and then getting threads to just run as much as possible. It was lovely. Probably an hour of work or so. Suns benchmark center in menlo park where I worked. Great memories!\n\nSome more old memories. The processor in the E10k."", 'result': {'fake': 0.0003, 'real': 0.9997}, 'status': 'success'}, {'text': ""About the size of an large man's palm of the hand. Torqued down on the system board, 4 CPUs per system board and 16 system boards per chassis.\n\nfor those not familiar with the system architecture of that computer. It's a 64 processor cache coherent, uniform memory (ie not numa) machine. Systems architecture:\n\nMy JavaOne badge from 97. Second year of JavaOne. Early days…"", 'result': {'fake': 0.159, 'real': 0.841}, 'status': 'success'}], 'credits_used': 6, 'credits': 1983458, 'subscription': 0, 'content': ""Edit: someone accused me of plagiarism based on that person having a recollection of seeing a similar answer before. These are my experiences and no one elses. I added another picture at the end of the thread with my conference badge to JavaOne in 97, it has my name and my employer (sun) on it. For those who remembers those days, I started out in pal1 (garrison lab) then mpk02, which moved to Newark after that was built. My last time was in mtv16 (sunlabs). I'm a bit unsure if it was mtv16 or a different number, but it was the MTV building closest to the bay. Keith Leong was my co-worker all the way from the start, he still works in the benchmark center (these days he is a boss) all these years later but now under Oracle.\n\nEarly days of Solaris threads. A company had built a highly concurrent, threaded text search engine (late 90s pre Google era). Used at library of Congress and similar places.Targeted the new 64 CPU sun E10k server. Pic of an E10k from Wikipedia.\n\nCode ran busy but ran like a dog. Mostly user level, a couple of waits on system calls according to trace. Suspected memory lock contention after talking to the developer about what the code actually does.\n\ndecided to try to see if the threads serialized on a global lock used to make malloc() and free() thread safe. Added a new library that did per thread memory management and was compatible with libc malloc(). Worked out great, code started humming on those processors. Basic issue was lock contention and too many malloc,() / free() calls where happening concurrently blocking on a global lock.\n\nThen I removed a bunch of thread scheduling logic and let the kernel scheduler manage thread scheduling. The app logic used up more time managing scheduling vs just brute forcing it and oversubscribing those CPUs with threads and relying on the kernel to timeshare the CPUs. The kernel scheduler was far more optimized than the homebuilt scheduler (and did cool things like gang scheduling for cache affinity). The app developer had made it easy to remove the scheduling logic. Yhey had a preprocessor directive that let me recompile the source and use a -D flag to disable this scheduling logic. If it wasn’t for that it would have taken much longer to get the kernel scheduler to manage thread concurrency. Given how easy it was (thanks to the developer) i figured it was worth trying, to me it looked like they spent too much time in that part of the code when i looked at traces and system stats. But i would probably have tried it anyway, it was low risk and potentially a good reward -so worth a test run.\n\nAll in about10,000X speedup. Mostly from removing the serialization of the memory lock and then getting threads to just run as much as possible. It was lovely. Probably an hour of work or so. Suns benchmark center in menlo park where I worked. Great memories!\n\nSome more old memories. The processor in the E10k. About the size of an large man's palm of the hand. Torqued down on the system board, 4 CPUs per system board and 16 system boards per chassis.\n\nfor those not familiar with the system architecture of that computer. It's a 64 processor cache coherent, uniform memory (ie not numa) machine. Systems architecture:\n\nMy JavaOne badge from 97. Second year of JavaOne. Early days…"", 'aiModelVersion': '1'}",0.9211
Michael Claar,5y,What are ways to not get burnt out as a software/web developer?,"I worked with a front-end guy who seemed to play most of the day but still get his work done. While the rest of us felt like we were struggling to keep our heads above water, he would throw comments about some package he had been researching the last half hour. It wasn’t that he he was a 10x guy. I had to help him on getting through some data structures once in awhile. He also just made pages at random for the marketing team to check out. He was relaxed through his work flow and out of the year and a half I worked with him, I only saw him stressed about work once or twice.

It didn’t take me long to realize we just went from crisis project to crisis project and there was never going to be a down time where we could get refreshed and do crazy things like catch up on technical debt. There was always going to be a goal, and a push. I decided to let go of the stress of it in small stages. I’m not sure this is a roadmap for other people as much as what made sense for me, but the first thing I did was start taking some time at the start of the day to get my goals organized for the day. Somehow that speed me up. I added in checking through the error logs and fixing some habitual offenders. Usually they were 30 minute fixes, but it really helped me learn more of the code base and make progress that wasn’t part of the goal. It felt good to make a difference on things I thought were important too. Pretty soon I had let go of the stress of the getting the goal done as quickly as possible and settled into patterns that didn’t stress me out. It’s funny because as a few new people came in, I figured out I looked a lot like the front-end guy did to the new hires. I still got the projects done and looked like I was fast at it as anyone else there.

So do what you can and don’t stress the rest so much. I would suggest only working for companies who pretty much stick to 40–45 hour work weeks. I switched this year to a job where I work remote most of the time. It has it’s own ups and downs, but I’m over all really enjoying it.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/pnzlm4iqgstky21a', 'title': 'What are ways to not get burnt out as a software/web developer?', 'score': {'original': 0.9999, 'ai': 0.0001}, 'blocks': [{'text': 'I worked with a front-end guy who seemed to play most of the day but still get his work done. While the rest of us felt like we were struggling to keep our heads above water, he would throw comments about some package he had been researching the last half hour. It wasn’t that he he was a 10x guy. I had to help him on getting through some data structures once in awhile. He also just made pages at random for the marketing team to check out. He was relaxed through his work flow and out of the year and a half I worked with him, I only saw him stressed about work once or twice.\n\nIt didn’t take me long to realize we just went from crisis project to crisis project and there was never going to be a down time where we could get refreshed and do crazy things like catch up on technical debt. There was always going to be a goal, and a push. I decided to let go of the stress of it in small stages. I’m not sure this is a roadmap for other people as much as what made sense for me, but the first thing I did was start taking some time at the start of the day to get my goals organized for the day. Somehow that speed me up. I added in checking through the error logs and fixing some habitual offenders. Usually they were 30 minute fixes, but it really helped me learn more of the code base and make progress that wasn’t part of the goal. It felt good to make a difference on things I thought were important too. Pretty soon I had let go of the stress of the getting the goal done as quickly as possible and settled into patterns that didn’t stress me out. It’s funny because as a few new people came in, I figured out I looked a lot like the front-end guy did to the new hires. I still got the projects done and looked like I was fast at it as anyone else there.\n\nSo do what you can and don’t stress the rest so much. I would suggest only working for companies who pretty much stick to 40–45 hour work weeks. I switched this year to a job where I work remote most of the time. It has it’s own ups and downs, but I’m over all really enjoying it.', 'result': {'fake': 0.0001, 'real': 0.9999}, 'status': 'success'}], 'credits_used': 5, 'credits': 1983453, 'subscription': 0, 'content': 'I worked with a front-end guy who seemed to play most of the day but still get his work done. While the rest of us felt like we were struggling to keep our heads above water, he would throw comments about some package he had been researching the last half hour. It wasn’t that he he was a 10x guy. I had to help him on getting through some data structures once in awhile. He also just made pages at random for the marketing team to check out. He was relaxed through his work flow and out of the year and a half I worked with him, I only saw him stressed about work once or twice.\n\nIt didn’t take me long to realize we just went from crisis project to crisis project and there was never going to be a down time where we could get refreshed and do crazy things like catch up on technical debt. There was always going to be a goal, and a push. I decided to let go of the stress of it in small stages. I’m not sure this is a roadmap for other people as much as what made sense for me, but the first thing I did was start taking some time at the start of the day to get my goals organized for the day. Somehow that speed me up. I added in checking through the error logs and fixing some habitual offenders. Usually they were 30 minute fixes, but it really helped me learn more of the code base and make progress that wasn’t part of the goal. It felt good to make a difference on things I thought were important too. Pretty soon I had let go of the stress of the getting the goal done as quickly as possible and settled into patterns that didn’t stress me out. It’s funny because as a few new people came in, I figured out I looked a lot like the front-end guy did to the new hires. I still got the projects done and looked like I was fast at it as anyone else there.\n\nSo do what you can and don’t stress the rest so much. I would suggest only working for companies who pretty much stick to 40–45 hour work weeks. I switched this year to a job where I work remote most of the time. It has it’s own ups and downs, but I’m over all really enjoying it.', 'aiModelVersion': '1'}",0.9999
Sharda Agarwal,8mo,"Which is better Learnbay, Simplilearn, Coursera, or UpGrad for learning Full-Stack software Development Course?","Are you ready to embark on an exciting journey into the world of Full-Stack software development?

You shouldn’t research any further, because Learnbay, Simplilearn, Coursera, and UpGrad are here to provide you with the best learning experience you could ever dream of. With their comprehensive courses and cutting-edge curriculum, these platforms are leading the way in shaping the future of software development education.

So, which is the best institute for learning full-stack software development courses?

Let's start with this institute, a platform that prides itself on its hands-on approach to teaching Full-Stack software development.

Course Name: Software Development Masters Program

Their courses are designed to give you practical experience from day one, allowing you to build real-world applications and gain valuable skills that will set you apart in the competitive job market.
Whether you're a beginner or an experienced developer looking to upskill, this institute has something for everyone.
Next up is Simplilearn, a platform that offers a wide range of Full-Stack software development courses tailored to your specific needs.
What sets Simplilearn apart is its focus on industry-relevant skills and certifications.
By enrolling in their courses, you not only gain the knowledge and expertise required for Full-Stack development but also earn valuable credentials that can boost your career prospects.
Now let's talk about Coursera, a platform known for its extensive catalog of online courses from top universities and institutions around the world.
With Coursera, you have the opportunity to learn Full-Stack software development from renowned professors and industry experts.
The platform offers a mix of self-paced and instructor-led courses, allowing you to learn at your own pace while still receiving guidance and support from knowledgeable instructors.
Last but certainly not least is UpGrad, a platform that prides itself on its comprehensive Full-Stack software development program.
With UpGrad, you'll not only learn the technical skills required for Full-Stack development but also gain valuable insights into the industry and its best practices.
Their program is designed to equip you with the necessary tools to succeed in today's fast-paced software development landscape.
By choosing UpGrad, you can join a community of passionate developers.

Note:

These platforms offer top-notch Full-Stack software development courses, but how do you know if it ticks off the complete checklist for whatever you need in a course?

Yes, the Learnbay institute does it for you!

This platform surpasses all its competitors, including Simplilearn, Coursera, and UpGrad, in terms of career planning services, domain specialization, and real-time project expertise.

Let’s take a look at it in detail:

Course Name: Software Development Master Program

Course Features:

Elite domain specialization

The 100 hours of premium content in the Elite Domains: Full Stack Software (S/W) Development Programme cover a range of topics.

Some of the domains that you will get to work on include:

Mern
Product Management

2. Real-world Projects:

In order to better prepare students for the real world, real-world projects are offered to them.
On 12 different projects, the students will work with subject-matter experts.

Some of the listed projects that fall under this program are:

Design Google Drive
Design tinder
Design a Facebook news feed
Design Airbnb

3. Career Services Pro

One of the key benefits of premium career services is the personalized approach they take with each student with unlimited interview calls.
By providing 3 years of placement assistance and tailored advice, they ensure that each student receives the support they need to reach their full potential.
Whether it's resume building, interview preparation, or networking strategies, career services are designed to cater to the specific needs of each student.

4. Global recognition with IBM and Microsoft certification

By completing Software Development Master Program and earning IBM and Microsoft certifications, you open up a world of opportunities and benefits that can propel your professional growth.
Employers value this certification as a way to validate your expertise and knowledge in a specific area.

CONCLUSION

So, why settle for anything less when you can join these platforms and receive top-notch career planning services, domain specialization, and real-time project expertise?

Don't miss out on this incredible opportunity to kickstart your career as a Full-Stack Software Developer.

Thank you!","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/lh31qo6me5p9b0xs', 'title': 'Which is better Learnbay, Simplilearn, Coursera, or UpGrad for learning Full-Stack software Development Course?', 'score': {'original': 0, 'ai': 1}, 'blocks': [{'text': ""Are you ready to embark on an exciting journey into the world of Full-Stack software development?\n\nYou shouldn’t research any further, because Learnbay, Simplilearn, Coursera, and UpGrad are here to provide you with the best learning experience you could ever dream of. With their comprehensive courses and cutting-edge curriculum, these platforms are leading the way in shaping the future of software development education.\n\nSo, which is the best institute for learning full-stack software development courses?\n\nLet's start with this institute, a platform that prides itself on its hands-on approach to teaching Full-Stack software development.\n\nCourse Name: Software Development Masters Program\n\nTheir courses are designed to give you practical experience from day one, allowing you to build real-world applications and gain valuable skills that will set you apart in the competitive job market.\nWhether you're a beginner or an experienced developer looking to upskill, this institute has something for everyone.\nNext up is Simplilearn, a platform that offers a wide range of Full-Stack software development courses tailored to your specific needs.\nWhat sets Simplilearn apart is its focus on industry-relevant skills and certifications.\nBy enrolling in their courses, you not only gain the knowledge and expertise required for Full-Stack development but also earn valuable credentials that can boost your career prospects.\nNow let's talk about Coursera, a platform known for its extensive catalog of online courses from top universities and institutions around the world.\nWith Coursera, you have the opportunity to learn Full-Stack software development from renowned professors and industry experts.\nThe platform offers a mix of self-paced and instructor-led courses, allowing you to learn at your own pace while still receiving guidance and support from knowledgeable instructors.\nLast but certainly not least is UpGrad, a platform that prides itself on its comprehensive Full-Stack software development program.\nWith UpGrad, you'll not only learn the technical skills required for Full-Stack development but also gain valuable insights into the industry and its best practices.\nTheir program is designed to equip you with the necessary tools to succeed in today's fast-paced software development landscape.\nBy choosing UpGrad, you can join a community of passionate developers.\n\nNote:\n\nThese platforms offer top-notch Full-Stack software development courses, but how do you know if it ticks off the complete checklist for whatever you need in a course?\n\nYes, the Learnbay institute does it for you!\n\nThis platform surpasses all its competitors, including Simplilearn, Coursera, and UpGrad, in terms of career planning services, domain specialization, and real-time project expertise.\n\nLet’s take a look at it in detail:\n\nCourse Name: Software Development Master Program\n\nCourse Features:\n\nElite domain specialization\n\nThe 100 hours of premium content in the Elite Domains: Full Stack Software (S/W) Development Programme cover a range of topics.\n\nSome of the domains that you will get to work on include:\n\nMern\nProduct Management\n\n2. Real-world Projects:\n\nIn order to better prepare students for the real world, real-world projects are offered to them.\nOn 12 different projects, the students will work with subject-matter experts.\n\nSome of the listed projects that fall under this program are:\n\nDesign Google Drive\nDesign tinder\nDesign a Facebook news feed\nDesign Airbnb\n\n3. Career Services Pro\n\nOne of the key benefits of premium career services is the personalized approach they take with each student with unlimited interview calls.\nBy providing 3 years of placement assistance"", 'result': {'fake': 1, 'real': 0}, 'status': 'success'}, {'text': ""and tailored advice, they ensure that each student receives the support they need to reach their full potential.\nWhether it's resume building, interview preparation, or networking strategies, career services are designed to cater to the specific needs of each student.\n\n4. Global recognition with IBM and Microsoft certification\n\nBy completing Software Development Master Program and earning IBM and Microsoft certifications, you open up a world of opportunities and benefits that can propel your professional growth.\nEmployers value this certification as a way to validate your expertise and knowledge in a specific area.\n\nCONCLUSION\n\nSo, why settle for anything less when you can join these platforms and receive top-notch career planning services, domain specialization, and real-time project expertise?\n\nDon't miss out on this incredible opportunity to kickstart your career as a Full-Stack Software Developer.\n\nThank you!"", 'result': {'fake': 1, 'real': 0}, 'status': 'success'}], 'credits_used': 7, 'credits': 1983446, 'subscription': 0, 'content': ""Are you ready to embark on an exciting journey into the world of Full-Stack software development?\n\nYou shouldn’t research any further, because Learnbay, Simplilearn, Coursera, and UpGrad are here to provide you with the best learning experience you could ever dream of. With their comprehensive courses and cutting-edge curriculum, these platforms are leading the way in shaping the future of software development education.\n\nSo, which is the best institute for learning full-stack software development courses?\n\nLet's start with this institute, a platform that prides itself on its hands-on approach to teaching Full-Stack software development.\n\nCourse Name: Software Development Masters Program\n\nTheir courses are designed to give you practical experience from day one, allowing you to build real-world applications and gain valuable skills that will set you apart in the competitive job market.\nWhether you're a beginner or an experienced developer looking to upskill, this institute has something for everyone.\nNext up is Simplilearn, a platform that offers a wide range of Full-Stack software development courses tailored to your specific needs.\nWhat sets Simplilearn apart is its focus on industry-relevant skills and certifications.\nBy enrolling in their courses, you not only gain the knowledge and expertise required for Full-Stack development but also earn valuable credentials that can boost your career prospects.\nNow let's talk about Coursera, a platform known for its extensive catalog of online courses from top universities and institutions around the world.\nWith Coursera, you have the opportunity to learn Full-Stack software development from renowned professors and industry experts.\nThe platform offers a mix of self-paced and instructor-led courses, allowing you to learn at your own pace while still receiving guidance and support from knowledgeable instructors.\nLast but certainly not least is UpGrad, a platform that prides itself on its comprehensive Full-Stack software development program.\nWith UpGrad, you'll not only learn the technical skills required for Full-Stack development but also gain valuable insights into the industry and its best practices.\nTheir program is designed to equip you with the necessary tools to succeed in today's fast-paced software development landscape.\nBy choosing UpGrad, you can join a community of passionate developers.\n\nNote:\n\nThese platforms offer top-notch Full-Stack software development courses, but how do you know if it ticks off the complete checklist for whatever you need in a course?\n\nYes, the Learnbay institute does it for you!\n\nThis platform surpasses all its competitors, including Simplilearn, Coursera, and UpGrad, in terms of career planning services, domain specialization, and real-time project expertise.\n\nLet’s take a look at it in detail:\n\nCourse Name: Software Development Master Program\n\nCourse Features:\n\nElite domain specialization\n\nThe 100 hours of premium content in the Elite Domains: Full Stack Software (S/W) Development Programme cover a range of topics.\n\nSome of the domains that you will get to work on include:\n\nMern\nProduct Management\n\n2. Real-world Projects:\n\nIn order to better prepare students for the real world, real-world projects are offered to them.\nOn 12 different projects, the students will work with subject-matter experts.\n\nSome of the listed projects that fall under this program are:\n\nDesign Google Drive\nDesign tinder\nDesign a Facebook news feed\nDesign Airbnb\n\n3. Career Services Pro\n\nOne of the key benefits of premium career services is the personalized approach they take with each student with unlimited interview calls.\nBy providing 3 years of placement assistance and tailored advice, they ensure that each student receives the support they need to reach their full potential.\nWhether it's resume building, interview preparation, or networking strategies, career services are designed to cater to the specific needs of each student.\n\n4. Global recognition with IBM and Microsoft certification\n\nBy completing Software Development Master Program and earning IBM and Microsoft certifications, you open up a world of opportunities and benefits that can propel your professional growth.\nEmployers value this certification as a way to validate your expertise and knowledge in a specific area.\n\nCONCLUSION\n\nSo, why settle for anything less when you can join these platforms and receive top-notch career planning services, domain specialization, and real-time project expertise?\n\nDon't miss out on this incredible opportunity to kickstart your career as a Full-Stack Software Developer.\n\nThank you!"", 'aiModelVersion': '1'}",0.0
Joshua Gross,1y,"If technology had been advanced enough in the 1950s for the World Wide Web to exist, would every page be in black and white?","This is an impossible question to answer, because if we had the technology for the World Wide Web, why wouldn’t we have the technology for color displays? However, having first used computers in the 1980s, the first monitors I used were black with amber or green.

The oldest displays I have seen were on oscilloscopes and were very similar. At the dawn of computing, displays barely existed; results were printed on paper.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/kao8nbprc43jw0tm', 'title': 'If technology had been advanced enough in the 1950s for the World Wide Web to exist, would every page be in black and white?', 'score': {'original': 0.962, 'ai': 0.038}, 'blocks': [{'text': 'This is an impossible question to answer, because if we had the technology for the World Wide Web, why wouldn’t we have the technology for color displays? However, having first used computers in the 1980s, the first monitors I used were black with amber or green.\n\nThe oldest displays I have seen were on oscilloscopes and were very similar. At the dawn of computing, displays barely existed; results were printed on paper.', 'result': {'fake': 0.038, 'real': 0.962}, 'status': 'success'}], 'credits_used': 1, 'credits': 1983445, 'subscription': 0, 'content': 'This is an impossible question to answer, because if we had the technology for the World Wide Web, why wouldn’t we have the technology for color displays? However, having first used computers in the 1980s, the first monitors I used were black with amber or green.\n\nThe oldest displays I have seen were on oscilloscopes and were very similar. At the dawn of computing, displays barely existed; results were printed on paper.', 'aiModelVersion': '1'}",0.962
Håkon Hapnes Strand,1y,What keeps back-end developers from calling themselves full stack developers? Don't most of them know some front-end techniques?,"I learned the basics of HTML and developed my first websites with Java applets and JavaScript 1.0 back in the mid-90s.

When I started pursuing software development as a career much later, I touched on jQuery and Backbone briefly, before learning Angular and TypeScript. In my previous job, we used Vue, and now I’m using React.

I’ve been around the block, but I still wouldn’t call myself a full stack developer, for a few reasons:

I have great respect for the developers who are really good on the frontend. They often work in the intersection of development and UI/UX design. With that skillset, they can really make a website pop. I can hack away to make the frontend do what I want, but a frontend specialist can do it faster and better.
I generally don’t like frontend work. Problems on the backend are often difficult to solve conceptually and easy to implement in code. On the frontend, the opposite is true. I’d much rather work on an interesting backend system that involves complicated logic and/or machine learning rather than making a UI look pretty. I don’t want to advertise that I could do something when I really don’t want to.
By calling myself “full stack”, I could ironically be underselling myself. When people hear full stack, they usually think of a standard web application with a CRUD backend, an SQL database and an SPA frontend. But I have worked on projects that involved so much more. I have worked on distributed systems with crazy requirements for scalability, reliability and performance. I have designed IoT platforms from scratch, MLOps platforms and AI engines.

All in all, I'd rather just call myself a software engineer and try to highlight the things I'm good at and that I enjoy.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/qdilh2y0gb7f5vru', 'title': ""What keeps back-end developers from calling themselves full stack developers? Don't most of them know some front-end techniques?"", 'score': {'original': 0.9789, 'ai': 0.0211}, 'blocks': [{'text': ""I learned the basics of HTML and developed my first websites with Java applets and JavaScript 1.0 back in the mid-90s.\n\nWhen I started pursuing software development as a career much later, I touched on jQuery and Backbone briefly, before learning Angular and TypeScript. In my previous job, we used Vue, and now I’m using React.\n\nI’ve been around the block, but I still wouldn’t call myself a full stack developer, for a few reasons:\n\nI have great respect for the developers who are really good on the frontend. They often work in the intersection of development and UI/UX design. With that skillset, they can really make a website pop. I can hack away to make the frontend do what I want, but a frontend specialist can do it faster and better.\nI generally don’t like frontend work. Problems on the backend are often difficult to solve conceptually and easy to implement in code. On the frontend, the opposite is true. I’d much rather work on an interesting backend system that involves complicated logic and/or machine learning rather than making a UI look pretty. I don’t want to advertise that I could do something when I really don’t want to.\nBy calling myself “full stack”, I could ironically be underselling myself. When people hear full stack, they usually think of a standard web application with a CRUD backend, an SQL database and an SPA frontend. But I have worked on projects that involved so much more. I have worked on distributed systems with crazy requirements for scalability, reliability and performance. I have designed IoT platforms from scratch, MLOps platforms and AI engines.\n\nAll in all, I'd rather just call myself a software engineer and try to highlight the things I'm good at and that I enjoy."", 'result': {'fake': 0.0211, 'real': 0.9789}, 'status': 'success'}], 'credits_used': 4, 'credits': 1983441, 'subscription': 0, 'content': ""I learned the basics of HTML and developed my first websites with Java applets and JavaScript 1.0 back in the mid-90s.\n\nWhen I started pursuing software development as a career much later, I touched on jQuery and Backbone briefly, before learning Angular and TypeScript. In my previous job, we used Vue, and now I’m using React.\n\nI’ve been around the block, but I still wouldn’t call myself a full stack developer, for a few reasons:\n\nI have great respect for the developers who are really good on the frontend. They often work in the intersection of development and UI/UX design. With that skillset, they can really make a website pop. I can hack away to make the frontend do what I want, but a frontend specialist can do it faster and better.\nI generally don’t like frontend work. Problems on the backend are often difficult to solve conceptually and easy to implement in code. On the frontend, the opposite is true. I’d much rather work on an interesting backend system that involves complicated logic and/or machine learning rather than making a UI look pretty. I don’t want to advertise that I could do something when I really don’t want to.\nBy calling myself “full stack”, I could ironically be underselling myself. When people hear full stack, they usually think of a standard web application with a CRUD backend, an SQL database and an SPA frontend. But I have worked on projects that involved so much more. I have worked on distributed systems with crazy requirements for scalability, reliability and performance. I have designed IoT platforms from scratch, MLOps platforms and AI engines.\n\nAll in all, I'd rather just call myself a software engineer and try to highlight the things I'm good at and that I enjoy."", 'aiModelVersion': '1'}",0.9789
Richard Nazar,2y,Who's to blame for bad code?,"I used to work for Mitel Corporation. Very nice place to work.

They had something that was far better than finding who to blame.

Process control.

They focused on how they did things, the processes and steps involved. From HR to manufacturing and engineering.

The question was not who screwed up. Instead, it was:

What went wrong? What do we change so it never, ever happens again?

This was an attitude that most of the company had. This allowed employees to speak up and say what was really wrong and what could fix it forever.

I found a problem where two parts had the same label on the same product. Capacitors were labelled C1, C2, C3, etc. so that everyone knew exactly what part was being talked about. For example, there could only be one C3.

Unfortunately, somehow we ended up with two different capacitors labelled C3. This resulted in the wrong value of capacitor being installed for C3 on many electronic boards.

I investigated and found two capacitors labelled as C3 on the schematic, etc. I got the Product Engineer to fix the schematic and documentation.

My report required me to state what happened to cause the problem and what was being done to prevent it from ever happening again.

At first, the Product Engineer would not tell me what happened. Finally, I said to him, “No names. Just tell me where the process screwed up and what changes we are making to the process, so it does not happen again.”

Then he opened up. He said that two departments had the authority to decide capacitor labels. As a result, each department independently labelled different capacitors C3 on the same product.

Now, only the other department would decide on the labels. His department would no longer assign such labels to board components.

The problem was permanently fixed with no blame assigned.

If software is bad, there is likely a process problem. It could be with the software review, the experience level of the coders, a problem with the software architecture, etc.

Look at Boeing. They changed their software processes completely to save money, and it almost cost them the company. Their experienced software engineers warned management beforehand.

Changing the process instead of assigning blame will do a lot more good.

Yes, sometimes a person with a awful attitude will just ignore good processes. In those cases, discipline or fire the individual and adjust the hiring process to eliminate it from happening again (I realize hiring processes cannot be made perfect, but you can get very close.)

>>Who's to blame for bad code?","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/vs8j3ktxw7op52lc', 'title': ""Who's to blame for bad code?"", 'score': {'original': 0.9991, 'ai': 0.0009}, 'blocks': [{'text': ""I used to work for Mitel Corporation. Very nice place to work.\n\nThey had something that was far better than finding who to blame.\n\nProcess control.\n\nThey focused on how they did things, the processes and steps involved. From HR to manufacturing and engineering.\n\nThe question was not who screwed up. Instead, it was:\n\nWhat went wrong? What do we change so it never, ever happens again?\n\nThis was an attitude that most of the company had. This allowed employees to speak up and say what was really wrong and what could fix it forever.\n\nI found a problem where two parts had the same label on the same product. Capacitors were labelled C1, C2, C3, etc. so that everyone knew exactly what part was being talked about. For example, there could only be one C3.\n\nUnfortunately, somehow we ended up with two different capacitors labelled C3. This resulted in the wrong value of capacitor being installed for C3 on many electronic boards.\n\nI investigated and found two capacitors labelled as C3 on the schematic, etc. I got the Product Engineer to fix the schematic and documentation.\n\nMy report required me to state what happened to cause the problem and what was being done to prevent it from ever happening again.\n\nAt first, the Product Engineer would not tell me what happened. Finally, I said to him, “No names. Just tell me where the process screwed up and what changes we are making to the process, so it does not happen again.”\n\nThen he opened up. He said that two departments had the authority to decide capacitor labels. As a result, each department independently labelled different capacitors C3 on the same product.\n\nNow, only the other department would decide on the labels. His department would no longer assign such labels to board components.\n\nThe problem was permanently fixed with no blame assigned.\n\nIf software is bad, there is likely a process problem. It could be with the software review, the experience level of the coders, a problem with the software architecture, etc.\n\nLook at Boeing. They changed their software processes completely to save money, and it almost cost them the company. Their experienced software engineers warned management beforehand.\n\nChanging the process instead of assigning blame will do a lot more good.\n\nYes, sometimes a person with a awful attitude will just ignore good processes. In those cases, discipline or fire the individual and adjust the hiring process to eliminate it from happening again (I realize hiring processes cannot be made perfect, but you can get very close.)\n\n>>Who's to blame for bad code?"", 'result': {'fake': 0.0004, 'real': 0.9996}, 'status': 'success'}], 'credits_used': 5, 'credits': 1983436, 'subscription': 0, 'content': ""I used to work for Mitel Corporation. Very nice place to work.\n\nThey had something that was far better than finding who to blame.\n\nProcess control.\n\nThey focused on how they did things, the processes and steps involved. From HR to manufacturing and engineering.\n\nThe question was not who screwed up. Instead, it was:\n\nWhat went wrong? What do we change so it never, ever happens again?\n\nThis was an attitude that most of the company had. This allowed employees to speak up and say what was really wrong and what could fix it forever.\n\nI found a problem where two parts had the same label on the same product. Capacitors were labelled C1, C2, C3, etc. so that everyone knew exactly what part was being talked about. For example, there could only be one C3.\n\nUnfortunately, somehow we ended up with two different capacitors labelled C3. This resulted in the wrong value of capacitor being installed for C3 on many electronic boards.\n\nI investigated and found two capacitors labelled as C3 on the schematic, etc. I got the Product Engineer to fix the schematic and documentation.\n\nMy report required me to state what happened to cause the problem and what was being done to prevent it from ever happening again.\n\nAt first, the Product Engineer would not tell me what happened. Finally, I said to him, “No names. Just tell me where the process screwed up and what changes we are making to the process, so it does not happen again.”\n\nThen he opened up. He said that two departments had the authority to decide capacitor labels. As a result, each department independently labelled different capacitors C3 on the same product.\n\nNow, only the other department would decide on the labels. His department would no longer assign such labels to board components.\n\nThe problem was permanently fixed with no blame assigned.\n\nIf software is bad, there is likely a process problem. It could be with the software review, the experience level of the coders, a problem with the software architecture, etc.\n\nLook at Boeing. They changed their software processes completely to save money, and it almost cost them the company. Their experienced software engineers warned management beforehand.\n\nChanging the process instead of assigning blame will do a lot more good.\n\nYes, sometimes a person with a awful attitude will just ignore good processes. In those cases, discipline or fire the individual and adjust the hiring process to eliminate it from happening again (I realize hiring processes cannot be made perfect, but you can get very close.)\n\n>>Who's to blame for bad code?"", 'aiModelVersion': '1'}",0.9991
Omar Baltuth,8y,"What is the worst name for a variable? ""smallIllustration""?","The worst variable name I've ever seen was a typo that became a major bug. It was in a FORTRAN program. (I know, everyone calls it ""Fortran"" now, but in the old days, you were supposed to capitalize it and COBOL, which is an acronym, but not Pascal, which is named after a person.) The programmer had created a variable called ""O"", the upper case version of the 15th letter of the alphabet. Now, he hadn't explicitly declared it, but it was instantiated by assigning it to another variable, as in, ""FOO = O"". What he had intended to do was to set FOO to the constant literal zero, but had struck the 'O' key instead.

At first, no one noticed this bug. When we ran the code on our own mainframe computer, it worked fine because our compiler would automatically set stack variables to zero. The other variable was supposed to be explicitly set to zero, so setting it to O had the desired effect. The trouble came when the code was run on the customer's computers, and this was a very security-conscious government agency. (No, not that one, the other one that many people don't know exists.) They reported to us that they were getting weird results, and that different results were being gotten from multiple runs of the program using the same data. Uh-oh.

A full-scale effort was launched to find the bug. We didn't have debuggers that were easy to use, so we were instrumenting the code. We knew the bug was in a certain module, then a certain subroutine. People were freaking out, examining core dumps. We couldn't find anything wrong because our zero-core paradigm masked the problem.

Finally, we got the government's data monkeys to send us one of their core dumps. The variable FOO showed some weird value that made no sense. It was being set to zero right at the top, for crissake!

My boss was one of the people trying to fix this bug. A day or so later, he came into my office and excitedly asked me, as he pointed his finger at the compiler listing printed on a dot matrix printer on 16-inch-wide paper with alternating pale green and white stripes, ""Is that a zero or an 'O'?""

This was a common mistake in those days. The characters were almost identical when printed on the crude printers of the time, circa 1978. I squinted at it and concluded that it looked more like an 'O' to me after comparing the character to other 'O' characters and numerals '0' on the same printout. The clincher was when I inspected the variable list at the bottom of the page and found 'O' listed between variables starting with the letters 'N' and 'P'. Duh. The government's compiler did not set stack variable to zero as ours did. A random value was being assigned to FOO and havoc ensued. The bug was quickly fixed and transmitted to the feds.

This type of thing used to happen a lot. As FORTRAN compilers were not case sensitive, everything was masked to upper case. We used to edit our code with the caps lock key on so we wouldn't make weird mistakes. On our terminals (...for time-sharing! PCs didn't exist yet!), the zeroes had slashes through them, but were otherwise the same as an upper case 'O'. We could type upper and lower case, everything got changed to upper case at some point. On printer listings, there were no slashes, but the zero was more of an ellipse than the more squarish 'O'. It was hard to tell the difference.

Everyone had learned to type with a manual typewriter, most of which had no '1' key. It was standard procedure to use 'l', a lower case 'L' for the numeral '1' (one) when typing. People did it all the time, so when a variable called 'L' showed up in the variable list or the code itself, it was usually caught quickly. The 'O' thing was harder to spot.

It's stuff like this that attracted people to strongly-typed languages and case-sensitive compilers. The compiler would spit up and chastise you with something like this. ""Undeclared variables l, L, O, o.""","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/sxp5ae3jomi728q4', 'title': 'What is the worst name for a variable? ""smallIllustration""?', 'score': {'original': 0.94535, 'ai': 0.05465}, 'blocks': [{'text': 'The worst variable name I\'ve ever seen was a typo that became a major bug. It was in a FORTRAN program. (I know, everyone calls it ""Fortran"" now, but in the old days, you were supposed to capitalize it and COBOL, which is an acronym, but not Pascal, which is named after a person.) The programmer had created a variable called ""O"", the upper case version of the 15th letter of the alphabet. Now, he hadn\'t explicitly declared it, but it was instantiated by assigning it to another variable, as in, ""FOO = O"". What he had intended to do was to set FOO to the constant literal zero, but had struck the \'O\' key instead.\n\nAt first, no one noticed this bug. When we ran the code on our own mainframe computer, it worked fine because our compiler would automatically set stack variables to zero. The other variable was supposed to be explicitly set to zero, so setting it to O had the desired effect. The trouble came when the code was run on the customer\'s computers, and this was a very security-conscious government agency. (No, not that one, the other one that many people don\'t know exists.) They reported to us that they were getting weird results, and that different results were being gotten from multiple runs of the program using the same data. Uh-oh.\n\nA full-scale effort was launched to find the bug. We didn\'t have debuggers that were easy to use, so we were instrumenting the code. We knew the bug was in a certain module, then a certain subroutine. People were freaking out, examining core dumps. We couldn\'t find anything wrong because our zero-core paradigm masked the problem.\n\nFinally, we got the government\'s data monkeys to send us one of their core dumps. The variable FOO showed some weird value that made no sense. It was being set to zero right at the top, for crissake!\n\nMy boss was one of the people trying to fix this bug. A day or so later, he came into my office and excitedly asked me, as he pointed his finger at the compiler listing printed on a dot matrix printer on 16-inch-wide paper with alternating pale green and white stripes, ""Is that a zero or an \'O\'?""\n\nThis was a common mistake in those days. The characters were almost identical when printed on the crude printers of the time, circa 1978. I squinted at it and concluded that it looked more like an \'O\' to me after comparing the character to other \'O\' characters and numerals \'0\' on the same printout. The clincher was when I inspected the variable list at the bottom of the page and found \'O\' listed between variables starting with the letters \'N\' and \'P\'. Duh. The government\'s compiler did not set stack variable to zero as ours did. A random value was being assigned to FOO and havoc ensued. The bug was quickly fixed and transmitted to the feds.\n\nThis type of thing used to happen a lot. As FORTRAN compilers were not case sensitive, everything was masked to upper case.', 'result': {'fake': 0.019, 'real': 0.981}, 'status': 'success'}, {'text': 'We used to edit our code with the caps lock key on so we wouldn\'t make weird mistakes. On our terminals (...for time-sharing! PCs didn\'t exist yet!), the zeroes had slashes through them, but were otherwise the same as an upper case \'O\'. We could type upper and lower case, everything got changed to upper case at some point. On printer listings, there were no slashes, but the zero was more of an ellipse than the more squarish \'O\'. It was hard to tell the difference.\n\nEveryone had learned to type with a manual typewriter, most of which had no \'1\' key. It was standard procedure to use \'l\', a lower case \'L\' for the numeral \'1\' (one) when typing. People did it all the time, so when a variable called \'L\' showed up in the variable list or the code itself, it was usually caught quickly. The \'O\' thing was harder to spot.\n\nIt\'s stuff like this that attracted people to strongly-typed languages and case-sensitive compilers. The compiler would spit up and chastise you with something like this. ""Undeclared variables l, L, O, o.""', 'result': {'fake': 0.0007, 'real': 0.9993}, 'status': 'success'}], 'credits_used': 8, 'credits': 1983428, 'subscription': 0, 'content': 'The worst variable name I\'ve ever seen was a typo that became a major bug. It was in a FORTRAN program. (I know, everyone calls it ""Fortran"" now, but in the old days, you were supposed to capitalize it and COBOL, which is an acronym, but not Pascal, which is named after a person.) The programmer had created a variable called ""O"", the upper case version of the 15th letter of the alphabet. Now, he hadn\'t explicitly declared it, but it was instantiated by assigning it to another variable, as in, ""FOO = O"". What he had intended to do was to set FOO to the constant literal zero, but had struck the \'O\' key instead.\n\nAt first, no one noticed this bug. When we ran the code on our own mainframe computer, it worked fine because our compiler would automatically set stack variables to zero. The other variable was supposed to be explicitly set to zero, so setting it to O had the desired effect. The trouble came when the code was run on the customer\'s computers, and this was a very security-conscious government agency. (No, not that one, the other one that many people don\'t know exists.) They reported to us that they were getting weird results, and that different results were being gotten from multiple runs of the program using the same data. Uh-oh.\n\nA full-scale effort was launched to find the bug. We didn\'t have debuggers that were easy to use, so we were instrumenting the code. We knew the bug was in a certain module, then a certain subroutine. People were freaking out, examining core dumps. We couldn\'t find anything wrong because our zero-core paradigm masked the problem.\n\nFinally, we got the government\'s data monkeys to send us one of their core dumps. The variable FOO showed some weird value that made no sense. It was being set to zero right at the top, for crissake!\n\nMy boss was one of the people trying to fix this bug. A day or so later, he came into my office and excitedly asked me, as he pointed his finger at the compiler listing printed on a dot matrix printer on 16-inch-wide paper with alternating pale green and white stripes, ""Is that a zero or an \'O\'?""\n\nThis was a common mistake in those days. The characters were almost identical when printed on the crude printers of the time, circa 1978. I squinted at it and concluded that it looked more like an \'O\' to me after comparing the character to other \'O\' characters and numerals \'0\' on the same printout. The clincher was when I inspected the variable list at the bottom of the page and found \'O\' listed between variables starting with the letters \'N\' and \'P\'. Duh. The government\'s compiler did not set stack variable to zero as ours did. A random value was being assigned to FOO and havoc ensued. The bug was quickly fixed and transmitted to the feds.\n\nThis type of thing used to happen a lot. As FORTRAN compilers were not case sensitive, everything was masked to upper case. We used to edit our code with the caps lock key on so we wouldn\'t make weird mistakes. On our terminals (...for time-sharing! PCs didn\'t exist yet!), the zeroes had slashes through them, but were otherwise the same as an upper case \'O\'. We could type upper and lower case, everything got changed to upper case at some point. On printer listings, there were no slashes, but the zero was more of an ellipse than the more squarish \'O\'. It was hard to tell the difference.\n\nEveryone had learned to type with a manual typewriter, most of which had no \'1\' key. It was standard procedure to use \'l\', a lower case \'L\' for the numeral \'1\' (one) when typing. People did it all the time, so when a variable called \'L\' showed up in the variable list or the code itself, it was usually caught quickly. The \'O\' thing was harder to spot.\n\nIt\'s stuff like this that attracted people to strongly-typed languages and case-sensitive compilers. The compiler would spit up and chastise you with something like this. ""Undeclared variables l, L, O, o.""', 'aiModelVersion': '1'}",0.94535
Ray Gardener,Updated 4y,What's diluted about computer programming today?,"Our ability to care. I don’t know if this is a universal issue, but it's been the case at some of the places I've been.

There's been press about buggy software. Apple's iOS 13 update, for example, got attention for being perhaps the buggiest in its history. It seems odd given Apple's history of quality, attention to detail, and simply that iOS has been under development for many years — the process should have been ironed out long before now.

When I was at Corel in 1995, project builds were not allowed to show compiler errors, not even warnings. Despite a project containing over a million lines of code, the build had to start and stop without a single such message. If any appeared, the relevant person(s) were contacted and the matter promptly resolved. Similar attention was paid to build breaks and runtime errors. Management was technical and quality was taken seriously. Software was still being distributed in boxes, which of course pressured vendors to get things right the first time.

One imagines a lack of skill leads to bugs — and it can, and does — but more and more I'm seeing that it's apathy. And apathy starts small:

Me: These symbols should start with an uppercase letter, as per the coding guidelines.

Dev: I guess. But it's just semantics, doesn't affect anything.

Me: Well, it affects readability.

Dev: It still reads the same. Case makes no difference.

Me: Well, that's not really the point. Why bother having standards if —

Dev: I'm not changing it.

The thing about apathy, though, is that it spreads:

Me: The build always shows a lot of compiler warnings.

Dev: Yeah, but the code runs. But if you care, fix it yourself.

Me: But it's not in my area, it's in yours.

Dev: Whatever. I'll file it under 'todo someday.'

And like a disease, apathy can spread to worrisome heights:

Me: This code is really byzantine.

Dev: Yeah, it's been around for years. It accumulates cruft.

Me: Okay, but it's dangerous. It's slowing down our ability to make changes, and changes will probably introduce bugs.

Dev: It's working for now. I'm not gonna touch it.

I guess it's wonderful that with high bandwidth and cloud services, vendors can ship updates anytime, even knowingly release substandard software since it can be patched over the wire later. But what began as a convenience evolved into a habit.

And this is not without harm — on top of making projects late/buggy/overexpensive, it costs us our attention to detail, our focus on quality, our unspoken contract to exchange working goods for customers' money. It erodes trust, invalidates our professionalism, and ultimately cheapens our spirit.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/cfag1rvmyq9683nl', 'title': ""What's diluted about computer programming today?"", 'score': {'original': 0.9945, 'ai': 0.0055}, 'blocks': [{'text': ""Our ability to care. I don’t know if this is a universal issue, but it's been the case at some of the places I've been.\n\nThere's been press about buggy software. Apple's iOS 13 update, for example, got attention for being perhaps the buggiest in its history. It seems odd given Apple's history of quality, attention to detail, and simply that iOS has been under development for many years — the process should have been ironed out long before now.\n\nWhen I was at Corel in 1995, project builds were not allowed to show compiler errors, not even warnings. Despite a project containing over a million lines of code, the build had to start and stop without a single such message. If any appeared, the relevant person(s) were contacted and the matter promptly resolved. Similar attention was paid to build breaks and runtime errors. Management was technical and quality was taken seriously. Software was still being distributed in boxes, which of course pressured vendors to get things right the first time.\n\nOne imagines a lack of skill leads to bugs — and it can, and does — but more and more I'm seeing that it's apathy. And apathy starts small:\n\nMe: These symbols should start with an uppercase letter, as per the coding guidelines.\n\nDev: I guess. But it's just semantics, doesn't affect anything.\n\nMe: Well, it affects readability.\n\nDev: It still reads the same. Case makes no difference.\n\nMe: Well, that's not really the point. Why bother having standards if —\n\nDev: I'm not changing it.\n\nThe thing about apathy, though, is that it spreads:\n\nMe: The build always shows a lot of compiler warnings.\n\nDev: Yeah, but the code runs. But if you care, fix it yourself.\n\nMe: But it's not in my area, it's in yours.\n\nDev: Whatever. I'll file it under 'todo someday.'\n\nAnd like a disease, apathy can spread to worrisome heights:\n\nMe: This code is really byzantine.\n\nDev: Yeah, it's been around for years. It accumulates cruft.\n\nMe: Okay, but it's dangerous. It's slowing down our ability to make changes, and changes will probably introduce bugs.\n\nDev: It's working for now. I'm not gonna touch it.\n\nI guess it's wonderful that with high bandwidth and cloud services, vendors can ship updates anytime, even knowingly release substandard software since it can be patched over the wire later. But what began as a convenience evolved into a habit.\n\nAnd this is not without harm — on top of making projects late/buggy/overexpensive, it costs us our attention to detail, our focus on quality, our unspoken contract to exchange working goods for customers' money. It erodes trust, invalidates our professionalism, and ultimately cheapens our spirit."", 'result': {'fake': 0.0055, 'real': 0.9945}, 'status': 'success'}], 'credits_used': 5, 'credits': 1983423, 'subscription': 0, 'content': ""Our ability to care. I don’t know if this is a universal issue, but it's been the case at some of the places I've been.\n\nThere's been press about buggy software. Apple's iOS 13 update, for example, got attention for being perhaps the buggiest in its history. It seems odd given Apple's history of quality, attention to detail, and simply that iOS has been under development for many years — the process should have been ironed out long before now.\n\nWhen I was at Corel in 1995, project builds were not allowed to show compiler errors, not even warnings. Despite a project containing over a million lines of code, the build had to start and stop without a single such message. If any appeared, the relevant person(s) were contacted and the matter promptly resolved. Similar attention was paid to build breaks and runtime errors. Management was technical and quality was taken seriously. Software was still being distributed in boxes, which of course pressured vendors to get things right the first time.\n\nOne imagines a lack of skill leads to bugs — and it can, and does — but more and more I'm seeing that it's apathy. And apathy starts small:\n\nMe: These symbols should start with an uppercase letter, as per the coding guidelines.\n\nDev: I guess. But it's just semantics, doesn't affect anything.\n\nMe: Well, it affects readability.\n\nDev: It still reads the same. Case makes no difference.\n\nMe: Well, that's not really the point. Why bother having standards if —\n\nDev: I'm not changing it.\n\nThe thing about apathy, though, is that it spreads:\n\nMe: The build always shows a lot of compiler warnings.\n\nDev: Yeah, but the code runs. But if you care, fix it yourself.\n\nMe: But it's not in my area, it's in yours.\n\nDev: Whatever. I'll file it under 'todo someday.'\n\nAnd like a disease, apathy can spread to worrisome heights:\n\nMe: This code is really byzantine.\n\nDev: Yeah, it's been around for years. It accumulates cruft.\n\nMe: Okay, but it's dangerous. It's slowing down our ability to make changes, and changes will probably introduce bugs.\n\nDev: It's working for now. I'm not gonna touch it.\n\nI guess it's wonderful that with high bandwidth and cloud services, vendors can ship updates anytime, even knowingly release substandard software since it can be patched over the wire later. But what began as a convenience evolved into a habit.\n\nAnd this is not without harm — on top of making projects late/buggy/overexpensive, it costs us our attention to detail, our focus on quality, our unspoken contract to exchange working goods for customers' money. It erodes trust, invalidates our professionalism, and ultimately cheapens our spirit."", 'aiModelVersion': '1'}",0.9945
Alan Mellor,1y,What makes senior programmers laugh when they look at a junior developer's code?,"If you laugh at the person you are supposed to be coaching, leading and safe guarding you are a total bell end and should not be allowed near people. As in removed from that team entirely.

You are the toxic workplace.

You are the employee everyone avoids.

You are the reason people quit.

Juniors do plenty wrong. We know that and our job is to inspire and develop them.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/u7snm1e9yhbdz45t', 'title': ""What makes senior programmers laugh when they look at a junior developer's code?"", 'score': {'original': 0.9959, 'ai': 0.0041}, 'blocks': [{'text': 'If you laugh at the person you are supposed to be coaching, leading and safe guarding you are a total bell end and should not be allowed near people. As in removed from that team entirely.\n\nYou are the toxic workplace.\n\nYou are the employee everyone avoids.\n\nYou are the reason people quit.\n\nJuniors do plenty wrong. We know that and our job is to inspire and develop them.', 'result': {'fake': 0.0041, 'real': 0.9959}, 'status': 'success'}], 'credits_used': 1, 'credits': 1983422, 'subscription': 0, 'content': 'If you laugh at the person you are supposed to be coaching, leading and safe guarding you are a total bell end and should not be allowed near people. As in removed from that team entirely.\n\nYou are the toxic workplace.\n\nYou are the employee everyone avoids.\n\nYou are the reason people quit.\n\nJuniors do plenty wrong. We know that and our job is to inspire and develop them.', 'aiModelVersion': '1'}",0.9959
Akash Deep,1y,How should you start learning programming?,"Programming is one of the most valuable skills you can build. If you’re searching for ""how to learn programming,"" it might be because you want to advance your career.

Maybe you want to learn more about the computer industry or make games or software for your pals. In either case, knowing the computer language can significantly advance both your career and personal development. Now a days there a number of websites and youtube channels such as Logicmojo, GeeksForGeeks, CodewithHarry, takeuforward etc.

Programming is lots of fun and extraordinarily useful. It allows you to be creative and also opens up a wide range of new careers for you. If you want to learn how to program, read the tutorial below for an explanation of where to go and what to study.

Choose a Programming Language

When programming a computer, a set of written instructions is effectively used, which the machine then executes (also known as binary coding). These instructions may be written in a variety of ""languages,"" which are only alternative arrangements of the text and instructions. Choose a language that you believe is pertinent to what you want to do because different languages are frequently used to construct different types of programmes. You can always switch to a different language if you feel that one does not meet your needs.

Think about C, C++, C#, and other similar languages. These languages are mostly employed for the development of stand-alone computer programmes, such as games. For a newbie, learning C and C++ is challenging but not impossible. Learning them will offer you a thorough understanding of both computer operation and programming, as most programming languages borrow one or more ideas from C and C++. Although C#, a language that is quite similar to Java, is beginning to become much more widespread, they are well-known and widely employed.

Consider Python. Python is a very versatile language used widely across several platforms. Despite being extremely powerful, it is an easy language for a beginner to pick up, so give it a try!

Learning the Language

Even though most employers looking to hire programmers will be more interested in your talents than your academic performance or the college you attended, having a college degree to highlight is definitely beneficial. In addition to receiving professional advice from your tutors, you will learn more quickly than if you taught yourself (and maybe your friends). For students pursuing degrees in this area, scholarships and grants are frequently available. Don't let the cost of a degree overwhelm you; it is feasible!

Learn Data Structure and Algorithms

Algorithms and data structures are at the core of programming. The next thing you should do is understand data structures and algorithms after you are confident using any of the languages and writing some simple programmes. If you comprehend the principles of data structures and algorithms, you will become more adept at developing your problem-solving abilities. Recognize that not all data structures can be used in all situations; therefore, for each problem, you must first build an algorithm, which is a step-by-step procedure to solve a particular problem, and then you must select the appropriate data structure to solve the problem. In order to solve problems, the correct data structure and algorithm combination is crucial.

Learn to use the algorithms and data structures, and daily practise using your programming language. Beginners should start by practicing the problems involving data structures and algorithms on Logicmojo websites. The following advice will be helpful as you understand these two principles.

1. Once more, don't attempt to quickly absorb all of the theories or notions relating to data structures and algorithms. Learn about one subject, exercise on the websites we've listed above, and then go on to the next subject. You can modify a certain learning approach until it works for you. One of them was already mentioned in the step before (2:1 ratio).

2. When you get to the complex problems, divide the big ones into smaller ones, then solve those smaller ones to reach the result or solution.

3. Practice frequently and thoroughly. Get your hands filthy with programming and, if you can, take part in competitions on other websites. You will grow more self-assured and adept at addressing problems.

4. Study these data structures' and algorithms' applications in practical projects. For instance: Array and Strings are used frequently in web applications.

5. You understand the principles of data structures and algorithms, so you can now design an application using what you've learned. In order to broaden your project and gain experience in problem-solving, you can also try to build a feature using these techniques in a previous application or project.

Build Projects

As discussed, the majority of inexperienced programmers have trouble establishing projects on their own. You believe that all of the exercises or lessons are a waste of time because they are not relevant to your particular project. You learn a lot through tutorials, but because it just goes over your head, you can't use all the ideas and logic in your project. Relax!

Initially try to build a small project or static website first, it can be your own portfolio, a web application, android application or any kind of game. It’s better to start with some simpler projects and then move on to the complex projects. A lot of beginners don’t understand what they should include in their projects. So here is an example.

If you want to create an online store, start by developing simple functionality. You can begin with the registration or login form before moving on to the navigation bar or other features. Therefore, assess the entire job and divide it into smaller problems or chunks rather than doing everything at once. Which features you need to implement first will depend on how complex your project is. You will first make a lot of mistakes and run into a lot of difficulties, but that is how you will learn to construct and manage big projects. The following advice can help you when creating a project.

1. Learn how to use some useful editors, debuggers, or tools for your project. Learn how to use developer tools (the most important thing to learn for web applications), templates, packages, and libraries wherever they are required.

2. When you encounter a problem or get stuck, attentively examine the error message. Most inexperienced programmers ignore error messages, yet they are actually quite helpful in troubleshooting problems. Google any issues or mistakes you run through while constructing your project. You can usually discover the solution on Stackoverflow, a great forum for developers.

3. Keep your project from becoming too perfect. Procrastination and slow project progress are what you'll get as a result.

4. Remember that there’s no perfect code — so avoid over-engineering things and move forward. First, make it work, then make it right, and finally make it fast.

Resources

There are a lot of good websites to learn programming language and data structures few of them includes:

Logicmojo, Coursera, Programming with Mosh, Scalar, takeuforward.

If you are a book enthusiast then you can use a book for reference. Few goods books to refer are:

Cracking the coding interview, Grokking Algorithm etc.

Conclusion

To be a good programmer, you, at the very least, have to keep up with changing technology. It's a constant learning process, and you should always be learning new languages, new paradigms, and most importantly: programming new things!

Being a successful programmer means learning to think like one. You'll need to look at challenges as learning opportunities, desire to improve your skills and be open to new ways of improving your programming process.

Thanks for reading.

All the best.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/jh5tgmf8na0cskwp', 'title': 'How should you start learning programming?', 'score': {'original': 0.00013333333333333, 'ai': 0.99986666666667}, 'blocks': [{'text': 'Programming is one of the most valuable skills you can build. If you’re searching for ""how to learn programming,"" it might be because you want to advance your career.\n\nMaybe you want to learn more about the computer industry or make games or software for your pals. In either case, knowing the computer language can significantly advance both your career and personal development. Now a days there a number of websites and youtube channels such as Logicmojo, GeeksForGeeks, CodewithHarry, takeuforward etc.\n\nProgramming is lots of fun and extraordinarily useful. It allows you to be creative and also opens up a wide range of new careers for you. If you want to learn how to program, read the tutorial below for an explanation of where to go and what to study.\n\nChoose a Programming Language\n\nWhen programming a computer, a set of written instructions is effectively used, which the machine then executes (also known as binary coding). These instructions may be written in a variety of ""languages,"" which are only alternative arrangements of the text and instructions. Choose a language that you believe is pertinent to what you want to do because different languages are frequently used to construct different types of programmes. You can always switch to a different language if you feel that one does not meet your needs.\n\nThink about C, C++, C#, and other similar languages. These languages are mostly employed for the development of stand-alone computer programmes, such as games. For a newbie, learning C and C++ is challenging but not impossible. Learning them will offer you a thorough understanding of both computer operation and programming, as most programming languages borrow one or more ideas from C and C++. Although C#, a language that is quite similar to Java, is beginning to become much more widespread, they are well-known and widely employed.\n\nConsider Python. Python is a very versatile language used widely across several platforms. Despite being extremely powerful, it is an easy language for a beginner to pick up, so give it a try!\n\nLearning the Language\n\nEven though most employers looking to hire programmers will be more interested in your talents than your academic performance or the college you attended, having a college degree to highlight is definitely beneficial. In addition to receiving professional advice from your tutors, you will learn more quickly than if you taught yourself (and maybe your friends). For students pursuing degrees in this area, scholarships and grants are frequently available. Don\'t let the cost of a degree overwhelm you; it is feasible!\n\nLearn Data Structure and Algorithms\n\nAlgorithms and data structures are at the core of programming. The next thing you should do is understand data structures and algorithms after you are confident using any of the languages and writing some simple programmes. If you comprehend the principles of data structures and algorithms, you will become more adept at developing your problem-solving abilities. Recognize that not all data structures can be used in all situations; therefore, for each problem, you must first build an algorithm, which is a step-by-step procedure to solve a particular problem, and then you must select the', 'result': {'fake': 1, 'real': 0}, 'status': 'success'}, {'text': ""appropriate data structure to solve the problem. In order to solve problems, the correct data structure and algorithm combination is crucial.\n\nLearn to use the algorithms and data structures, and daily practise using your programming language. Beginners should start by practicing the problems involving data structures and algorithms on Logicmojo websites. The following advice will be helpful as you understand these two principles.\n\n1. Once more, don't attempt to quickly absorb all of the theories or notions relating to data structures and algorithms. Learn about one subject, exercise on the websites we've listed above, and then go on to the next subject. You can modify a certain learning approach until it works for you. One of them was already mentioned in the step before (2:1 ratio).\n\n2. When you get to the complex problems, divide the big ones into smaller ones, then solve those smaller ones to reach the result or solution.\n\n3. Practice frequently and thoroughly. Get your hands filthy with programming and, if you can, take part in competitions on other websites. You will grow more self-assured and adept at addressing problems.\n\n4. Study these data structures' and algorithms' applications in practical projects. For instance: Array and Strings are used frequently in web applications.\n\n5. You understand the principles of data structures and algorithms, so you can now design an application using what you've learned. In order to broaden your project and gain experience in problem-solving, you can also try to build a feature using these techniques in a previous application or project.\n\nBuild Projects\n\nAs discussed, the majority of inexperienced programmers have trouble establishing projects on their own. You believe that all of the exercises or lessons are a waste of time because they are not relevant to your particular project. You learn a lot through tutorials, but because it just goes over your head, you can't use all the ideas and logic in your project. Relax!\n\nInitially try to build a small project or static website first, it can be your own portfolio, a web application, android application or any kind of game. It’s better to start with some simpler projects and then move on to the complex projects. A lot of beginners don’t understand what they should include in their projects. So here is an example.\n\nIf you want to create an online store, start by developing simple functionality. You can begin with the registration or login form before moving on to the navigation bar or other features. Therefore, assess the entire job and divide it into smaller problems or chunks rather than doing everything at once. Which features you need to implement first will depend on how complex your project is. You will first make a lot of mistakes and run into a lot of difficulties, but that is how you will learn to construct and manage big projects. The following advice can help you when creating a project.\n\n1. Learn how to use some useful editors, debuggers, or tools for your project. Learn how to use developer tools (the most important thing to learn for web applications), templates, packages, and libraries wherever they are required.\n\n2. When"", 'result': {'fake': 0.9998, 'real': 0.0002}, 'status': 'success'}, {'text': ""you encounter a problem or get stuck, attentively examine the error message. Most inexperienced programmers ignore error messages, yet they are actually quite helpful in troubleshooting problems. Google any issues or mistakes you run through while constructing your project. You can usually discover the solution on Stackoverflow, a great forum for developers.\n\n3. Keep your project from becoming too perfect. Procrastination and slow project progress are what you'll get as a result.\n\n4. Remember that there’s no perfect code — so avoid over-engineering things and move forward. First, make it work, then make it right, and finally make it fast.\n\nResources\n\nThere are a lot of good websites to learn programming language and data structures few of them includes:\n\nLogicmojo, Coursera, Programming with Mosh, Scalar, takeuforward.\n\nIf you are a book enthusiast then you can use a book for reference. Few goods books to refer are:\n\nCracking the coding interview, Grokking Algorithm etc.\n\nConclusion\n\nTo be a good programmer, you, at the very least, have to keep up with changing technology. It's a constant learning process, and you should always be learning new languages, new paradigms, and most importantly: programming new things!\n\nBeing a successful programmer means learning to think like one. You'll need to look at challenges as learning opportunities, desire to improve your skills and be open to new ways of improving your programming process.\n\nThanks for reading.\n\nAll the best."", 'result': {'fake': 0.9999, 'real': 0.0001}, 'status': 'success'}], 'credits_used': 13, 'credits': 1983409, 'subscription': 0, 'content': 'Programming is one of the most valuable skills you can build. If you’re searching for ""how to learn programming,"" it might be because you want to advance your career.\n\nMaybe you want to learn more about the computer industry or make games or software for your pals. In either case, knowing the computer language can significantly advance both your career and personal development. Now a days there a number of websites and youtube channels such as Logicmojo, GeeksForGeeks, CodewithHarry, takeuforward etc.\n\nProgramming is lots of fun and extraordinarily useful. It allows you to be creative and also opens up a wide range of new careers for you. If you want to learn how to program, read the tutorial below for an explanation of where to go and what to study.\n\nChoose a Programming Language\n\nWhen programming a computer, a set of written instructions is effectively used, which the machine then executes (also known as binary coding). These instructions may be written in a variety of ""languages,"" which are only alternative arrangements of the text and instructions. Choose a language that you believe is pertinent to what you want to do because different languages are frequently used to construct different types of programmes. You can always switch to a different language if you feel that one does not meet your needs.\n\nThink about C, C++, C#, and other similar languages. These languages are mostly employed for the development of stand-alone computer programmes, such as games. For a newbie, learning C and C++ is challenging but not impossible. Learning them will offer you a thorough understanding of both computer operation and programming, as most programming languages borrow one or more ideas from C and C++. Although C#, a language that is quite similar to Java, is beginning to become much more widespread, they are well-known and widely employed.\n\nConsider Python. Python is a very versatile language used widely across several platforms. Despite being extremely powerful, it is an easy language for a beginner to pick up, so give it a try!\n\nLearning the Language\n\nEven though most employers looking to hire programmers will be more interested in your talents than your academic performance or the college you attended, having a college degree to highlight is definitely beneficial. In addition to receiving professional advice from your tutors, you will learn more quickly than if you taught yourself (and maybe your friends). For students pursuing degrees in this area, scholarships and grants are frequently available. Don\'t let the cost of a degree overwhelm you; it is feasible!\n\nLearn Data Structure and Algorithms\n\nAlgorithms and data structures are at the core of programming. The next thing you should do is understand data structures and algorithms after you are confident using any of the languages and writing some simple programmes. If you comprehend the principles of data structures and algorithms, you will become more adept at developing your problem-solving abilities. Recognize that not all data structures can be used in all situations; therefore, for each problem, you must first build an algorithm, which is a step-by-step procedure to solve a particular problem, and then you must select the appropriate data structure to solve the problem. In order to solve problems, the correct data structure and algorithm combination is crucial.\n\nLearn to use the algorithms and data structures, and daily practise using your programming language. Beginners should start by practicing the problems involving data structures and algorithms on Logicmojo websites. The following advice will be helpful as you understand these two principles.\n\n1. Once more, don\'t attempt to quickly absorb all of the theories or notions relating to data structures and algorithms. Learn about one subject, exercise on the websites we\'ve listed above, and then go on to the next subject. You can modify a certain learning approach until it works for you. One of them was already mentioned in the step before (2:1 ratio).\n\n2. When you get to the complex problems, divide the big ones into smaller ones, then solve those smaller ones to reach the result or solution.\n\n3. Practice frequently and thoroughly. Get your hands filthy with programming and, if you can, take part in competitions on other websites. You will grow more self-assured and adept at addressing problems.\n\n4. Study these data structures\' and algorithms\' applications in practical projects. For instance: Array and Strings are used frequently in web applications.\n\n5. You understand the principles of data structures and algorithms, so you can now design an application using what you\'ve learned. In order to broaden your project and gain experience in problem-solving, you can also try to build a feature using these techniques in a previous application or project.\n\nBuild Projects\n\nAs discussed, the majority of inexperienced programmers have trouble establishing projects on their own. You believe that all of the exercises or lessons are a waste of time because they are not relevant to your particular project. You learn a lot through tutorials, but because it just goes over your head, you can\'t use all the ideas and logic in your project. Relax!\n\nInitially try to build a small project or static website first, it can be your own portfolio, a web application, android application or any kind of game. It’s better to start with some simpler projects and then move on to the complex projects. A lot of beginners don’t understand what they should include in their projects. So here is an example.\n\nIf you want to create an online store, start by developing simple functionality. You can begin with the registration or login form before moving on to the navigation bar or other features. Therefore, assess the entire job and divide it into smaller problems or chunks rather than doing everything at once. Which features you need to implement first will depend on how complex your project is. You will first make a lot of mistakes and run into a lot of difficulties, but that is how you will learn to construct and manage big projects. The following advice can help you when creating a project.\n\n1. Learn how to use some useful editors, debuggers, or tools for your project. Learn how to use developer tools (the most important thing to learn for web applications), templates, packages, and libraries wherever they are required.\n\n2. When you encounter a problem or get stuck, attentively examine the error message. Most inexperienced programmers ignore error messages, yet they are actually quite helpful in troubleshooting problems. Google any issues or mistakes you run through while constructing your project. You can usually discover the solution on Stackoverflow, a great forum for developers.\n\n3. Keep your project from becoming too perfect. Procrastination and slow project progress are what you\'ll get as a result.\n\n4. Remember that there’s no perfect code — so avoid over-engineering things and move forward. First, make it work, then make it right, and finally make it fast.\n\nResources\n\nThere are a lot of good websites to learn programming language and data structures few of them includes:\n\nLogicmojo, Coursera, Programming with Mosh, Scalar, takeuforward.\n\nIf you are a book enthusiast then you can use a book for reference. Few goods books to refer are:\n\nCracking the coding interview, Grokking Algorithm etc.\n\nConclusion\n\nTo be a good programmer, you, at the very least, have to keep up with changing technology. It\'s a constant learning process, and you should always be learning new languages, new paradigms, and most importantly: programming new things!\n\nBeing a successful programmer means learning to think like one. You\'ll need to look at challenges as learning opportunities, desire to improve your skills and be open to new ways of improving your programming process.\n\nThanks for reading.\n\nAll the best.', 'aiModelVersion': '1'}",0.00013333333333333
Dave Voorhis,2y,"How hard is it to compete with younger programmers if you're an old developer? I am about areas of CS in which your knowledge becomes obsolete in 2-3 years, like web development? Is it true that with age you learn things like new frameworks slower?","Older developer here.

First, we don’t compete with younger programmers. We work with them, as equals.

Second, Web development isn’t an area of computer science. It’s an application of computer science.

Third, knowledge doesn’t become obsolete every two to three years. Knowledge grows and expands. As you get older, it’s knowledge that shows you that every new framework is simply a rearrangement of concepts and capabilities you’ve seen over and over and over. It’s all old wine in new bottles.

Fourth, as you age, you learn things like new frameworks faster, because you’ve seen it all before. What changes is the syntax, not the underlying concepts.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/glvkz094n6yi72da', 'title': ""How hard is it to compete with younger programmers if you're an old developer? I am about areas of CS in which your knowledge becomes obsolete in 2-3 years, like web development? Is it true that with age you learn things like new frameworks slower?"", 'score': {'original': 0.9877, 'ai': 0.0123}, 'blocks': [{'text': 'Older developer here.\n\nFirst, we don’t compete with younger programmers. We work with them, as equals.\n\nSecond, Web development isn’t an area of computer science. It’s an application of computer science.\n\nThird, knowledge doesn’t become obsolete every two to three years. Knowledge grows and expands. As you get older, it’s knowledge that shows you that every new framework is simply a rearrangement of concepts and capabilities you’ve seen over and over and over. It’s all old wine in new bottles.\n\nFourth, as you age, you learn things like new frameworks faster, because you’ve seen it all before. What changes is the syntax, not the underlying concepts.', 'result': {'fake': 0.0123, 'real': 0.9877}, 'status': 'success'}], 'credits_used': 2, 'credits': 1983407, 'subscription': 0, 'content': 'Older developer here.\n\nFirst, we don’t compete with younger programmers. We work with them, as equals.\n\nSecond, Web development isn’t an area of computer science. It’s an application of computer science.\n\nThird, knowledge doesn’t become obsolete every two to three years. Knowledge grows and expands. As you get older, it’s knowledge that shows you that every new framework is simply a rearrangement of concepts and capabilities you’ve seen over and over and over. It’s all old wine in new bottles.\n\nFourth, as you age, you learn things like new frameworks faster, because you’ve seen it all before. What changes is the syntax, not the underlying concepts.', 'aiModelVersion': '1'}",0.9877
Prabha Prakash,1y,What are your reviews for the Learnbay's Full-Stack software Development online course?,"Data structure and algorithms are important in many fields of study. Their importance stems from the fact that they help to organize, store, and process large amounts of information. Therefore, it is important for students to learn about these topics if they want to have a successful career in the job market. Data structure and algorithms are especially important for computer scientists, data scientists, and data analysts. Data structures and algorithms are becoming increasingly valuable as more people conduct research on machine learning and artificial intelligence. Therefore, knowing how to code can be very beneficial in the job market today.

So, how about an honest review of Learnbay’s Data structure and algorithms program?

Learnbay is the best institute to learn data structures and algorithms as it provides a comprehensive curriculum in this area. The institute not only teaches students about basic data structures and algorithms but also caters to their specific needs.

Note: If you are looking for an institute that provides practical solutions to real-world problems, Learnbay is the place to be.

Course Details:

Course Name: Data Structure and Algorithms/System Design Program

Weekday Batches: 5 Months
Weekend Batches: 6 Months
12+ Real-time Projects

Course Name: Full Stack Software Development Program

Weekday Batches: 8 Months
Weekend Batches: 9 Months
12+ Real-time Projects

Here are some of the features included with this course:

You will get the chance to take part in actual projects and get project feedback. You will work on more than 12 real-world projects while attending this institute, each of which is based on initiatives completed by successful firms. Working on these projects to show off your abilities and learn everything there is to know about the DSA course is a terrific way to spend your time.

The projects that are offered for this course include the following:

Rapid data structures in systems languages other than C.
A program that uses doubly-linked lists for phone directories.
Projects on data structures that use graphs.
Text editor with stacks
Due to the flexible class schedules, it is much easier for working professionals to take classes when it is convenient for them. The stress and burden of maintaining the class schedules are reduced by half as a result.
A fantastic team at Learnbay supports resume writing, provides references, does mock interviews, and offers assessments, among other services.
Learnbay's carefully chosen selection of elite domains in a particular topic may be useful for those seeking to advance their careers in that field. The approach of focusing one's career efforts on a single field is referred to as the elite domain. You can widen your knowledge while honing your competence in one area by pursuing similar subjects. The best method to become an expert in the subject of software development is to focus on one topic at a time. First of all, it might assist individuals in determining the features of a topic that they find appealing and unpleasant. Additionally, it stops students from wasting money on fruitless projects. It might be advantageous to utilize Learnbay's software development courses. Full Stack, product management, Web 3.0 Developer, DevOps & Clouds, etc. are a few of the domains covered by this curriculum.

If Learnbay doesn't have the features you need for working professionals, you can try Udemy, but only if you are a new graduate.

Udemy

The data structure and algorithm courses offered by Udemy last 47 weeks and are intended for both undergraduates and professionals. You will benefit greatly from their thorough projects and practice issues in order to solidify your learning. It could be difficult to answer questions from students in class when there are more than 150 students in the batch. They have a somewhat expensive pricing structure for their courses. Udemy does not offer real-time or capstone projects, which is a significant downside.

Final reflection

Beginners need to understand how crucial it is to learn data structures and algorithms. There are many websites that provide these classes, but in my opinion, Learnbay is the best. The most affordable data structure courses in Bangalore are available through Learnbay. Learning data structures and algorithms has a lot of potential for job advancement.

I hope my response was helpful.

Best regards!","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/swgmnz251uecxb4k', 'title': ""What are your reviews for the Learnbay's Full-Stack software Development online course?"", 'score': {'original': 0, 'ai': 1}, 'blocks': [{'text': ""Data structure and algorithms are important in many fields of study. Their importance stems from the fact that they help to organize, store, and process large amounts of information. Therefore, it is important for students to learn about these topics if they want to have a successful career in the job market. Data structure and algorithms are especially important for computer scientists, data scientists, and data analysts. Data structures and algorithms are becoming increasingly valuable as more people conduct research on machine learning and artificial intelligence. Therefore, knowing how to code can be very beneficial in the job market today.\n\nSo, how about an honest review of Learnbay’s Data structure and algorithms program?\n\nLearnbay is the best institute to learn data structures and algorithms as it provides a comprehensive curriculum in this area. The institute not only teaches students about basic data structures and algorithms but also caters to their specific needs.\n\nNote: If you are looking for an institute that provides practical solutions to real-world problems, Learnbay is the place to be.\n\nCourse Details:\n\nCourse Name: Data Structure and Algorithms/System Design Program\n\nWeekday Batches: 5 Months\nWeekend Batches: 6 Months\n12+ Real-time Projects\n\nCourse Name: Full Stack Software Development Program\n\nWeekday Batches: 8 Months\nWeekend Batches: 9 Months\n12+ Real-time Projects\n\nHere are some of the features included with this course:\n\nYou will get the chance to take part in actual projects and get project feedback. You will work on more than 12 real-world projects while attending this institute, each of which is based on initiatives completed by successful firms. Working on these projects to show off your abilities and learn everything there is to know about the DSA course is a terrific way to spend your time.\n\nThe projects that are offered for this course include the following:\n\nRapid data structures in systems languages other than C.\nA program that uses doubly-linked lists for phone directories.\nProjects on data structures that use graphs.\nText editor with stacks\nDue to the flexible class schedules, it is much easier for working professionals to take classes when it is convenient for them. The stress and burden of maintaining the class schedules are reduced by half as a result.\nA fantastic team at Learnbay supports resume writing, provides references, does mock interviews, and offers assessments, among other services.\nLearnbay's carefully chosen selection of elite domains in a particular topic may be useful for those seeking to advance their careers in that field. The approach of focusing one's career efforts on a single field is referred to as the elite domain. You can widen your knowledge while honing your competence in one area by pursuing similar subjects. The best method to become an expert in the subject of software development is to focus on one topic at a time. First of all, it might assist individuals in determining the features of a topic that they find appealing and unpleasant. Additionally, it stops students from wasting money on fruitless projects. It might be advantageous to utilize Learnbay's software development courses. Full Stack, product management, Web 3.0 Developer, DevOps & Clouds, etc. are a few of the domains covered by this curriculum.\n\nIf Learnbay doesn't have the features you need"", 'result': {'fake': 1, 'real': 0}, 'status': 'success'}, {'text': 'for working professionals, you can try Udemy, but only if you are a new graduate.\n\nUdemy\n\nThe data structure and algorithm courses offered by Udemy last 47 weeks and are intended for both undergraduates and professionals. You will benefit greatly from their thorough projects and practice issues in order to solidify your learning. It could be difficult to answer questions from students in class when there are more than 150 students in the batch. They have a somewhat expensive pricing structure for their courses. Udemy does not offer real-time or capstone projects, which is a significant downside.\n\nFinal reflection\n\nBeginners need to understand how crucial it is to learn data structures and algorithms. There are many websites that provide these classes, but in my opinion, Learnbay is the best. The most affordable data structure courses in Bangalore are available through Learnbay. Learning data structures and algorithms has a lot of potential for job advancement.\n\nI hope my response was helpful.\n\nBest regards!', 'result': {'fake': 1, 'real': 0}, 'status': 'success'}], 'credits_used': 7, 'credits': 1983400, 'subscription': 0, 'content': ""Data structure and algorithms are important in many fields of study. Their importance stems from the fact that they help to organize, store, and process large amounts of information. Therefore, it is important for students to learn about these topics if they want to have a successful career in the job market. Data structure and algorithms are especially important for computer scientists, data scientists, and data analysts. Data structures and algorithms are becoming increasingly valuable as more people conduct research on machine learning and artificial intelligence. Therefore, knowing how to code can be very beneficial in the job market today.\n\nSo, how about an honest review of Learnbay’s Data structure and algorithms program?\n\nLearnbay is the best institute to learn data structures and algorithms as it provides a comprehensive curriculum in this area. The institute not only teaches students about basic data structures and algorithms but also caters to their specific needs.\n\nNote: If you are looking for an institute that provides practical solutions to real-world problems, Learnbay is the place to be.\n\nCourse Details:\n\nCourse Name: Data Structure and Algorithms/System Design Program\n\nWeekday Batches: 5 Months\nWeekend Batches: 6 Months\n12+ Real-time Projects\n\nCourse Name: Full Stack Software Development Program\n\nWeekday Batches: 8 Months\nWeekend Batches: 9 Months\n12+ Real-time Projects\n\nHere are some of the features included with this course:\n\nYou will get the chance to take part in actual projects and get project feedback. You will work on more than 12 real-world projects while attending this institute, each of which is based on initiatives completed by successful firms. Working on these projects to show off your abilities and learn everything there is to know about the DSA course is a terrific way to spend your time.\n\nThe projects that are offered for this course include the following:\n\nRapid data structures in systems languages other than C.\nA program that uses doubly-linked lists for phone directories.\nProjects on data structures that use graphs.\nText editor with stacks\nDue to the flexible class schedules, it is much easier for working professionals to take classes when it is convenient for them. The stress and burden of maintaining the class schedules are reduced by half as a result.\nA fantastic team at Learnbay supports resume writing, provides references, does mock interviews, and offers assessments, among other services.\nLearnbay's carefully chosen selection of elite domains in a particular topic may be useful for those seeking to advance their careers in that field. The approach of focusing one's career efforts on a single field is referred to as the elite domain. You can widen your knowledge while honing your competence in one area by pursuing similar subjects. The best method to become an expert in the subject of software development is to focus on one topic at a time. First of all, it might assist individuals in determining the features of a topic that they find appealing and unpleasant. Additionally, it stops students from wasting money on fruitless projects. It might be advantageous to utilize Learnbay's software development courses. Full Stack, product management, Web 3.0 Developer, DevOps & Clouds, etc. are a few of the domains covered by this curriculum.\n\nIf Learnbay doesn't have the features you need for working professionals, you can try Udemy, but only if you are a new graduate.\n\nUdemy\n\nThe data structure and algorithm courses offered by Udemy last 47 weeks and are intended for both undergraduates and professionals. You will benefit greatly from their thorough projects and practice issues in order to solidify your learning. It could be difficult to answer questions from students in class when there are more than 150 students in the batch. They have a somewhat expensive pricing structure for their courses. Udemy does not offer real-time or capstone projects, which is a significant downside.\n\nFinal reflection\n\nBeginners need to understand how crucial it is to learn data structures and algorithms. There are many websites that provide these classes, but in my opinion, Learnbay is the best. The most affordable data structure courses in Bangalore are available through Learnbay. Learning data structures and algorithms has a lot of potential for job advancement.\n\nI hope my response was helpful.\n\nBest regards!"", 'aiModelVersion': '1'}",0.0
Dawn Budge,11y,Why are front end developers so high in demand at startups if front end development is relatively easier than other fields of engineering?,"If you are just starting out in front-end, I think you are on the verge of discovering what the phrase 'wicked hard' means. Here's why 1) what Nicholas Zakas calls 'the most hostile development environment in the world'.  There are many browsers.  They have different bugs.  They implement the same features in different ways.  You do not control the upgrade cycle.  Take a look at PPK's compatibility tables and caniuse.com to get an idea of how big this is.   When I developed both server-side and front-end dev, I found the server-side much more liberating in terms of not having to test the same thing over and over. There are many devices.  They have different input methods (mouse, keyboard, touch) and different outputs to consider (large screen, mobile, tablet, retina display, screenreader, assistive technology), and your end user can adapt the output (e.g. enlarging text, changing the colour settings, switching off CSS) 2) Then there's the less cut and dried stuff, and this is usually where techies less experienced in front end dev fail: SEO, accessibility, usability.  SEO because it is based on hints and whispers, and because you need to ensure that your content can still be accessed without JavaScript for the bot to be able to scrape it, accessibility and usability because the level of acceptable performance is subjective.  There is also a disconnect between the WCAG 2 guidelines and how you practically implement a site that will conform to the guidelines.  Let's just say, look at the length of the quickref on http://www.w3.org/WAI/WCAG20/quickref/ and you'll get an idea. 3) So much more work is being required of the client-side, so you can't get away with procedural javascript code anymore.  Architecting your solution is a necessity.  OO, modular JavaScript often using an MVC pattern is gaining increasing traction, as is testing with tools like QUnit and Jasmine.  If you are interested in learning more about this, I'd suggest looking up Addi Osmani, Stephan Stoyanov, Douglas Crockford, Christian Heilmann.  This is where more junior developers struggle, because JavaScript has a steep learning curve. 4) CSS is painful to work with once your site gets big.  It is very static.  You have to hold a lot in your head and develop strategies for regression testing effectively so you don't go round in circles to see if you've broken something.  5) Between new devices emerging and new standards and features being developed along with a fast pace for implementation in some browsers (but not others), there's constantly new things to learn. 6) Sometimes you find yourself working with graphic designs that are hard to impossible to implement with the above constraints/challenges.  Finally, time spent learning the above the hard way, because nobody teaching can cope with the pace of change.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/f36g2bjlmy5ck9eq', 'title': 'Why are front end developers so high in demand at startups if front end development is relatively easier than other fields of engineering?', 'score': {'original': 0.9994, 'ai': 0.0006}, 'blocks': [{'text': ""If you are just starting out in front-end, I think you are on the verge of discovering what the phrase 'wicked hard' means. Here's why 1) what Nicholas Zakas calls 'the most hostile development environment in the world'.  There are many browsers.  They have different bugs.  They implement the same features in different ways.  You do not control the upgrade cycle.  Take a look at PPK's compatibility tables and caniuse.com to get an idea of how big this is.   When I developed both server-side and front-end dev, I found the server-side much more liberating in terms of not having to test the same thing over and over. There are many devices.  They have different input methods (mouse, keyboard, touch) and different outputs to consider (large screen, mobile, tablet, retina display, screenreader, assistive technology), and your end user can adapt the output (e.g. enlarging text, changing the colour settings, switching off CSS) 2) Then there's the less cut and dried stuff, and this is usually where techies less experienced in front end dev fail: SEO, accessibility, usability.  SEO because it is based on hints and whispers, and because you need to ensure that your content can still be accessed without JavaScript for the bot to be able to scrape it, accessibility and usability because the level of acceptable performance is subjective.  There is also a disconnect between the WCAG 2 guidelines and how you practically implement a site that will conform to the guidelines.  Let's just say, look at the length of the quickref on http://www.w3.org/WAI/WCAG20/quickref/ and you'll get an idea. 3) So much more work is being required of the client-side, so you can't get away with procedural javascript code anymore.  Architecting your solution is a necessity.  OO, modular JavaScript often using an MVC pattern is gaining increasing traction, as is testing with tools like QUnit and Jasmine.  If you are interested in learning more about this, I'd suggest looking up Addi Osmani, Stephan Stoyanov, Douglas Crockford, Christian Heilmann.  This is where more junior developers struggle, because JavaScript has a steep learning curve. 4) CSS is painful to work with once your site gets big.  It is very static.  You have to hold a lot in your head and develop strategies for regression testing effectively so you don't go round in circles to see if you've broken something.  5) Between new devices emerging and new standards and features being developed along with a fast pace for implementation in some browsers (but not others), there's constantly new things to learn. 6) Sometimes you find yourself working with graphic designs that are hard to impossible to implement with the above constraints/challenges.  Finally, time spent learning the above the hard way, because nobody teaching can cope with the pace of change."", 'result': {'fake': 0.0006, 'real': 0.9994}, 'status': 'success'}], 'credits_used': 5, 'credits': 1983395, 'subscription': 0, 'content': ""If you are just starting out in front-end, I think you are on the verge of discovering what the phrase 'wicked hard' means. Here's why 1) what Nicholas Zakas calls 'the most hostile development environment in the world'.  There are many browsers.  They have different bugs.  They implement the same features in different ways.  You do not control the upgrade cycle.  Take a look at PPK's compatibility tables and caniuse.com to get an idea of how big this is.   When I developed both server-side and front-end dev, I found the server-side much more liberating in terms of not having to test the same thing over and over. There are many devices.  They have different input methods (mouse, keyboard, touch) and different outputs to consider (large screen, mobile, tablet, retina display, screenreader, assistive technology), and your end user can adapt the output (e.g. enlarging text, changing the colour settings, switching off CSS) 2) Then there's the less cut and dried stuff, and this is usually where techies less experienced in front end dev fail: SEO, accessibility, usability.  SEO because it is based on hints and whispers, and because you need to ensure that your content can still be accessed without JavaScript for the bot to be able to scrape it, accessibility and usability because the level of acceptable performance is subjective.  There is also a disconnect between the WCAG 2 guidelines and how you practically implement a site that will conform to the guidelines.  Let's just say, look at the length of the quickref on http://www.w3.org/WAI/WCAG20/quickref/ and you'll get an idea. 3) So much more work is being required of the client-side, so you can't get away with procedural javascript code anymore.  Architecting your solution is a necessity.  OO, modular JavaScript often using an MVC pattern is gaining increasing traction, as is testing with tools like QUnit and Jasmine.  If you are interested in learning more about this, I'd suggest looking up Addi Osmani, Stephan Stoyanov, Douglas Crockford, Christian Heilmann.  This is where more junior developers struggle, because JavaScript has a steep learning curve. 4) CSS is painful to work with once your site gets big.  It is very static.  You have to hold a lot in your head and develop strategies for regression testing effectively so you don't go round in circles to see if you've broken something.  5) Between new devices emerging and new standards and features being developed along with a fast pace for implementation in some browsers (but not others), there's constantly new things to learn. 6) Sometimes you find yourself working with graphic designs that are hard to impossible to implement with the above constraints/challenges.  Finally, time spent learning the above the hard way, because nobody teaching can cope with the pace of change."", 'aiModelVersion': '1'}",0.9994
John Ventura Flickinger,Updated 5y,What are some of the most complex applications you've built as a web developer?,"The most complex application I have built as a web developer is https://hellochess.com
 . It is a live chess server running on Node.js, MongoDB, react/redux, and recently, a bit of Typescript as well. Perhaps one of the most defining characteristics of HelloChess is Four player chess (on one big board).

When I started the project (about 1.5 years ago) I never imagined the complexity of supporting live chess games. Long story short, having multiple games running at once while supporting real-time interactions between users, and Chess Engines was a time consuming and arduous process. Furthermore, early on, I decided to build a 4 player chess engine. My initial attempts at programming alpha-beta search in JavaScript were futile as the language just wasn’t fast enough to handle the sheer size of the search tree. Ultimately this led to the rewriting of the engine in C. After tons of bugs and lots of learning, I ultimately succeeded and although the code for the AI is riddled with programming errors, I am proud to have built it. As of late, a fellow programmer has started helping me and added support for S-Chess and Crazyhouse/Crayhouse960. I am happy to continue working on the project.

Should any of you want to take a closer look at the project, the code can be found on GitHub here: (johnnyvf24/hellochess-v2
)

EDIT 2018:

We are no longer developing hellochess, but we have added it to Four Player Chess
 on chess.com.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/7qs3g180lxnte54z', 'title': ""What are some of the most complex applications you've built as a web developer?"", 'score': {'original': 0.9996, 'ai': 0.0004}, 'blocks': [{'text': 'The most complex application I have built as a web developer is https://hellochess.com\n . It is a live chess server running on Node.js, MongoDB, react/redux, and recently, a bit of Typescript as well. Perhaps one of the most defining characteristics of HelloChess is Four player chess (on one big board).\n\nWhen I started the project (about 1.5 years ago) I never imagined the complexity of supporting live chess games. Long story short, having multiple games running at once while supporting real-time interactions between users, and Chess Engines was a time consuming and arduous process. Furthermore, early on, I decided to build a 4 player chess engine. My initial attempts at programming alpha-beta search in JavaScript were futile as the language just wasn’t fast enough to handle the sheer size of the search tree. Ultimately this led to the rewriting of the engine in C. After tons of bugs and lots of learning, I ultimately succeeded and although the code for the AI is riddled with programming errors, I am proud to have built it. As of late, a fellow programmer has started helping me and added support for S-Chess and Crazyhouse/Crayhouse960. I am happy to continue working on the project.\n\nShould any of you want to take a closer look at the project, the code can be found on GitHub here: (johnnyvf24/hellochess-v2\n)\n\nEDIT 2018:\n\nWe are no longer developing hellochess, but we have added it to Four Player Chess\n on chess.com.', 'result': {'fake': 0.0004, 'real': 0.9996}, 'status': 'success'}], 'credits_used': 3, 'credits': 1983392, 'subscription': 0, 'content': 'The most complex application I have built as a web developer is https://hellochess.com\n . It is a live chess server running on Node.js, MongoDB, react/redux, and recently, a bit of Typescript as well. Perhaps one of the most defining characteristics of HelloChess is Four player chess (on one big board).\n\nWhen I started the project (about 1.5 years ago) I never imagined the complexity of supporting live chess games. Long story short, having multiple games running at once while supporting real-time interactions between users, and Chess Engines was a time consuming and arduous process. Furthermore, early on, I decided to build a 4 player chess engine. My initial attempts at programming alpha-beta search in JavaScript were futile as the language just wasn’t fast enough to handle the sheer size of the search tree. Ultimately this led to the rewriting of the engine in C. After tons of bugs and lots of learning, I ultimately succeeded and although the code for the AI is riddled with programming errors, I am proud to have built it. As of late, a fellow programmer has started helping me and added support for S-Chess and Crazyhouse/Crayhouse960. I am happy to continue working on the project.\n\nShould any of you want to take a closer look at the project, the code can be found on GitHub here: (johnnyvf24/hellochess-v2\n)\n\nEDIT 2018:\n\nWe are no longer developing hellochess, but we have added it to Four Player Chess\n on chess.com.', 'aiModelVersion': '1'}",0.9996
Ashish B,Updated 7mo,How good is the Learnbay Full-Stack software Development course?,"This is an online educational institute where professionals get domain-specific knowledge from industry experts that helps them to get a salary hike or to work with leading firms. Additionally, Learnbay’s Full-Stack Software Development course has provided many such great opportunities for future career growth to their enrolled students.

How?

It has:

Professional instructors with industry-specific knowledge.
Well-structured program with a hands-on project.
Modules are taught with real-time examples and practical exercises.
It is a highly recommended program in this platform due to its domain specialization courses.
And, it offers a wide range of features from learning modules to getting a job in leading companies.

So, let’s discuss the features of this course provided by this institute:

Course Name - Software Development Master Program

Duration of the course: 300+ hours
Weekday Classes: 9 months and Weekend Classes: 11 months

Features:

The course offers live interactive classes from industry experts.
Instructors are experienced and share their valuable knowledge and solution to their students.
This course is for professionals with 6 months of work experience.
It offers domain-specific courses in the field of DSAI, Product Management, BlockChain, Cloud, DevOps, and Web.
Having domain knowledge will increase your task efficiency, make decisions well-informed, and analyze problems in a specific domain will develop your innovative solution.
You will receive IBM and Microsoft certifications after completing the course. This will enhance your credibility in the industry and establish a trust level that will provide you a competitive advantage to apply for jobs in top firms such as Paypal, TCS, Dell, HCL, Google, IBM, etc.
Real-time projects and Capstone project is provided to the students to build their practical skills as Full-stack developer. It will boost your confidence to solve real-world problems. Projects included Design BookMyShow, Design Zerodha, etc.
Some project work is designing core messaging functionality for both 1:1 and group channels (Slack) and designing the Reddit API, focusing on core functionalities for seamless interaction with the platform.
Career Assistance is also offered to the learners, including resume writing, LinkedIn review, 1:1 sessions with experts, unlimited interview calls, mock interviews, and 3-year job support.

So, by stating all the features of the Full-Stack Software Development course, one should able to analyze why this platform is good for those who are planning to start their career as a software developer.

However, this course is quite advanced level and provides in-depth knowledge. So, students with no basic knowledge may find it difficult to adapt to this program.

Those, learners who want to build their basic knowledge can opt for this platform.

Such as

Course Name: The Ultimate 2023 Fullstack Web Development Bootcamp

This course will help you to learn all the basic concepts required for developing software. You will also get a certificate from Udemy after completing this course. It offers video lectures and one can learn at its own pace.

However, it doesn’t offer domain-specific knowledge or any career assistance to its learners.

To end,

These are great institutes that offer a wide range of courses in software development. It is easily available on the online platform. After opting for this course, one can able to learn in-depth skills of software development which will help you in numerous ways.

All the best.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/0wbd752s4rlkzcmo', 'title': 'How good is the Learnbay Full-Stack software Development course?', 'score': {'original': 0.5992, 'ai': 0.4008}, 'blocks': [{'text': 'This is an online educational institute where professionals get domain-specific knowledge from industry experts that helps them to get a salary hike or to work with leading firms. Additionally, Learnbay’s Full-Stack Software Development course has provided many such great opportunities for future career growth to their enrolled students.\n\nHow?\n\nIt has:\n\nProfessional instructors with industry-specific knowledge.\nWell-structured program with a hands-on project.\nModules are taught with real-time examples and practical exercises.\nIt is a highly recommended program in this platform due to its domain specialization courses.\nAnd, it offers a wide range of features from learning modules to getting a job in leading companies.\n\nSo, let’s discuss the features of this course provided by this institute:\n\nCourse Name - Software Development Master Program\n\nDuration of the course: 300+ hours\nWeekday Classes: 9 months and Weekend Classes: 11 months\n\nFeatures:\n\nThe course offers live interactive classes from industry experts.\nInstructors are experienced and share their valuable knowledge and solution to their students.\nThis course is for professionals with 6 months of work experience.\nIt offers domain-specific courses in the field of DSAI, Product Management, BlockChain, Cloud, DevOps, and Web.\nHaving domain knowledge will increase your task efficiency, make decisions well-informed, and analyze problems in a specific domain will develop your innovative solution.\nYou will receive IBM and Microsoft certifications after completing the course. This will enhance your credibility in the industry and establish a trust level that will provide you a competitive advantage to apply for jobs in top firms such as Paypal, TCS, Dell, HCL, Google, IBM, etc.\nReal-time projects and Capstone project is provided to the students to build their practical skills as Full-stack developer. It will boost your confidence to solve real-world problems. Projects included Design BookMyShow, Design Zerodha, etc.\nSome project work is designing core messaging functionality for both 1:1 and group channels (Slack) and designing the Reddit API, focusing on core functionalities for seamless interaction with the platform.\nCareer Assistance is also offered to the learners, including resume writing, LinkedIn review, 1:1 sessions with experts, unlimited interview calls, mock interviews, and 3-year job support.\n\nSo, by stating all the features of the Full-Stack Software Development course, one should able to analyze why this platform is good for those who are planning to start their career as a software developer.\n\nHowever, this course is quite advanced level and provides in-depth knowledge. So, students with no basic knowledge may find it difficult to adapt to this program.\n\nThose, learners who want to build their basic knowledge can opt for this platform.\n\nSuch as\n\nCourse Name: The Ultimate 2023 Fullstack Web Development Bootcamp\n\nThis course will help you to learn all the basic concepts required for developing software. You will also get a certificate from Udemy after completing this course. It offers video lectures and one can learn at its own pace.\n\nHowever, it doesn’t offer domain-specific knowledge or any career assistance to its learners.\n\nTo end,\n\nThese are great institutes that offer a wide range of courses in software development. It is easily available on the online platform. After opting for this course, one can able to learn in-depth skills of software development which will help you in numerous ways.\n\nAll the best.', 'result': {'fake': 0.0024, 'real': 0.9976}, 'status': 'success'}], 'credits_used': 6, 'credits': 1983386, 'subscription': 0, 'content': 'This is an online educational institute where professionals get domain-specific knowledge from industry experts that helps them to get a salary hike or to work with leading firms. Additionally, Learnbay’s Full-Stack Software Development course has provided many such great opportunities for future career growth to their enrolled students.\n\nHow?\n\nIt has:\n\nProfessional instructors with industry-specific knowledge.\nWell-structured program with a hands-on project.\nModules are taught with real-time examples and practical exercises.\nIt is a highly recommended program in this platform due to its domain specialization courses.\nAnd, it offers a wide range of features from learning modules to getting a job in leading companies.\n\nSo, let’s discuss the features of this course provided by this institute:\n\nCourse Name - Software Development Master Program\n\nDuration of the course: 300+ hours\nWeekday Classes: 9 months and Weekend Classes: 11 months\n\nFeatures:\n\nThe course offers live interactive classes from industry experts.\nInstructors are experienced and share their valuable knowledge and solution to their students.\nThis course is for professionals with 6 months of work experience.\nIt offers domain-specific courses in the field of DSAI, Product Management, BlockChain, Cloud, DevOps, and Web.\nHaving domain knowledge will increase your task efficiency, make decisions well-informed, and analyze problems in a specific domain will develop your innovative solution.\nYou will receive IBM and Microsoft certifications after completing the course. This will enhance your credibility in the industry and establish a trust level that will provide you a competitive advantage to apply for jobs in top firms such as Paypal, TCS, Dell, HCL, Google, IBM, etc.\nReal-time projects and Capstone project is provided to the students to build their practical skills as Full-stack developer. It will boost your confidence to solve real-world problems. Projects included Design BookMyShow, Design Zerodha, etc.\nSome project work is designing core messaging functionality for both 1:1 and group channels (Slack) and designing the Reddit API, focusing on core functionalities for seamless interaction with the platform.\nCareer Assistance is also offered to the learners, including resume writing, LinkedIn review, 1:1 sessions with experts, unlimited interview calls, mock interviews, and 3-year job support.\n\nSo, by stating all the features of the Full-Stack Software Development course, one should able to analyze why this platform is good for those who are planning to start their career as a software developer.\n\nHowever, this course is quite advanced level and provides in-depth knowledge. So, students with no basic knowledge may find it difficult to adapt to this program.\n\nThose, learners who want to build their basic knowledge can opt for this platform.\n\nSuch as\n\nCourse Name: The Ultimate 2023 Fullstack Web Development Bootcamp\n\nThis course will help you to learn all the basic concepts required for developing software. You will also get a certificate from Udemy after completing this course. It offers video lectures and one can learn at its own pace.\n\nHowever, it doesn’t offer domain-specific knowledge or any career assistance to its learners.\n\nTo end,\n\nThese are great institutes that offer a wide range of courses in software development. It is easily available on the online platform. After opting for this course, one can able to learn in-depth skills of software development which will help you in numerous ways.\n\nAll the best.', 'aiModelVersion': '1'}",0.5992
Chris Nash,Updated 2y,What are the reasons to change your developer in the middle of a project?,"Probably the biggest one is they aren’t doing the work.

Once upon a time, I worked for a video game studio. We were developing a golf game. I was brought on to help develop the golf course editor in Windows. Since it was 1993, Windows was a big deal. Most games of the era were still in DOS.

The game programmer, Jim*, worked offsite, but he came in on occasion to show us his progress. He was developing the game in Windows as well. In assembly.

For the non-programmers, working in assembly in Windows is incredibly rare. While possible, most Windows applications were written in C and C++ and the early versions of Windows used a C API. You could still develop something in another language, but Windows wasn’t designed for it.

We met with Jim once shortly after I joined the project. He showed us the course using a test level he had. It was sort of 3D (what passed for 3D back then). But it was off:

The view was far too small. It was like 320x200 when we were developing for 800x600
All the colors were off
The rocks were red
The grass was blue

He said the colors were a minor problem and he’d have them fixed eventually. He pointed out some features of the scene, such as how nice the boulder by the tee looked. And how good the fairway looked. Except for the colors being off.

I figured that was fine for “in development”. After all, we weren’t near our ship date. And I was just a junior programmer; what did I know?

So the lead and I worked on the editor. We made some respectable progress. In a few months Jim came back into the office. He didn’t offer to show us his progress, but we pressed him.

It looked exactly the same. The same view. The same wrong colors. He played it up, but it looked exactly the same. He talked about how he had been working on the “core” and not the rendering so much.

We were left scratching our heads. Okay, so you can’t see any difference with “internals”, but we were wondering what had changed.

A few months later Jim came in again. He met with the studio head. After about an hour, our producer told us that Jim quit and wasn’t employed by the studio any longer.

The source for the game wasn’t usable. No one understood how it worked. I suspect that was even true for Jim. I think he got lost in the complexity and just gave up.

I don’t really know if Jim quit or was fired. Either outcome is likely, but he just wasn’t making progress.

Eventually the game (and the editor) were given to another studio who pretty much rewrote everything from scratch.

The game eventually became this, developed by now-defunct Cinematronics (image credit)

If you’re using an outside developer for a project, make sure they demonstrate progress. They have to be accountable.

If they can’t demonstrate progress without reason, cut them loose and move on.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/d6zm20xirc87gysk', 'title': 'What are the reasons to change your developer in the middle of a project?', 'score': {'original': 0.5479, 'ai': 0.4521}, 'blocks': [{'text': 'Probably the biggest one is they aren’t doing the work.\n\nOnce upon a time, I worked for a video game studio. We were developing a golf game. I was brought on to help develop the golf course editor in Windows. Since it was 1993, Windows was a big deal. Most games of the era were still in DOS.\n\nThe game programmer, Jim*, worked offsite, but he came in on occasion to show us his progress. He was developing the game in Windows as well. In assembly.\n\nFor the non-programmers, working in assembly in Windows is incredibly rare. While possible, most Windows applications were written in C and C++ and the early versions of Windows used a C API. You could still develop something in another language, but Windows wasn’t designed for it.\n\nWe met with Jim once shortly after I joined the project. He showed us the course using a test level he had. It was sort of 3D (what passed for 3D back then). But it was off:\n\nThe view was far too small. It was like 320x200 when we were developing for 800x600\nAll the colors were off\nThe rocks were red\nThe grass was blue\n\nHe said the colors were a minor problem and he’d have them fixed eventually. He pointed out some features of the scene, such as how nice the boulder by the tee looked. And how good the fairway looked. Except for the colors being off.\n\nI figured that was fine for “in development”. After all, we weren’t near our ship date. And I was just a junior programmer; what did I know?\n\nSo the lead and I worked on the editor. We made some respectable progress. In a few months Jim came back into the office. He didn’t offer to show us his progress, but we pressed him.\n\nIt looked exactly the same. The same view. The same wrong colors. He played it up, but it looked exactly the same. He talked about how he had been working on the “core” and not the rendering so much.\n\nWe were left scratching our heads. Okay, so you can’t see any difference with “internals”, but we were wondering what had changed.\n\nA few months later Jim came in again. He met with the studio head. After about an hour, our producer told us that Jim quit and wasn’t employed by the studio any longer.\n\nThe source for the game wasn’t usable. No one understood how it worked. I suspect that was even true for Jim. I think he got lost in the complexity and just gave up.\n\nI don’t really know if Jim quit or was fired. Either outcome is likely, but he just wasn’t making progress.\n\nEventually the game (and the editor) were given to another studio who pretty much rewrote everything from scratch.\n\nThe game eventually became this, developed by now-defunct Cinematronics (image credit)\n\nIf you’re using an outside developer for a project, make sure they demonstrate progress. They have to be accountable.\n\nIf they can’t demonstrate progress without reason, cut them loose and move on.', 'result': {'fake': 0.0004, 'real': 0.9996}, 'status': 'success'}], 'credits_used': 6, 'credits': 1983380, 'subscription': 0, 'content': 'Probably the biggest one is they aren’t doing the work.\n\nOnce upon a time, I worked for a video game studio. We were developing a golf game. I was brought on to help develop the golf course editor in Windows. Since it was 1993, Windows was a big deal. Most games of the era were still in DOS.\n\nThe game programmer, Jim*, worked offsite, but he came in on occasion to show us his progress. He was developing the game in Windows as well. In assembly.\n\nFor the non-programmers, working in assembly in Windows is incredibly rare. While possible, most Windows applications were written in C and C++ and the early versions of Windows used a C API. You could still develop something in another language, but Windows wasn’t designed for it.\n\nWe met with Jim once shortly after I joined the project. He showed us the course using a test level he had. It was sort of 3D (what passed for 3D back then). But it was off:\n\nThe view was far too small. It was like 320x200 when we were developing for 800x600\nAll the colors were off\nThe rocks were red\nThe grass was blue\n\nHe said the colors were a minor problem and he’d have them fixed eventually. He pointed out some features of the scene, such as how nice the boulder by the tee looked. And how good the fairway looked. Except for the colors being off.\n\nI figured that was fine for “in development”. After all, we weren’t near our ship date. And I was just a junior programmer; what did I know?\n\nSo the lead and I worked on the editor. We made some respectable progress. In a few months Jim came back into the office. He didn’t offer to show us his progress, but we pressed him.\n\nIt looked exactly the same. The same view. The same wrong colors. He played it up, but it looked exactly the same. He talked about how he had been working on the “core” and not the rendering so much.\n\nWe were left scratching our heads. Okay, so you can’t see any difference with “internals”, but we were wondering what had changed.\n\nA few months later Jim came in again. He met with the studio head. After about an hour, our producer told us that Jim quit and wasn’t employed by the studio any longer.\n\nThe source for the game wasn’t usable. No one understood how it worked. I suspect that was even true for Jim. I think he got lost in the complexity and just gave up.\n\nI don’t really know if Jim quit or was fired. Either outcome is likely, but he just wasn’t making progress.\n\nEventually the game (and the editor) were given to another studio who pretty much rewrote everything from scratch.\n\nThe game eventually became this, developed by now-defunct Cinematronics (image credit)\n\nIf you’re using an outside developer for a project, make sure they demonstrate progress. They have to be accountable.\n\nIf they can’t demonstrate progress without reason, cut them loose and move on.', 'aiModelVersion': '1'}",0.5479
Håkon Hapnes Strand,4y,Why do most developers say that Python should not be used to build mission-critical software systems?,"I love Python as much as anyone, but for truly mission-critical software it’s not a great choice.

The reason for this is Python’s type system. Python will throw type errors, but only at runtime. This means that the program, which could be running in production, will crash when there is a type error.

For a website like Quora, which is written in Python, that may be tolerated to a certain extent. Quora has quite a bit of downtime because of internal server errors, and I wouldn’t at all be surprised if many of those were caused by type errors. Many people are annoyed by this of course, but it’s not the end of the world.

If you’re a bank, or a nuclear power plant, or an aircraft navigation system, however, that won’t do. Program crashes are unacceptable.

A statically typed language checks for type inconsistencies at compile-time. Because of this, a whole bunch of errors will be caught in the build pipeline and never end up anywhere near production. There could still be bugs, of course, but many of the common ones related to types will simply never happen. In a way, the compiler verifies that the program is internally consistent.

Now, you could take advantage of the typing module that has been included in the standard library of Python as of version 3.7.3, but that’s kind of a hack to make Python more like a statically typed language. If static typing is what you’re after, you might as well go for the real deal.

For really mission-critical stuff, you want programming languages like Java, C#, C++ or similar.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/ha0ozduitm6j8c3x', 'title': 'Why do most developers say that Python should not be used to build mission-critical software systems?', 'score': {'original': 0.999, 'ai': 0.001}, 'blocks': [{'text': 'I love Python as much as anyone, but for truly mission-critical software it’s not a great choice.\n\nThe reason for this is Python’s type system. Python will throw type errors, but only at runtime. This means that the program, which could be running in production, will crash when there is a type error.\n\nFor a website like Quora, which is written in Python, that may be tolerated to a certain extent. Quora has quite a bit of downtime because of internal server errors, and I wouldn’t at all be surprised if many of those were caused by type errors. Many people are annoyed by this of course, but it’s not the end of the world.\n\nIf you’re a bank, or a nuclear power plant, or an aircraft navigation system, however, that won’t do. Program crashes are unacceptable.\n\nA statically typed language checks for type inconsistencies at compile-time. Because of this, a whole bunch of errors will be caught in the build pipeline and never end up anywhere near production. There could still be bugs, of course, but many of the common ones related to types will simply never happen. In a way, the compiler verifies that the program is internally consistent.\n\nNow, you could take advantage of the typing module that has been included in the standard library of Python as of version 3.7.3, but that’s kind of a hack to make Python more like a statically typed language. If static typing is what you’re after, you might as well go for the real deal.\n\nFor really mission-critical stuff, you want programming languages like Java, C#, C++ or similar.', 'result': {'fake': 0.001, 'real': 0.999}, 'status': 'success'}], 'credits_used': 3, 'credits': 1983377, 'subscription': 0, 'content': 'I love Python as much as anyone, but for truly mission-critical software it’s not a great choice.\n\nThe reason for this is Python’s type system. Python will throw type errors, but only at runtime. This means that the program, which could be running in production, will crash when there is a type error.\n\nFor a website like Quora, which is written in Python, that may be tolerated to a certain extent. Quora has quite a bit of downtime because of internal server errors, and I wouldn’t at all be surprised if many of those were caused by type errors. Many people are annoyed by this of course, but it’s not the end of the world.\n\nIf you’re a bank, or a nuclear power plant, or an aircraft navigation system, however, that won’t do. Program crashes are unacceptable.\n\nA statically typed language checks for type inconsistencies at compile-time. Because of this, a whole bunch of errors will be caught in the build pipeline and never end up anywhere near production. There could still be bugs, of course, but many of the common ones related to types will simply never happen. In a way, the compiler verifies that the program is internally consistent.\n\nNow, you could take advantage of the typing module that has been included in the standard library of Python as of version 3.7.3, but that’s kind of a hack to make Python more like a statically typed language. If static typing is what you’re after, you might as well go for the real deal.\n\nFor really mission-critical stuff, you want programming languages like Java, C#, C++ or similar.', 'aiModelVersion': '1'}",0.999
Tony Li,3y,"Do you ever say to yourself ""this is a very clever piece of code"" when you are coding?","I’ve sometimes said that about other people’s code. It’s sometimes a compliment, sometimes damnation.

I try to never write clever code. Clever code is hard to maintain and maintainability is paramount.

I try to write maintainable code. It should be obvious what it’s doing. It’s not doing things inefficiently or stupidly, but it’s also not so clever and cryptic that you can’t grok it quickly.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/ofc0vx8hlyj64k5i', 'title': 'Do you ever say to yourself ""this is a very clever piece of code"" when you are coding?', 'score': {'original': 0.0334, 'ai': 0.9666}, 'blocks': [{'text': 'I’ve sometimes said that about other people’s code. It’s sometimes a compliment, sometimes damnation.\n\nI try to never write clever code. Clever code is hard to maintain and maintainability is paramount.\n\nI try to write maintainable code. It should be obvious what it’s doing. It’s not doing things inefficiently or stupidly, but it’s also not so clever and cryptic that you can’t grok it quickly.', 'result': {'fake': 0.9666, 'real': 0.0334}, 'status': 'success'}], 'credits_used': 1, 'credits': 1983376, 'subscription': 0, 'content': 'I’ve sometimes said that about other people’s code. It’s sometimes a compliment, sometimes damnation.\n\nI try to never write clever code. Clever code is hard to maintain and maintainability is paramount.\n\nI try to write maintainable code. It should be obvious what it’s doing. It’s not doing things inefficiently or stupidly, but it’s also not so clever and cryptic that you can’t grok it quickly.', 'aiModelVersion': '1'}",0.0334
Mattias Petter Johansson,Updated 7y,What is a simple explanation of higher order functions and callbacks in JavaScript?,"Update: This post got so popular that I’ve decided to make it into a series of 10-minute videos that teaches you functional programming in JavaScript. Here is the first episode:

End of announcement, here is the original answer:

var animals = [ 
  { name: 'Waffles',  type: 'dog', age: 12 }, 
  { name: 'Fluffy',   type: 'cat', age: 14 }, 
  { name: 'Spelunky', type: 'dog', age: 4 }, 
  { name: 'Hank',     type: 'dog', age: 11 }, 
]; 
var oldDogs = animals.filter(function(animal) { 
  return animal.age > 10 && animal.type === 'dog'; 
}); 
// oldDogs will now be an array that contain only Waffles and Hank objects. 

filter in the above example is a so-called higher-order function. This is a fancy word for a function that accepts another function as an argument. In the above example, the function (sometimes referred to as the callback) passed to filter will be called once with each item in the animals array as the argument. If the callback returns true, the items makes the cut for the new array that filter is creating, which is what ends up in the oldDogs variable.

I think that JavaScript should get more credit for popularizing higher-order functions - JavaScript was the first mainstream language to include them, and they are incredibly useful.

map is another example of a ridiculously useful higher-order function. Once you learn to use map, your life as a programmer changes. You'll start understanding what all those crazy functional programming buffs think is so great. Here is the same example as above, but with map added:

var animals = [ 
  { name: 'Waffles',  type: 'dog', age: 12 }, 
  { name: 'Fluffy',   type: 'cat', age: 14 }, 
  { name: 'Spelunky', type: 'dog', age: 4 }, 
  { name: 'Hank',     type: 'dog', age: 11 }, 
]; 
var oldDogNames = animals 
  .filter(function(animal) { 
    return animal.age > 10 && animal.type === 'dog'; 
  }) 
  .map(function(animal) { 
    return animal.name; 
  }); 
// oldDogNames will now be the array [ 'Waffles', 'Hank' ]. 

Again, map is a higher-order function just like filter is. Map accepts a callback function, that is called for every item in the array that filter returns in the above example. Map will take every return value from the callback and create a new array with them - in this case, just the names.

Higher order functions really shine with the arrow function
 syntax that was added in EcmaScript 6. Look how gorgeous it becomes once you use them, and use a shorter variable instead of animal:

var oldDogNames = animals 
  .filter((x) => x.age > 10 && x.type === 'dog') 
  .map((x) => x.name); 

Another common functional programming concept that is also implemented on JavaScript arrays is reduce:

var totalDogYears = animals 
  .filter((x) =>  x.type === 'dog') 
  .map((x) => x.age) 
  .reduce((prev, cur) => prev + cur, 0) 
// totalDogYears will be the integer 27 (Waffles 12 +  
// Spelunky 4 + Hank 11) 

(Again, the above example uses the upcoming arrow function
 syntax)

Reduce sounds scary, but it's actually a ridiculously simple function - it just iterates over all values in the array, passing in the value returned from the prior run as the first value (prev in the above example) and the currently iterated value as the second, making ithandy for summing things up like we do a above - the name of the function comes from reducing a list to a single value. For the first iteration, there is no previous value of course, so prev will be the second argument passed to reduce, 0 in the above case.

I hope that I've piqued your interest a bit, there are tons more functions patterns like map and filter in functional programming, so you're in for quite a treat once you start going down this path. Making your programming style more functional will improve you a lot as a programmer.

Oh, and if you like my writing, don't miss out on more of it -
follow me on Quora and Twitter (http://twitter.com/mpjme
)","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/2xzimqnpkd3fhwj8', 'title': 'What is a simple explanation of higher order functions and callbacks in JavaScript?', 'score': {'original': 0.6306, 'ai': 0.3694}, 'blocks': [{'text': ""Update: This post got so popular that I’ve decided to make it into a series of 10-minute videos that teaches you functional programming in JavaScript. Here is the first episode:\n\nEnd of announcement, here is the original answer:\n\nvar animals = [\xa0\n  { name: 'Waffles',  type: 'dog', age: 12 },\xa0\n  { name: 'Fluffy',   type: 'cat', age: 14 },\xa0\n  { name: 'Spelunky', type: 'dog', age: 4 },\xa0\n  { name: 'Hank',     type: 'dog', age: 11 },\xa0\n];\xa0\nvar oldDogs = animals.filter(function(animal) {\xa0\n  return animal.age > 10 && animal.type === 'dog';\xa0\n});\xa0\n// oldDogs will now be an array that contain only Waffles and Hank objects.\xa0\n\nfilter in the above example is a so-called higher-order function. This is a fancy word for a function that accepts another function as an argument. In the above example, the function (sometimes referred to as the callback) passed to filter will be called once with each item in the animals array as the argument. If the callback returns true, the items makes the cut for the new array that filter is creating, which is what ends up in the oldDogs variable.\n\nI think that JavaScript should get more credit for popularizing higher-order functions - JavaScript was the first mainstream language to include them, and they are incredibly useful.\n\nmap is another example of a ridiculously useful higher-order function. Once you learn to use map, your life as a programmer changes. You'll start understanding what all those crazy functional programming buffs think is so great. Here is the same example as above, but with map added:\n\nvar animals = [\xa0\n  { name: 'Waffles',  type: 'dog', age: 12 },\xa0\n  { name: 'Fluffy',   type: 'cat', age: 14 },\xa0\n  { name: 'Spelunky', type: 'dog', age: 4 },\xa0\n  { name: 'Hank',     type: 'dog', age: 11 },\xa0\n];\xa0\nvar oldDogNames = animals\xa0\n  .filter(function(animal) {\xa0\n    return animal.age > 10 && animal.type === 'dog';\xa0\n  })\xa0\n  .map(function(animal) {\xa0\n    return animal.name;\xa0\n  });\xa0\n// oldDogNames will now be the array [ 'Waffles', 'Hank' ].\xa0\n\nAgain, map is a higher-order function just like filter is. Map accepts a callback function, that is called for every item in the array that filter returns in the above example. Map will take every return value from the callback and create a new array with them - in this case, just the names.\n\nHigher order functions really shine with the arrow function\n syntax that was added in EcmaScript 6. Look how gorgeous it becomes once you use them, and use a shorter variable instead of animal:\n\nvar oldDogNames = animals\xa0\n  .filter((x) => x.age > 10 && x.type === 'dog')\xa0\n  .map((x) => x.name);\xa0\n\nAnother common functional programming concept that is also implemented on JavaScript arrays is reduce:\n\nvar totalDogYears = animals\xa0\n  .filter((x) =>  x.type === 'dog')\xa0\n  .map((x) => x.age)\xa0\n  .reduce((prev, cur) => prev + cur, 0)\xa0\n// totalDogYears will be the integer 27 (Waffles 12 + \xa0\n// Spelunky 4 + Hank 11)\xa0\n\n(Again, the above example uses the upcoming arrow function\n syntax)\n\nReduce sounds scary, but it's actually"", 'result': {'fake': 0.0917, 'real': 0.9083}, 'status': 'success'}, {'text': ""a ridiculously simple function - it just iterates over all values in the array, passing in the value returned from the prior run as the first value (prev in the above example) and the currently iterated value as the second, making ithandy for summing things up like we do a above - the name of the function comes from reducing a list to a single value. For the first iteration, there is no previous value of course, so prev will be the second argument passed to reduce, 0 in the above case.\n\nI hope that I've piqued your interest a bit, there are tons more functions patterns like map and filter in functional programming, so you're in for quite a treat once you start going down this path. Making your programming style more functional will improve you a lot as a programmer.\n\nOh, and if you like my writing, don't miss out on more of it -\nfollow me on Quora and Twitter (http://twitter.com/mpjme\n)"", 'result': {'fake': 0.06, 'real': 0.94}, 'status': 'success'}], 'credits_used': 7, 'credits': 1983369, 'subscription': 0, 'content': ""Update: This post got so popular that I’ve decided to make it into a series of 10-minute videos that teaches you functional programming in JavaScript. Here is the first episode:\n\nEnd of announcement, here is the original answer:\n\nvar animals = [\xa0\n  { name: 'Waffles',  type: 'dog', age: 12 },\xa0\n  { name: 'Fluffy',   type: 'cat', age: 14 },\xa0\n  { name: 'Spelunky', type: 'dog', age: 4 },\xa0\n  { name: 'Hank',     type: 'dog', age: 11 },\xa0\n];\xa0\nvar oldDogs = animals.filter(function(animal) {\xa0\n  return animal.age > 10 && animal.type === 'dog';\xa0\n});\xa0\n// oldDogs will now be an array that contain only Waffles and Hank objects.\xa0\n\nfilter in the above example is a so-called higher-order function. This is a fancy word for a function that accepts another function as an argument. In the above example, the function (sometimes referred to as the callback) passed to filter will be called once with each item in the animals array as the argument. If the callback returns true, the items makes the cut for the new array that filter is creating, which is what ends up in the oldDogs variable.\n\nI think that JavaScript should get more credit for popularizing higher-order functions - JavaScript was the first mainstream language to include them, and they are incredibly useful.\n\nmap is another example of a ridiculously useful higher-order function. Once you learn to use map, your life as a programmer changes. You'll start understanding what all those crazy functional programming buffs think is so great. Here is the same example as above, but with map added:\n\nvar animals = [\xa0\n  { name: 'Waffles',  type: 'dog', age: 12 },\xa0\n  { name: 'Fluffy',   type: 'cat', age: 14 },\xa0\n  { name: 'Spelunky', type: 'dog', age: 4 },\xa0\n  { name: 'Hank',     type: 'dog', age: 11 },\xa0\n];\xa0\nvar oldDogNames = animals\xa0\n  .filter(function(animal) {\xa0\n    return animal.age > 10 && animal.type === 'dog';\xa0\n  })\xa0\n  .map(function(animal) {\xa0\n    return animal.name;\xa0\n  });\xa0\n// oldDogNames will now be the array [ 'Waffles', 'Hank' ].\xa0\n\nAgain, map is a higher-order function just like filter is. Map accepts a callback function, that is called for every item in the array that filter returns in the above example. Map will take every return value from the callback and create a new array with them - in this case, just the names.\n\nHigher order functions really shine with the arrow function\n syntax that was added in EcmaScript 6. Look how gorgeous it becomes once you use them, and use a shorter variable instead of animal:\n\nvar oldDogNames = animals\xa0\n  .filter((x) => x.age > 10 && x.type === 'dog')\xa0\n  .map((x) => x.name);\xa0\n\nAnother common functional programming concept that is also implemented on JavaScript arrays is reduce:\n\nvar totalDogYears = animals\xa0\n  .filter((x) =>  x.type === 'dog')\xa0\n  .map((x) => x.age)\xa0\n  .reduce((prev, cur) => prev + cur, 0)\xa0\n// totalDogYears will be the integer 27 (Waffles 12 + \xa0\n// Spelunky 4 + Hank 11)\xa0\n\n(Again, the above example uses the upcoming arrow function\n syntax)\n\nReduce sounds scary, but it's actually a ridiculously simple function - it just iterates over all values in the array, passing in the value returned from the prior run as the first value (prev in the above example) and the currently iterated value as the second, making ithandy for summing things up like we do a above - the name of the function comes from reducing a list to a single value. For the first iteration, there is no previous value of course, so prev will be the second argument passed to reduce, 0 in the above case.\n\nI hope that I've piqued your interest a bit, there are tons more functions patterns like map and filter in functional programming, so you're in for quite a treat once you start going down this path. Making your programming style more functional will improve you a lot as a programmer.\n\nOh, and if you like my writing, don't miss out on more of it -\nfollow me on Quora and Twitter (http://twitter.com/mpjme\n)"", 'aiModelVersion': '1'}",0.6306
Kavita,7mo,"Which is better Learnbay, Simplilearn, Coursera, or UpGrad for learning Full-Stack software Development Course?","It can be identified by evaluating certain parameters of these institutes.

Course duration
Course features
Job assistance program

Let’s discuss the Full-Stack Software Development courses of:

Simplilearn (Full Stack Java Developer)- This course offers training on different tools and technologies related to software development. They have trained industry professionals to educate students about the latest developments in the industry through real-time projects.
Course duration and fees - 11 months; 85,000 INR.
Coursera (IBM Full Stack Software Developer)- This is a developer-based course designed for beginners where you can learn about different tools like cloud computing, IBM Cloud, Computer Programming, Web Development, JavaScript, and Software Engineering to name a few.
Course duration and fees - 3-6 months and you can audit the course for free of cost within one month of free enrollment. If you want to have access to it more than that, you have to pay a fee.
Learnbay (Full Stack Software Master Program)- This program is designed for working professionals who are interested in improving their skills and learning from top industry professionals. The course will add great value to your resume once completed, due to its structure or modules.
Course duration and fees - 9 (for a weekday batch) and 11 months (for a weekend batch); 70,000 INR.
UpGrad (Full Stack software development boot camp)- This is a Bootcamp that allows students to work with the latest technologies or tools. Plus, the course offers a free demo where students will get an overview of the entire session.
Course duration and fees - 6 months; 60,000 INR.

Now let’s compare the parameters:

Course features

This course is an online Bootcamp where students can study the entire program from the comfort of their homes.
They offer industry-relevant curricula by top professionals so that you can be job-ready by the end of the program.
Job assistance program
They offer a 44% average salary hike to students post-program completion.
They have 200+ hiring partners.
They conduct interview preparation sessions with the students.
They have 100+ hours of live interaction, 20+ tests or assessments, and other projects. However, the total number of real-time projects is few which can limit your understanding of software development implementations.
In this program, you will learn about the basics and advances in modern industry guided by industry experts.
They have flexible course timings which you can choose according to your preference.
They offer course completion certificates from IBM and Microsoft, which will enable you to stand out from the mass. Having certifications from some of the top companies can be highly beneficial for your career.
They offer domain specialization, which includes domains like MERN Stack and Product Management. Domain specialization is usually offered by top institutes worldwide as it has massive importance on topic understanding.
Job assistance program
They offer career service pro, which is an advanced tool to assist you with assured career opportunities.
It has unlimited interview calls, 1:1 doubt-clearing sessions, 6 mock interviews, and career assistance for 3 years.
They have 650+ hiring partners.
They offer multiple real-time projects and assignments to improve your practical understanding of this subject. Doing more projects will open up many opportunities in the future. Some of the projects include:
Developing an intuitive and efficient API for BookMyShow that offers user authentication, comprehensive movie/show listings, and more.
Designing an Airbnb, which allows multiple users to view the same property concurrently for a specific date range.
They offer 100-plus hours of training from top product company professionals in industry-relevant topics.
They also provide an immersive learning platform where you will get training on developing reports on strengths and weaknesses in tech skills.
Job assistance program
They offer a 44% average salary hike.
Career guidance is offered in the course.

They offer 20 projects on the subject, but they do not have one-to-one doubt resolution sessions to solve your queries.

The course duration is really less making it easy for people to learn within a short period of time.
A completely online mode of training leads working professionals to balance their work and study.
You will have industry professionals from IBM, teaching you the course, but it is pre-recorded. This course does not offer live class training.

Conclusion

As you can see from the above discussion, the course features and job assistance program for each course have been mentioned. You can select your favorite courses which meet your demands and needs.

Hope that helps!","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/n6d9m2y8bgwhjz4x', 'title': 'Which is better Learnbay, Simplilearn, Coursera, or UpGrad for learning Full-Stack software Development Course?', 'score': {'original': 0.54825, 'ai': 0.45175}, 'blocks': [{'text': 'It can be identified by evaluating certain parameters of these institutes.\n\nCourse duration\nCourse features\nJob assistance program\n\nLet’s discuss the Full-Stack Software Development courses of:\n\nSimplilearn (Full Stack Java Developer)- This course offers training on different tools and technologies related to software development. They have trained industry professionals to educate students about the latest developments in the industry through real-time projects.\nCourse duration and fees - 11 months; 85,000 INR.\nCoursera (IBM Full Stack Software Developer)- This is a developer-based course designed for beginners where you can learn about different tools like cloud computing, IBM Cloud, Computer Programming, Web Development, JavaScript, and Software Engineering to name a few.\nCourse duration and fees - 3-6 months and you can audit the course for free of cost within one month of free enrollment. If you want to have access to it more than that, you have to pay a fee.\nLearnbay (Full Stack Software Master Program)- This program is designed for working professionals who are interested in improving their skills and learning from top industry professionals. The course will add great value to your resume once completed, due to its structure or modules.\nCourse duration and fees - 9 (for a weekday batch) and 11 months (for a weekend batch); 70,000 INR.\nUpGrad (Full Stack software development boot camp)- This is a Bootcamp that allows students to work with the latest technologies or tools. Plus, the course offers a free demo where students will get an overview of the entire session.\nCourse duration and fees - 6 months; 60,000 INR.\n\nNow let’s compare the parameters:\n\nCourse features\n\nThis course is an online Bootcamp where students can study the entire program from the comfort of their homes.\nThey offer industry-relevant curricula by top professionals so that you can be job-ready by the end of the program.\nJob assistance program\nThey offer a 44% average salary hike to students post-program completion.\nThey have 200+ hiring partners.\nThey conduct interview preparation sessions with the students.\nThey have 100+ hours of live interaction, 20+ tests or assessments, and other projects. However, the total number of real-time projects is few which can limit your understanding of software development implementations.\nIn this program, you will learn about the basics and advances in modern industry guided by industry experts.\nThey have flexible course timings which you can choose according to your preference.\nThey offer course completion certificates from IBM and Microsoft, which will enable you to stand out from the mass. Having certifications from some of the top companies can be highly beneficial for your career.\nThey offer domain specialization, which includes domains like MERN Stack and Product Management. Domain specialization is usually offered by top institutes worldwide as it has massive importance on topic understanding.\nJob assistance program\nThey offer career service pro, which is an advanced tool to assist you with assured career opportunities.\nIt has unlimited interview calls, 1:1 doubt-clearing sessions, 6 mock interviews, and career assistance for 3 years.\nThey have 650+ hiring partners.\nThey offer multiple real-time projects and assignments to improve your practical understanding of this subject. Doing more projects will open up many opportunities in the future. Some of the projects include:\nDeveloping an intuitive and efficient API for BookMyShow that offers user authentication,', 'result': {'fake': 0.0623, 'real': 0.9377}, 'status': 'success'}, {'text': 'comprehensive movie/show listings, and more.\nDesigning an Airbnb, which allows multiple users to view the same property concurrently for a specific date range.\nThey offer 100-plus hours of training from top product company professionals in industry-relevant topics.\nThey also provide an immersive learning platform where you will get training on developing reports on strengths and weaknesses in tech skills.\nJob assistance program\nThey offer a 44% average salary hike.\nCareer guidance is offered in the course.\n\nThey offer 20 projects on the subject, but they do not have one-to-one doubt resolution sessions to solve your queries.\n\nThe course duration is really less making it easy for people to learn within a short period of time.\nA completely online mode of training leads working professionals to balance their work and study.\nYou will have industry professionals from IBM, teaching you the course, but it is pre-recorded. This course does not offer live class training.\n\nConclusion\n\nAs you can see from the above discussion, the course features and job assistance program for each course have been mentioned. You can select your favorite courses which meet your demands and needs.\n\nHope that helps!', 'result': {'fake': 0.9942, 'real': 0.0058}, 'status': 'success'}], 'credits_used': 8, 'credits': 1983361, 'subscription': 0, 'content': 'It can be identified by evaluating certain parameters of these institutes.\n\nCourse duration\nCourse features\nJob assistance program\n\nLet’s discuss the Full-Stack Software Development courses of:\n\nSimplilearn (Full Stack Java Developer)- This course offers training on different tools and technologies related to software development. They have trained industry professionals to educate students about the latest developments in the industry through real-time projects.\nCourse duration and fees - 11 months; 85,000 INR.\nCoursera (IBM Full Stack Software Developer)- This is a developer-based course designed for beginners where you can learn about different tools like cloud computing, IBM Cloud, Computer Programming, Web Development, JavaScript, and Software Engineering to name a few.\nCourse duration and fees - 3-6 months and you can audit the course for free of cost within one month of free enrollment. If you want to have access to it more than that, you have to pay a fee.\nLearnbay (Full Stack Software Master Program)- This program is designed for working professionals who are interested in improving their skills and learning from top industry professionals. The course will add great value to your resume once completed, due to its structure or modules.\nCourse duration and fees - 9 (for a weekday batch) and 11 months (for a weekend batch); 70,000 INR.\nUpGrad (Full Stack software development boot camp)- This is a Bootcamp that allows students to work with the latest technologies or tools. Plus, the course offers a free demo where students will get an overview of the entire session.\nCourse duration and fees - 6 months; 60,000 INR.\n\nNow let’s compare the parameters:\n\nCourse features\n\nThis course is an online Bootcamp where students can study the entire program from the comfort of their homes.\nThey offer industry-relevant curricula by top professionals so that you can be job-ready by the end of the program.\nJob assistance program\nThey offer a 44% average salary hike to students post-program completion.\nThey have 200+ hiring partners.\nThey conduct interview preparation sessions with the students.\nThey have 100+ hours of live interaction, 20+ tests or assessments, and other projects. However, the total number of real-time projects is few which can limit your understanding of software development implementations.\nIn this program, you will learn about the basics and advances in modern industry guided by industry experts.\nThey have flexible course timings which you can choose according to your preference.\nThey offer course completion certificates from IBM and Microsoft, which will enable you to stand out from the mass. Having certifications from some of the top companies can be highly beneficial for your career.\nThey offer domain specialization, which includes domains like MERN Stack and Product Management. Domain specialization is usually offered by top institutes worldwide as it has massive importance on topic understanding.\nJob assistance program\nThey offer career service pro, which is an advanced tool to assist you with assured career opportunities.\nIt has unlimited interview calls, 1:1 doubt-clearing sessions, 6 mock interviews, and career assistance for 3 years.\nThey have 650+ hiring partners.\nThey offer multiple real-time projects and assignments to improve your practical understanding of this subject. Doing more projects will open up many opportunities in the future. Some of the projects include:\nDeveloping an intuitive and efficient API for BookMyShow that offers user authentication, comprehensive movie/show listings, and more.\nDesigning an Airbnb, which allows multiple users to view the same property concurrently for a specific date range.\nThey offer 100-plus hours of training from top product company professionals in industry-relevant topics.\nThey also provide an immersive learning platform where you will get training on developing reports on strengths and weaknesses in tech skills.\nJob assistance program\nThey offer a 44% average salary hike.\nCareer guidance is offered in the course.\n\nThey offer 20 projects on the subject, but they do not have one-to-one doubt resolution sessions to solve your queries.\n\nThe course duration is really less making it easy for people to learn within a short period of time.\nA completely online mode of training leads working professionals to balance their work and study.\nYou will have industry professionals from IBM, teaching you the course, but it is pre-recorded. This course does not offer live class training.\n\nConclusion\n\nAs you can see from the above discussion, the course features and job assistance program for each course have been mentioned. You can select your favorite courses which meet your demands and needs.\n\nHope that helps!', 'aiModelVersion': '1'}",0.54825
Ben Podgursky,4y,"As a front-end developer, I always feel that my technical skills are weaker than back-end developers, and I am nervous to talk with them and think they would look down upon me. What should I do to get rid of this feeling?","I have spent time on both sides of this stupidest of holy wars (albeit, far more on the backend), so I will settle this once and for all with a graph of my progress:

(these curves may be exaggerated — but not by much)

Front end development is cursed, because getting a Hello World example running — going from 0 to 1
 — is so, so, so mindlessly easy. The first website I wrote (I mean, back in middle school or whatever, don’t judge me) looked something like this:

Hello world! It just works!

“Whew”, I thought, “Now that I have it working, the rest is just a bit of fiddling with the style and JavaScript, that’s not going to be so bad”

This is not what backend development looks like.

Backend developers (and while I recognize it’s ridiculous to lump all “backend developers” into the same bucket, I’m going to do it anyway for convenience) are used to spending a huge percent of their effort getting to the point of “it turns on!” Setting up a back-end service may involve one or all of:

Setting up a database
Setting up tables on the database
Setting up a server, Kubernetes cluster, or similar
Setting up ingress, load balancing and other connective tissue
Attaching your service to a service-discovery framework
etc etc etc

To get from 0 to 1 for a backend service, you need to understand a lot of moving parts. Just getting all those pieces wired together, to the point of serving your first request, is a huge percent of the effort. You need to learn a whole tech stack before it runs.

Once you have that Hello World service working — well, you’re done with all the heavy lifting. Now it’s just a bit of business logic, and you’re home free! (look, I know this is wildly exaggerated, but the principle holds).

When those backend developers need to create a simple web UI for their backend service — which happens pretty frequently — they take a bit of html, css, and jquery, spit out a Hello World UI like I did, and think:

“Wow, getting that running was pretty easy. I just need a couple more pages. Front end work is simple after all!”

This is, of course, wildly wrong. What they did for their simple service cannot possibly scale to a full, rich, dynamic website. To actually turn their simple dopey webapp into a real webapp, they’re going to have to learn a whole new stack. To work on the webapp we’re building right now, I had to learn:

React.js
Redux
Immer
Webpack
Yarn
So much that I’m sure I’m forgetting

Did we need this to get a simple website running? No, of course not. Did we need it in order to build a finished, polished website that isn’t embarrassing? Yes, absolutely.

Learning those technologies is where the real battle starts. Once a developer has spent a few weeks — or months — really wrapping their head around how a React app interacts with a REST API, nobody with their head outside their a** would talk down to a skilled front-end dev.

Front-end development is just as hard as back-end development. It’s a different skill set, and one that you don’t appreciate until you actually have to produce a production website. Don’t let anyone try to tell you otherwise.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/rts8vhgocedwy3pk', 'title': 'As a front-end developer, I always feel that my technical skills are weaker than back-end developers, and I am nervous to talk with them and think they would look down upon me. What should I do to get rid of this feeling?', 'score': {'original': 0.4731, 'ai': 0.5269}, 'blocks': [{'text': 'I have spent time on both sides of this stupidest of holy wars (albeit, far more on the backend), so I will settle this once and for all with a graph of my progress:\n\n(these curves may be exaggerated — but not by much)\n\nFront end development is cursed, because getting a Hello World example running — going from 0 to 1\n — is so, so, so mindlessly easy. The first website I wrote (I mean, back in middle school or whatever, don’t judge me) looked something like this:\n\nHello world! It just works!\n\n“Whew”, I thought, “Now that I have it working, the rest is just a bit of fiddling with the style and JavaScript, that’s not going to be so bad”\n\nThis is not what backend development looks like.\n\nBackend developers (and while I recognize it’s ridiculous to lump all “backend developers” into the same bucket, I’m going to do it anyway for convenience) are used to spending a huge percent of their effort getting to the point of “it turns on!” Setting up a back-end service may involve one or all of:\n\nSetting up a database\nSetting up tables on the database\nSetting up a server, Kubernetes cluster, or similar\nSetting up ingress, load balancing and other connective tissue\nAttaching your service to a service-discovery framework\netc etc etc\n\nTo get from 0 to 1 for a backend service, you need to understand a lot of moving parts. Just getting all those pieces wired together, to the point of serving your first request, is a huge percent of the effort. You need to learn a whole tech stack before it runs.\n\nOnce you have that Hello World service working — well, you’re done with all the heavy lifting. Now it’s just a bit of business logic, and you’re home free! (look, I know this is wildly exaggerated, but the principle holds).\n\nWhen those backend developers need to create a simple web UI for their backend service — which happens pretty frequently — they take a bit of html, css, and jquery, spit out a Hello World UI like I did, and think:\n\n“Wow, getting that running was pretty easy. I just need a couple more pages. Front end work is simple after all!”\n\nThis is, of course, wildly wrong. What they did for their simple service cannot possibly scale to a full, rich, dynamic website. To actually turn their simple dopey webapp into a real webapp, they’re going to have to learn a whole new stack. To work on the webapp we’re building right now, I had to learn:\n\nReact.js\nRedux\nImmer\nWebpack\nYarn\nSo much that I’m sure I’m forgetting\n\nDid we need this to get a simple website running? No, of course not. Did we need it in order to build a finished, polished website that isn’t embarrassing? Yes, absolutely.\n\nLearning those technologies is where the real battle starts. Once a developer has spent a few weeks — or months — really wrapping their head around how a React app interacts with a REST API, nobody with their head outside their a** would talk down to a skilled front-end dev.\n\nFront-end development is just as hard as back-end development. It’s a different skill', 'result': {'fake': 0.0149, 'real': 0.9851}, 'status': 'success'}, {'text': 'set, and one that you don’t appreciate until you actually have to produce a production website. Don’t let anyone try to tell you otherwise.', 'result': {'fake': 0.9993, 'real': 0.0007}, 'status': 'success'}], 'credits_used': 6, 'credits': 1983355, 'subscription': 0, 'content': 'I have spent time on both sides of this stupidest of holy wars (albeit, far more on the backend), so I will settle this once and for all with a graph of my progress:\n\n(these curves may be exaggerated — but not by much)\n\nFront end development is cursed, because getting a Hello World example running — going from 0 to 1\n — is so, so, so mindlessly easy. The first website I wrote (I mean, back in middle school or whatever, don’t judge me) looked something like this:\n\nHello world! It just works!\n\n“Whew”, I thought, “Now that I have it working, the rest is just a bit of fiddling with the style and JavaScript, that’s not going to be so bad”\n\nThis is not what backend development looks like.\n\nBackend developers (and while I recognize it’s ridiculous to lump all “backend developers” into the same bucket, I’m going to do it anyway for convenience) are used to spending a huge percent of their effort getting to the point of “it turns on!” Setting up a back-end service may involve one or all of:\n\nSetting up a database\nSetting up tables on the database\nSetting up a server, Kubernetes cluster, or similar\nSetting up ingress, load balancing and other connective tissue\nAttaching your service to a service-discovery framework\netc etc etc\n\nTo get from 0 to 1 for a backend service, you need to understand a lot of moving parts. Just getting all those pieces wired together, to the point of serving your first request, is a huge percent of the effort. You need to learn a whole tech stack before it runs.\n\nOnce you have that Hello World service working — well, you’re done with all the heavy lifting. Now it’s just a bit of business logic, and you’re home free! (look, I know this is wildly exaggerated, but the principle holds).\n\nWhen those backend developers need to create a simple web UI for their backend service — which happens pretty frequently — they take a bit of html, css, and jquery, spit out a Hello World UI like I did, and think:\n\n“Wow, getting that running was pretty easy. I just need a couple more pages. Front end work is simple after all!”\n\nThis is, of course, wildly wrong. What they did for their simple service cannot possibly scale to a full, rich, dynamic website. To actually turn their simple dopey webapp into a real webapp, they’re going to have to learn a whole new stack. To work on the webapp we’re building right now, I had to learn:\n\nReact.js\nRedux\nImmer\nWebpack\nYarn\nSo much that I’m sure I’m forgetting\n\nDid we need this to get a simple website running? No, of course not. Did we need it in order to build a finished, polished website that isn’t embarrassing? Yes, absolutely.\n\nLearning those technologies is where the real battle starts. Once a developer has spent a few weeks — or months — really wrapping their head around how a React app interacts with a REST API, nobody with their head outside their a** would talk down to a skilled front-end dev.\n\nFront-end development is just as hard as back-end development. It’s a different skill set, and one that you don’t appreciate until you actually have to produce a production website. Don’t let anyone try to tell you otherwise.', 'aiModelVersion': '1'}",0.4731
Neha Ahuja,4y,What are the coolest projects you have made using Django?,"I built a bookstore using Django:

Its an e-commerce store, although not fully functional it has the ability to add a new book with the cover image, book title, author name.

It also has a detail page which displays details of each specific book.

Meaning, you can add a book, delete a book, view a book and update the book as well.

This means that it covers all the basics CRUD, CREATE,READ, UPDATE & DELETE operations which are fundamental to any web application.

Once you learn how to perform these, half of the things are done and you can pretty much build any sort of web application.

Technologies used:

Back end: Django and SQLite

Image server: Local

Front end: HTML, CSS & Bootstrap 3

Django was one of my first backend framework which I learned.

Prior to this I had no previous experience learning anything related to server side web development and hence it took me a while to understand terminologies like authentication, URL routing, API and models.

To be honest it was tough, took me about 2 weeks of continuous learning to get the basics right and a lot of self study and practice to make the project, but I was very happy on completion.

I still continue to learn Django to this day and now I learn more important concepts like Authentication and Authorisation.

To know more about my journey about learning Python you may refer to this answer: Neha Ahuja's answer to How should I start learning Python?","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/ohm3fj1027erl6np', 'title': 'What are the coolest projects you have made using Django?', 'score': {'original': 0.999, 'ai': 0.001}, 'blocks': [{'text': ""I built a bookstore using Django:\n\nIts an e-commerce store, although not fully functional it has the ability to add a new book with the cover image, book title, author name.\n\nIt also has a detail page which displays details of each specific book.\n\nMeaning, you can add a book, delete a book, view a book and update the book as well.\n\nThis means that it covers all the basics CRUD, CREATE,READ, UPDATE & DELETE operations which are fundamental to any web application.\n\nOnce you learn how to perform these, half of the things are done and you can pretty much build any sort of web application.\n\nTechnologies used:\n\nBack end: Django and SQLite\n\nImage server: Local\n\nFront end: HTML, CSS & Bootstrap 3\n\nDjango was one of my first backend framework which I learned.\n\nPrior to this I had no previous experience learning anything related to server side web development and hence it took me a while to understand terminologies like authentication, URL routing, API and models.\n\nTo be honest it was tough, took me about 2 weeks of continuous learning to get the basics right and a lot of self study and practice to make the project, but I was very happy on completion.\n\nI still continue to learn Django to this day and now I learn more important concepts like Authentication and Authorisation.\n\nTo know more about my journey about learning Python you may refer to this answer: Neha Ahuja's answer to How should I start learning Python?"", 'result': {'fake': 0.0012, 'real': 0.9988}, 'status': 'success'}], 'credits_used': 3, 'credits': 1983352, 'subscription': 0, 'content': ""I built a bookstore using Django:\n\nIts an e-commerce store, although not fully functional it has the ability to add a new book with the cover image, book title, author name.\n\nIt also has a detail page which displays details of each specific book.\n\nMeaning, you can add a book, delete a book, view a book and update the book as well.\n\nThis means that it covers all the basics CRUD, CREATE,READ, UPDATE & DELETE operations which are fundamental to any web application.\n\nOnce you learn how to perform these, half of the things are done and you can pretty much build any sort of web application.\n\nTechnologies used:\n\nBack end: Django and SQLite\n\nImage server: Local\n\nFront end: HTML, CSS & Bootstrap 3\n\nDjango was one of my first backend framework which I learned.\n\nPrior to this I had no previous experience learning anything related to server side web development and hence it took me a while to understand terminologies like authentication, URL routing, API and models.\n\nTo be honest it was tough, took me about 2 weeks of continuous learning to get the basics right and a lot of self study and practice to make the project, but I was very happy on completion.\n\nI still continue to learn Django to this day and now I learn more important concepts like Authentication and Authorisation.\n\nTo know more about my journey about learning Python you may refer to this answer: Neha Ahuja's answer to How should I start learning Python?"", 'aiModelVersion': '1'}",0.999
Matthew Cornelisse,2y,How do I reverse or stop the JS timer on my study portal to submit my assignment after time expired? How do I do that from my end (user-end)?,"This reminds me of the time in grade 10 I was convinced my computer teacher was not reading my assignments and just giving an A because she knew I new what I was doing.

So I did a whole bunch of research on what letters where usually used at beginning and end of words. How often vowels showed up in words. How often word lengths came up and how many words where generally in a sentence/paragraph and wrote a program that generated assignment answers that at a quick glance looked legit but if you actually read it, it was gibberish. Took me way longer then the actual assignment. Still got an A.

Any smart test system will be doing the timing server side with a client side display. You can likely easily hack the client side display but this won't do anything useful. The server side data is out of your reach. The only hack you may be able to do is if they didn't escape your inputs try to inject sql commands in to your answer that alters the database. Likely more work then the original assignment.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/fgt84pilovhxsn5k', 'title': 'How do I reverse or stop the JS timer on my study portal to submit my assignment after time expired? How do I do that from my end (user-end)?', 'score': {'original': 0.9997, 'ai': 0.0003}, 'blocks': [{'text': ""This reminds me of the time in grade 10 I was convinced my computer teacher was not reading my assignments and just giving an A because she knew I new what I was doing.\n\nSo I did a whole bunch of research on what letters where usually used at beginning and end of words. How often vowels showed up in words. How often word lengths came up and how many words where generally in a sentence/paragraph and wrote a program that generated assignment answers that at a quick glance looked legit but if you actually read it, it was gibberish. Took me way longer then the actual assignment. Still got an A.\n\nAny smart test system will be doing the timing server side with a client side display. You can likely easily hack the client side display but this won't do anything useful. The server side data is out of your reach. The only hack you may be able to do is if they didn't escape your inputs try to inject sql commands in to your answer that alters the database. Likely more work then the original assignment."", 'result': {'fake': 0.0003, 'real': 0.9997}, 'status': 'success'}], 'credits_used': 2, 'credits': 1983350, 'subscription': 0, 'content': ""This reminds me of the time in grade 10 I was convinced my computer teacher was not reading my assignments and just giving an A because she knew I new what I was doing.\n\nSo I did a whole bunch of research on what letters where usually used at beginning and end of words. How often vowels showed up in words. How often word lengths came up and how many words where generally in a sentence/paragraph and wrote a program that generated assignment answers that at a quick glance looked legit but if you actually read it, it was gibberish. Took me way longer then the actual assignment. Still got an A.\n\nAny smart test system will be doing the timing server side with a client side display. You can likely easily hack the client side display but this won't do anything useful. The server side data is out of your reach. The only hack you may be able to do is if they didn't escape your inputs try to inject sql commands in to your answer that alters the database. Likely more work then the original assignment."", 'aiModelVersion': '1'}",0.9997
Dennis Kao,Updated 2y,What is the most dramatic speedup you've had in a piece of code from a simple change?,"A really easy but non-obvious way to write slow Python code is through string concatenation. Believe it or not, this is a n^2 operation:

upperStr = """" 
 
for c in ""big string"": 
	upperStr += c.upper() 

The problem here is that strings in Python are immutable. With each iteration, a new buffer is created and characters from the 2 strings are copied into it.

But you probably won’t even encounter this being a performance bottleneck if the input is small. Furthermore, you’d want to just do “big string”.upper() instead of applying upper() to each character in a string.

This was a really exceptional scenario because characters were being streamed individually into the script. And, the input string in question was the human genome - a 3 billion character long string.

Dawg.

This is hilarious as it is one of the few realistic, extreme cases where Python string concatenation really screws you over. I was working as an intern in a bioinformatics lab when another intern asked me to help debug his code.

By switching over to a mutable data structure, we reduced run-time from 4 hours to single digit minutes:

upperStrChars = [] 
 
for c in ""big string"": 
	upperStrChars.append(c.upper()) 
 
return ''.join(upperStrChars) ","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/ymuzoe739xhk8f60', 'title': ""What is the most dramatic speedup you've had in a piece of code from a simple change?"", 'score': {'original': 0.9983, 'ai': 0.0017}, 'blocks': [{'text': 'A really easy but non-obvious way to write slow Python code is through string concatenation. Believe it or not, this is a n^2 operation:\n\nupperStr = """"\xa0\n\xa0\nfor c in ""big string"":\xa0\n\tupperStr += c.upper()\xa0\n\nThe problem here is that strings in Python are immutable. With each iteration, a new buffer is created and characters from the 2 strings are copied into it.\n\nBut you probably won’t even encounter this being a performance bottleneck if the input is small. Furthermore, you’d want to just do “big string”.upper() instead of applying upper() to each character in a string.\n\nThis was a really exceptional scenario because characters were being streamed individually into the script. And, the input string in question was the human genome - a 3 billion character long string.\n\nDawg.\n\nThis is hilarious as it is one of the few realistic, extreme cases where Python string concatenation really screws you over. I was working as an intern in a bioinformatics lab when another intern asked me to help debug his code.\n\nBy switching over to a mutable data structure, we reduced run-time from 4 hours to single digit minutes:\n\nupperStrChars = []\xa0\n\xa0\nfor c in ""big string"":\xa0\n\tupperStrChars.append(c.upper())\xa0\n\xa0\nreturn \'\'.join(upperStrChars)\xa0', 'result': {'fake': 0.0016, 'real': 0.9984}, 'status': 'success'}], 'credits_used': 3, 'credits': 1983347, 'subscription': 0, 'content': 'A really easy but non-obvious way to write slow Python code is through string concatenation. Believe it or not, this is a n^2 operation:\n\nupperStr = """"\xa0\n\xa0\nfor c in ""big string"":\xa0\n\tupperStr += c.upper()\xa0\n\nThe problem here is that strings in Python are immutable. With each iteration, a new buffer is created and characters from the 2 strings are copied into it.\n\nBut you probably won’t even encounter this being a performance bottleneck if the input is small. Furthermore, you’d want to just do “big string”.upper() instead of applying upper() to each character in a string.\n\nThis was a really exceptional scenario because characters were being streamed individually into the script. And, the input string in question was the human genome - a 3 billion character long string.\n\nDawg.\n\nThis is hilarious as it is one of the few realistic, extreme cases where Python string concatenation really screws you over. I was working as an intern in a bioinformatics lab when another intern asked me to help debug his code.\n\nBy switching over to a mutable data structure, we reduced run-time from 4 hours to single digit minutes:\n\nupperStrChars = []\xa0\n\xa0\nfor c in ""big string"":\xa0\n\tupperStrChars.append(c.upper())\xa0\n\xa0\nreturn \'\'.join(upperStrChars)\xa0', 'aiModelVersion': '1'}",0.9983
William Ting,11y,"How can some really large services (like Dropbox) afford to use Python as a primary language, if it's one to two orders of magnitude slower than other, compiled languages?","Python is magnitudes slower than compiled languages, but this only matters for CPU bound applications.

Dropbox is disk and network bound. As a result, using a compiled language would not speed up Dropbox as most of the time is spent reading / writing data rather than computing data.

The primary advantage of interpreted languages is development speed. This is why most websites are developed in interpreted languages; coders benefit from the advantages while the negatives are marginalized.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/a6pvtnme1rdylsuj', 'title': ""How can some really large services (like Dropbox) afford to use Python as a primary language, if it's one to two orders of magnitude slower than other, compiled languages?"", 'score': {'original': 0.9891, 'ai': 0.0109}, 'blocks': [{'text': 'Python is magnitudes slower than compiled languages, but this only matters for CPU bound applications.\n\nDropbox is disk and network bound. As a result, using a compiled language would not speed up Dropbox as most of the time is spent reading / writing data rather than computing data.\n\nThe primary advantage of interpreted languages is development speed. This is why most websites are developed in interpreted languages; coders benefit from the advantages while the negatives are marginalized.', 'result': {'fake': 0.0109, 'real': 0.9891}, 'status': 'success'}], 'credits_used': 1, 'credits': 1983346, 'subscription': 0, 'content': 'Python is magnitudes slower than compiled languages, but this only matters for CPU bound applications.\n\nDropbox is disk and network bound. As a result, using a compiled language would not speed up Dropbox as most of the time is spent reading / writing data rather than computing data.\n\nThe primary advantage of interpreted languages is development speed. This is why most websites are developed in interpreted languages; coders benefit from the advantages while the negatives are marginalized.', 'aiModelVersion': '1'}",0.9891
Chandan VK,Updated 4y,How can I improve myself in 6 months?,"When I was in Gym, I was thinking about office pending work.

When I was in office, I was thinking about how can I perform more in gym.

On Monday I was waiting for Sunday,.

On Sunday I was cursing Monday.

My heart was is in my home when I was in office and my mind was in office when I was in home.

My mind and body was never at the same place and I am pretty sure that I am not the only one who is suffering this weird problem.

Now coming to your question

How can I improve myself in 6 months?

If you keep on thinking like this you will never improve yourself in those six months.

Its not about asking the question its about asking the right question.

Start asking like ‘how can I utilize this particular moment so that it will help to improve myself in 6 months?'

Makes sense, right?

One step at a time. One stone at a time. Make sure that both your body and brain are at the same place.

When you are in gym, make every rep count for you.

When you are in office, work with a laser focus, so that you can finish the work before the dead line.

When you are home, make sure that your brain thinks about your family and not about your office burden.

On weekends, enjoy the weekends. Don’t allow your office deadlines spoil your weekend.

Embrace the ‘NOW'.

Don’t allow negative thoughts to control you. Rather, you control them. Practice the art of being in the present.

Being omnipresent is difficult but being present is possible.

Try this for six months and thank me on 26th September 2019. i.e. six months starting from today

Yesterday's the past, tomorrow's the future, but today is a gift. That's why it's called the present.

Learning Out Loud

Chandu the heARTIST

Feel free to reach me. Ready to help anyone: chandutheheartist","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/q89rkfl6apub1z0j', 'title': 'How can I improve myself in 6 months?', 'score': {'original': 0.9997, 'ai': 0.0003}, 'blocks': [{'text': ""When I was in Gym, I was thinking about office pending work.\n\nWhen I was in office, I was thinking about how can I perform more in gym.\n\nOn Monday I was waiting for Sunday,.\n\nOn Sunday I was cursing Monday.\n\nMy heart was is in my home when I was in office and my mind was in office when I was in home.\n\nMy mind and body was never at the same place and I am pretty sure that I am not the only one who is suffering this weird problem.\n\nNow coming to your question\n\nHow can I improve myself in 6 months?\n\nIf you keep on thinking like this you will never improve yourself in those six months.\n\nIts not about asking the question its about asking the right question.\n\nStart asking like ‘how can I utilize this particular moment so that it will help to improve myself in 6 months?'\n\nMakes sense, right?\n\nOne step at a time. One stone at a time. Make sure that both your body and brain are at the same place.\n\nWhen you are in gym, make every rep count for you.\n\nWhen you are in office, work with a laser focus, so that you can finish the work before the dead line.\n\nWhen you are home, make sure that your brain thinks about your family and not about your office burden.\n\nOn weekends, enjoy the weekends. Don’t allow your office deadlines spoil your weekend.\n\nEmbrace the ‘NOW'.\n\nDon’t allow negative thoughts to control you. Rather, you control them. Practice the art of being in the present.\n\nBeing omnipresent is difficult but being present is possible.\n\nTry this for six months and thank me on 26th September 2019. i.e. six months starting from today\n\nYesterday's the past, tomorrow's the future, but today is a gift. That's why it's called the present.\n\nLearning Out Loud\n\nChandu the heARTIST\n\nFeel free to reach me. Ready to help anyone: chandutheheartist"", 'result': {'fake': 0.0003, 'real': 0.9997}, 'status': 'success'}], 'credits_used': 4, 'credits': 1983342, 'subscription': 0, 'content': ""When I was in Gym, I was thinking about office pending work.\n\nWhen I was in office, I was thinking about how can I perform more in gym.\n\nOn Monday I was waiting for Sunday,.\n\nOn Sunday I was cursing Monday.\n\nMy heart was is in my home when I was in office and my mind was in office when I was in home.\n\nMy mind and body was never at the same place and I am pretty sure that I am not the only one who is suffering this weird problem.\n\nNow coming to your question\n\nHow can I improve myself in 6 months?\n\nIf you keep on thinking like this you will never improve yourself in those six months.\n\nIts not about asking the question its about asking the right question.\n\nStart asking like ‘how can I utilize this particular moment so that it will help to improve myself in 6 months?'\n\nMakes sense, right?\n\nOne step at a time. One stone at a time. Make sure that both your body and brain are at the same place.\n\nWhen you are in gym, make every rep count for you.\n\nWhen you are in office, work with a laser focus, so that you can finish the work before the dead line.\n\nWhen you are home, make sure that your brain thinks about your family and not about your office burden.\n\nOn weekends, enjoy the weekends. Don’t allow your office deadlines spoil your weekend.\n\nEmbrace the ‘NOW'.\n\nDon’t allow negative thoughts to control you. Rather, you control them. Practice the art of being in the present.\n\nBeing omnipresent is difficult but being present is possible.\n\nTry this for six months and thank me on 26th September 2019. i.e. six months starting from today\n\nYesterday's the past, tomorrow's the future, but today is a gift. That's why it's called the present.\n\nLearning Out Loud\n\nChandu the heARTIST\n\nFeel free to reach me. Ready to help anyone: chandutheheartist"", 'aiModelVersion': '1'}",0.9997
Jim Burbridge,Updated 4y,"As a senior developer, what are the key things you are looking at when choosing a company to work for?","Work/Life balance. “Yeah, we routinely expect you to work 70 hours per week” Nope.
Time spent getting to the job. “Hey we really like you but we need you out in [super far town] every day at 10am, but you can work 1 day from home every week! what do you say?” No; I say no. I live in the bay area, so even though something can be like 40 miles away, during the mornings/evenings I’m looking at easily 2+hours both ways. Honestly there are few reasons to have developers in the office (especially open office layouts, which are hell). Why so many companies still cling to the idea of forcing developers to work in the office is wild to me. There are plenty of companies with all or mostly-all remote workers and while scheduling can be a bit of a pain due to timezones, it works. My current company almost no one lives / goes to our main office.
age of company / profitability. If the company is approaching a decade old, I expect there to be some profitability to the company. Newer companies should be able to explain to me what they are doing and how it makes or will make them profitable (RE: “disrupting the industry” companies).
interesting work / problems to solve. If I’m devoting ~40 hours of my life a week, the stuff I’m doing should be interesting
I ask about meetings, largely because there are very few meetings I’ve ever been in with more than 3 people that have ever felt truly useful.
Company Culture. I’m likely dedicating at least a few years of my life here, I should enjoy the people I am working with, and how we all interact with.

EDIT: This question has gotten quite a few views and upvotes. It’s always the answers you least expect, apparently.

In that time the point about “money” or “salary” has came up between two different people. This list assumes that you have applied to jobs that have posted salary requirements, of which you would be comfortable within said range. If you have applied for a job without a posted salary range, and after an interview or two find out that the salary is too low then really the rest of this list means nothing considering you’re not likely to take the job if they won’t pay you what you deserve.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/ge13a5r8t2dvu4ho', 'title': 'As a senior developer, what are the key things you are looking at when choosing a company to work for?', 'score': {'original': 0.9999, 'ai': 0.0001}, 'blocks': [{'text': 'Work/Life balance. “Yeah, we routinely expect you to work 70 hours per week” Nope.\nTime spent getting to the job. “Hey we really like you but we need you out in [super far town] every day at 10am, but you can work 1 day from home every week! what do you say?” No; I say no. I live in the bay area, so even though something can be like 40 miles away, during the mornings/evenings I’m looking at easily 2+hours both ways. Honestly there are few reasons to have developers in the office (especially open office layouts, which are hell). Why so many companies still cling to the idea of forcing developers to work in the office is wild to me. There are plenty of companies with all or mostly-all remote workers and while scheduling can be a bit of a pain due to timezones, it works. My current company almost no one lives / goes to our main office.\nage of company / profitability. If the company is approaching a decade old, I expect there to be some profitability to the company. Newer companies should be able to explain to me what they are doing and how it makes or will make them profitable (RE: “disrupting the industry” companies).\ninteresting work / problems to solve. If I’m devoting ~40 hours of my life a week, the stuff I’m doing should be interesting\nI ask about meetings, largely because there are very few meetings I’ve ever been in with more than 3 people that have ever felt truly useful.\nCompany Culture. I’m likely dedicating at least a few years of my life here, I should enjoy the people I am working with, and how we all interact with.\n\nEDIT: This question has gotten quite a few views and upvotes. It’s always the answers you least expect, apparently.\n\nIn that time the point about “money” or “salary” has came up between two different people. This list assumes that you have applied to jobs that have posted salary requirements, of which you would be comfortable within said range. If you have applied for a job without a posted salary range, and after an interview or two find out that the salary is too low then really the rest of this list means nothing considering you’re not likely to take the job if they won’t pay you what you deserve.', 'result': {'fake': 0.0001, 'real': 0.9999}, 'status': 'success'}], 'credits_used': 4, 'credits': 1983338, 'subscription': 0, 'content': 'Work/Life balance. “Yeah, we routinely expect you to work 70 hours per week” Nope.\nTime spent getting to the job. “Hey we really like you but we need you out in [super far town] every day at 10am, but you can work 1 day from home every week! what do you say?” No; I say no. I live in the bay area, so even though something can be like 40 miles away, during the mornings/evenings I’m looking at easily 2+hours both ways. Honestly there are few reasons to have developers in the office (especially open office layouts, which are hell). Why so many companies still cling to the idea of forcing developers to work in the office is wild to me. There are plenty of companies with all or mostly-all remote workers and while scheduling can be a bit of a pain due to timezones, it works. My current company almost no one lives / goes to our main office.\nage of company / profitability. If the company is approaching a decade old, I expect there to be some profitability to the company. Newer companies should be able to explain to me what they are doing and how it makes or will make them profitable (RE: “disrupting the industry” companies).\ninteresting work / problems to solve. If I’m devoting ~40 hours of my life a week, the stuff I’m doing should be interesting\nI ask about meetings, largely because there are very few meetings I’ve ever been in with more than 3 people that have ever felt truly useful.\nCompany Culture. I’m likely dedicating at least a few years of my life here, I should enjoy the people I am working with, and how we all interact with.\n\nEDIT: This question has gotten quite a few views and upvotes. It’s always the answers you least expect, apparently.\n\nIn that time the point about “money” or “salary” has came up between two different people. This list assumes that you have applied to jobs that have posted salary requirements, of which you would be comfortable within said range. If you have applied for a job without a posted salary range, and after an interview or two find out that the salary is too low then really the rest of this list means nothing considering you’re not likely to take the job if they won’t pay you what you deserve.', 'aiModelVersion': '1'}",0.9999
Eli Algranti,Updated 2y,How does a software loading bar work? How do computer programs know how much time they have left to finish?,"I’m going to let you on a little dirty trick of User Experience design (UX design):

User don’t like to wait for more than a couple seconds for a program to do something. If this happens they may think the program is just stuck and may close it. Take the ubiquitous spinning wait wheel:

No, don’t wait! There is nothing loading, that’s just an animated GIF.

As a developer (or in this case a Quora user) I don’t have to do anything to make the wheel spin, the browser takes care of that. My program may be nine types of dead and stuck and that wheel will keep spinning, maintaining the illusion that something is happening.

Back to loading bars.

There are three types of loading bars you’ll usually encounter:

For real loading bars

These are the bars you see when transferring or processing known amounts of data. They will usually have an indication of speed and an estimate of how long it’ll take:

To make these the program calculates what percentage of data has been processed and the current processing speed.

Counting loading bars

These bars are sometimes used when you know how many “things” your program must do but don’t know how long it’ll take for them to be done. In this case you assign a percentage of done to each task and update the bar accordingly. For example:

10% - Contact server

30% - Run query

60% - Analyse data

80% - Generate graphs

100% - All done

The problem with these graphs is that the steps need to be fast enough or the user will think the loading bar is stuck.

Fake loading bars

This are completely fictitious loading bars, they may even be implemented as animated graphics like the spinning wheel, and are used when it is not feasible to show an actual loading bar.

If you’ve experienced the following then you are probably dealing with a fake loading bar:

The bar starts to fill slowly but then it jumps too 100% and disappears.
The bars fills to about 50%-70% at a good pace and then slows down considerably.
The bars fills up to 99% and then stays there forever.

The way these bars are used are, say you have a task that usually takes less than 20 seconds, but may take up to 2 minutes. You design a loading bar that reaches 50% in 20 seconds and then slows down so it reaches 99% in two minutes, irrespective of what the program is actually doing.

Fake loading bars may be used in conjunction with step counting loading bars to provide a better user experience. The trick is to always show the user that something is happening.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/xn9eo1vbhtfqai04', 'title': 'How does a software loading bar work? How do computer programs know how much time they have left to finish?', 'score': {'original': 0.9999, 'ai': 0.0001}, 'blocks': [{'text': 'I’m going to let you on a little dirty trick of User Experience design (UX design):\n\nUser don’t like to wait for more than a couple seconds for a program to do something. If this happens they may think the program is just stuck and may close it. Take the ubiquitous spinning wait wheel:\n\nNo, don’t wait! There is nothing loading, that’s just an animated GIF.\n\nAs a developer (or in this case a Quora user) I don’t have to do anything to make the wheel spin, the browser takes care of that. My program may be nine types of dead and stuck and that wheel will keep spinning, maintaining the illusion that something is happening.\n\nBack to loading bars.\n\nThere are three types of loading bars you’ll usually encounter:\n\nFor real loading bars\n\nThese are the bars you see when transferring or processing known amounts of data. They will usually have an indication of speed and an estimate of how long it’ll take:\n\nTo make these the program calculates what percentage of data has been processed and the current processing speed.\n\nCounting loading bars\n\nThese bars are sometimes used when you know how many “things” your program must do but don’t know how long it’ll take for them to be done. In this case you assign a percentage of done to each task and update the bar accordingly. For example:\n\n10% - Contact server\n\n30% - Run query\n\n60% - Analyse data\n\n80% - Generate graphs\n\n100% - All done\n\nThe problem with these graphs is that the steps need to be fast enough or the user will think the loading bar is stuck.\n\nFake loading bars\n\nThis are completely fictitious loading bars, they may even be implemented as animated graphics like the spinning wheel, and are used when it is not feasible to show an actual loading bar.\n\nIf you’ve experienced the following then you are probably dealing with a fake loading bar:\n\nThe bar starts to fill slowly but then it jumps too 100% and disappears.\nThe bars fills to about 50%-70% at a good pace and then slows down considerably.\nThe bars fills up to 99% and then stays there forever.\n\nThe way these bars are used are, say you have a task that usually takes less than 20 seconds, but may take up to 2 minutes. You design a loading bar that reaches 50% in 20 seconds and then slows down so it reaches 99% in two minutes, irrespective of what the program is actually doing.\n\nFake loading bars may be used in conjunction with step counting loading bars to provide a better user experience. The trick is to always show the user that something is happening.', 'result': {'fake': 0.0001, 'real': 0.9999}, 'status': 'success'}], 'credits_used': 5, 'credits': 1983333, 'subscription': 0, 'content': 'I’m going to let you on a little dirty trick of User Experience design (UX design):\n\nUser don’t like to wait for more than a couple seconds for a program to do something. If this happens they may think the program is just stuck and may close it. Take the ubiquitous spinning wait wheel:\n\nNo, don’t wait! There is nothing loading, that’s just an animated GIF.\n\nAs a developer (or in this case a Quora user) I don’t have to do anything to make the wheel spin, the browser takes care of that. My program may be nine types of dead and stuck and that wheel will keep spinning, maintaining the illusion that something is happening.\n\nBack to loading bars.\n\nThere are three types of loading bars you’ll usually encounter:\n\nFor real loading bars\n\nThese are the bars you see when transferring or processing known amounts of data. They will usually have an indication of speed and an estimate of how long it’ll take:\n\nTo make these the program calculates what percentage of data has been processed and the current processing speed.\n\nCounting loading bars\n\nThese bars are sometimes used when you know how many “things” your program must do but don’t know how long it’ll take for them to be done. In this case you assign a percentage of done to each task and update the bar accordingly. For example:\n\n10% - Contact server\n\n30% - Run query\n\n60% - Analyse data\n\n80% - Generate graphs\n\n100% - All done\n\nThe problem with these graphs is that the steps need to be fast enough or the user will think the loading bar is stuck.\n\nFake loading bars\n\nThis are completely fictitious loading bars, they may even be implemented as animated graphics like the spinning wheel, and are used when it is not feasible to show an actual loading bar.\n\nIf you’ve experienced the following then you are probably dealing with a fake loading bar:\n\nThe bar starts to fill slowly but then it jumps too 100% and disappears.\nThe bars fills to about 50%-70% at a good pace and then slows down considerably.\nThe bars fills up to 99% and then stays there forever.\n\nThe way these bars are used are, say you have a task that usually takes less than 20 seconds, but may take up to 2 minutes. You design a loading bar that reaches 50% in 20 seconds and then slows down so it reaches 99% in two minutes, irrespective of what the program is actually doing.\n\nFake loading bars may be used in conjunction with step counting loading bars to provide a better user experience. The trick is to always show the user that something is happening.', 'aiModelVersion': '1'}",0.9999
Amit Ashwini,Updated 6y,What are the best practices for responsive web design?,"You already know you want a responsive web design, so your customers can easily engage and interact with not just your advanced technology but your specific company efforts as well. With the machinery on the market today, it can be hard to conform design practices that will be compatible with each one. That's why you'll see lots of applications out there that are only for iPhone or only for Android. However, the benefits of having a responsive strategy are numerous. Not only will your customers feel included, but Google appreciates it as well. They take your responsive design into account when deciding where to place you on the search rankings for the day. Responsive web design techniques are being used successfully with the most accessed sites today, and you can make it happen for your company too. Of course, it will require some effort on your part. See the top practices before you implement your web design strategy.

1. Smaller Is Better

Everyone in the world may not have a smartphone or tablet, but sometimes it feels like they do. If you're working on responsive design for devices of all types, you'll want to start with your smallest screen size available and then scale out. Resources are best used when concentrated on the smaller platforms first, but you have to keep branching out after that. Whether you're on a 20"" laptop or a standard smartphone, the information needs to be easily acceptable. You'll also want to use liquid layouts as much as possible, meaning you're doing one design for several screens as opposed to working individually on each type of machinery and size scale.

2. A Flexible Cityscape in Disguise

Grids make up our world, whether it's in an apartment building or a neighborhood, and they help us figure out where to go and where we are. In web design, it was common to use a fixed-grid method. It meant that websites were given a set parameter, regardless of the screen resolution. It caused the layout to be the same size, but the quality was inconsistent. Now you can use fluid grids which eliminate the need to manually adjust the dimensions, due to their automatic resizing in scale with the browser specifications. The grids actually use percentages rather than fixed data input, so it does a better job of ensuring each image is clear.

3. Using Media Queries

These are already available to you if you're using the CSS3 language, and they work to give the website the exact properties of each browser it interacts with. In order to determine the size of the screen, type of device and orientation of the images, you'll need to effectively use these queries. When text or format looks awkward on different devices, this is referred to as a breakpoint on the layout itself. If your site has features to it that are difficult or awkward to read (like narrow columns or panels), then your media queries need to define where these breakpoints are so the queries themselves can adjust and fix as needed.

4. Simplifying the Process

Having excellent content is one of your best ways to be favored by search engine algorithms and your customers. The more unique content you have that connects with the reader, the more you're likely to be shared and favored. However, having too much content can make your site difficult to load. Creating content specifically for desktop viewers will only complicate your mobile presence. You can tag any component with a .not_mobile if you really want to keep the content on the site. However, it may be a smarter idea to just start paring down the content altogether so you can focus on that which can be loaded across all screens.

5. Menus and Buttons

We all know what it's like to find a website that makes things difficult to find. The actions are clear to whoever developed the platform, but that doesn't mean anything to the user. People are much more comfortable with obvious menus and buttons that leave little room for confusion. A horizontal menu that can be swiped gives the visitor a good indication of what the site has to offer, and reduces the amount of time spent trying to navigate it. Make your biggest draw the largest portion on your screen, and give people large (scaled) buttons to click upon to get more information. Make them specific, and don't try to confuse readers with arrows that point your readers toward advertisements.

6. Headers and Paragraphs

Responsive design needs to have headings and text that look balanced. Too large and it will break up the text so much that reading will be annoying, but too small and you risk the readers having to squint to make out the information. The newest mobile designs make it easier for you to see due to better resolutions which actually should make it easier on you to pick the right sizing for your website. Typically, the optimal amount of characters in a single line will be between 60 to 75 characters. The eyes can follow certain layouts better, so aim for your text or photos to comprise about 500 to 700 pixels.

7. Optimizing the Content

It's one thing to fit the content onto a screen, it's another thing to actually consider yourself from a visitor standpoint. The more information you have up on your site, the more likely it is you can determine what customers are looking for and how easy it will be for them to find. Before you start finalizing your layout decisions, you need to figure out the most important information on the site and which people will want to access it at what times. You can't account for every given situation, but you can put yourself in the readers shoes as much as possible. For example, visitors on your mobile site may not solely be looking for the directions to your business. They may instead just want to know more about what you can do for them. Put the most important information at the top of the page regardless of how customers are accessing content. They used to call this putting the important parts above the fold, but this is really just saving people from having to scroll to find anything.

8. Content Blocks

Your mobile site is composed of content blocks, and unfortunately you'll have to sacrifice certain pieces to make the site easy to follow. You can change the order of things around, so the eye is drawn to different parts of the screen on a desktop rather than a small phone screen. While mobile viewers are looking at the top, desktop viewers are absorbing the site as a whole. If your images are more relevant than your text, then you can manipulate to show one over the other for smaller screens. For a desktop image, you can simply place one beside the other.

9. Foregoing Image Quality

Pictures can really draw a user into a site, and they can make them sit up and take notice about your offers. However, images take a while to load, and they can pose problems to the performance of the page itself. You need to be ready to take out whatever slows down your site, and you may want to think about compromising on the quality of the pictures you do have. If you have any type of animated content or moving designs, then that may just be too many scripts for the device to run. Even if you're a design company, you still need to be able to impress those who may not have the most advanced gadget. Your customers will be far more interested in seeing what you have to offer rather than getting annoyed a slowly loading page.

10. You Can't Win 'Em All

Unfortunately, there are far too many types of technology available for you to figure it all out without investing an often inappropriate amount of resources. Instead of cursing people for using out-of-date machinery, you have to remember that eventually it won't be a problem anymore. People will eventually upgrade and can then start enjoying the fruits of your labor. With the advancements of technology, you know nothing stays the same. The best you can do is try to take into account as much as you can, so you can bring as many customers onboard with the new features.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/knip21raedu57bjh', 'title': 'What are the best practices for responsive web design?', 'score': {'original': 0.75473333333333, 'ai': 0.24526666666667}, 'blocks': [{'text': 'You already know you want a responsive web design, so your customers can easily engage and interact with not just your advanced technology but your specific company efforts as well. With the machinery on the market today, it can be hard to conform design practices that will be compatible with each one. That\'s why you\'ll see lots of applications out there that are only for iPhone or only for Android. However, the benefits of having a responsive strategy are numerous. Not only will your customers feel included, but Google appreciates it as well. They take your responsive design into account when deciding where to place you on the search rankings for the day. Responsive web design techniques are being used successfully with the most accessed sites today, and you can make it happen for your company too. Of course, it will require some effort on your part. See the top practices before you implement your web design strategy.\n\n1. Smaller Is Better\n\nEveryone in the world may not have a smartphone or tablet, but sometimes it feels like they do. If you\'re working on responsive design for devices of all types, you\'ll want to start with your smallest screen size available and then scale out. Resources are best used when concentrated on the smaller platforms first, but you have to keep branching out after that. Whether you\'re on a 20"" laptop or a standard smartphone, the information needs to be easily acceptable. You\'ll also want to use liquid layouts as much as possible, meaning you\'re doing one design for several screens as opposed to working individually on each type of machinery and size scale.\n\n2. A Flexible Cityscape in Disguise\n\nGrids make up our world, whether it\'s in an apartment building or a neighborhood, and they help us figure out where to go and where we are. In web design, it was common to use a fixed-grid method. It meant that websites were given a set parameter, regardless of the screen resolution. It caused the layout to be the same size, but the quality was inconsistent. Now you can use fluid grids which eliminate the need to manually adjust the dimensions, due to their automatic resizing in scale with the browser specifications. The grids actually use percentages rather than fixed data input, so it does a better job of ensuring each image is clear.\n\n3. Using Media Queries\n\nThese are already available to you if you\'re using the CSS3 language, and they work to give the website the exact properties of each browser it interacts with. In order to determine the size of the screen, type of device and orientation of the images, you\'ll need to effectively use these queries. When text or format looks awkward on different devices, this is referred to as a breakpoint on the layout itself. If your site has features to it that are difficult or awkward to read (like narrow columns or panels), then your media queries need to define where these breakpoints are so the queries themselves can adjust and fix as needed.\n\n4. Simplifying the Process\n\nHaving excellent content is one of', 'result': {'fake': 0.0228, 'real': 0.9772}, 'status': 'success'}, {'text': ""your best ways to be favored by search engine algorithms and your customers. The more unique content you have that connects with the reader, the more you're likely to be shared and favored. However, having too much content can make your site difficult to load. Creating content specifically for desktop viewers will only complicate your mobile presence. You can tag any component with a .not_mobile if you really want to keep the content on the site. However, it may be a smarter idea to just start paring down the content altogether so you can focus on that which can be loaded across all screens.\n\n5. Menus and Buttons\n\nWe all know what it's like to find a website that makes things difficult to find. The actions are clear to whoever developed the platform, but that doesn't mean anything to the user. People are much more comfortable with obvious menus and buttons that leave little room for confusion. A horizontal menu that can be swiped gives the visitor a good indication of what the site has to offer, and reduces the amount of time spent trying to navigate it. Make your biggest draw the largest portion on your screen, and give people large (scaled) buttons to click upon to get more information. Make them specific, and don't try to confuse readers with arrows that point your readers toward advertisements.\n\n6. Headers and Paragraphs\n\nResponsive design needs to have headings and text that look balanced. Too large and it will break up the text so much that reading will be annoying, but too small and you risk the readers having to squint to make out the information. The newest mobile designs make it easier for you to see due to better resolutions which actually should make it easier on you to pick the right sizing for your website. Typically, the optimal amount of characters in a single line will be between 60 to 75 characters. The eyes can follow certain layouts better, so aim for your text or photos to comprise about 500 to 700 pixels.\n\n7. Optimizing the Content\n\nIt's one thing to fit the content onto a screen, it's another thing to actually consider yourself from a visitor standpoint. The more information you have up on your site, the more likely it is you can determine what customers are looking for and how easy it will be for them to find. Before you start finalizing your layout decisions, you need to figure out the most important information on the site and which people will want to access it at what times. You can't account for every given situation, but you can put yourself in the readers shoes as much as possible. For example, visitors on your mobile site may not solely be looking for the directions to your business. They may instead just want to know more about what you can do for them. Put the most important information at the top of the page regardless of how customers are accessing content. They used to call this putting the important parts above the fold, but this is really"", 'result': {'fake': 0.476, 'real': 0.524}, 'status': 'success'}, {'text': ""just saving people from having to scroll to find anything.\n\n8. Content Blocks\n\nYour mobile site is composed of content blocks, and unfortunately you'll have to sacrifice certain pieces to make the site easy to follow. You can change the order of things around, so the eye is drawn to different parts of the screen on a desktop rather than a small phone screen. While mobile viewers are looking at the top, desktop viewers are absorbing the site as a whole. If your images are more relevant than your text, then you can manipulate to show one over the other for smaller screens. For a desktop image, you can simply place one beside the other.\n\n9. Foregoing Image Quality\n\nPictures can really draw a user into a site, and they can make them sit up and take notice about your offers. However, images take a while to load, and they can pose problems to the performance of the page itself. You need to be ready to take out whatever slows down your site, and you may want to think about compromising on the quality of the pictures you do have. If you have any type of animated content or moving designs, then that may just be too many scripts for the device to run. Even if you're a design company, you still need to be able to impress those who may not have the most advanced gadget. Your customers will be far more interested in seeing what you have to offer rather than getting annoyed a slowly loading page.\n\n10. You Can't Win 'Em All\n\nUnfortunately, there are far too many types of technology available for you to figure it all out without investing an often inappropriate amount of resources. Instead of cursing people for using out-of-date machinery, you have to remember that eventually it won't be a problem anymore. People will eventually upgrade and can then start enjoying the fruits of your labor. With the advancements of technology, you know nothing stays the same. The best you can do is try to take into account as much as you can, so you can bring as many customers onboard with the new features."", 'result': {'fake': 0.9085, 'real': 0.0915}, 'status': 'success'}], 'credits_used': 14, 'credits': 1983319, 'subscription': 0, 'content': 'You already know you want a responsive web design, so your customers can easily engage and interact with not just your advanced technology but your specific company efforts as well. With the machinery on the market today, it can be hard to conform design practices that will be compatible with each one. That\'s why you\'ll see lots of applications out there that are only for iPhone or only for Android. However, the benefits of having a responsive strategy are numerous. Not only will your customers feel included, but Google appreciates it as well. They take your responsive design into account when deciding where to place you on the search rankings for the day. Responsive web design techniques are being used successfully with the most accessed sites today, and you can make it happen for your company too. Of course, it will require some effort on your part. See the top practices before you implement your web design strategy.\n\n1. Smaller Is Better\n\nEveryone in the world may not have a smartphone or tablet, but sometimes it feels like they do. If you\'re working on responsive design for devices of all types, you\'ll want to start with your smallest screen size available and then scale out. Resources are best used when concentrated on the smaller platforms first, but you have to keep branching out after that. Whether you\'re on a 20"" laptop or a standard smartphone, the information needs to be easily acceptable. You\'ll also want to use liquid layouts as much as possible, meaning you\'re doing one design for several screens as opposed to working individually on each type of machinery and size scale.\n\n2. A Flexible Cityscape in Disguise\n\nGrids make up our world, whether it\'s in an apartment building or a neighborhood, and they help us figure out where to go and where we are. In web design, it was common to use a fixed-grid method. It meant that websites were given a set parameter, regardless of the screen resolution. It caused the layout to be the same size, but the quality was inconsistent. Now you can use fluid grids which eliminate the need to manually adjust the dimensions, due to their automatic resizing in scale with the browser specifications. The grids actually use percentages rather than fixed data input, so it does a better job of ensuring each image is clear.\n\n3. Using Media Queries\n\nThese are already available to you if you\'re using the CSS3 language, and they work to give the website the exact properties of each browser it interacts with. In order to determine the size of the screen, type of device and orientation of the images, you\'ll need to effectively use these queries. When text or format looks awkward on different devices, this is referred to as a breakpoint on the layout itself. If your site has features to it that are difficult or awkward to read (like narrow columns or panels), then your media queries need to define where these breakpoints are so the queries themselves can adjust and fix as needed.\n\n4. Simplifying the Process\n\nHaving excellent content is one of your best ways to be favored by search engine algorithms and your customers. The more unique content you have that connects with the reader, the more you\'re likely to be shared and favored. However, having too much content can make your site difficult to load. Creating content specifically for desktop viewers will only complicate your mobile presence. You can tag any component with a .not_mobile if you really want to keep the content on the site. However, it may be a smarter idea to just start paring down the content altogether so you can focus on that which can be loaded across all screens.\n\n5. Menus and Buttons\n\nWe all know what it\'s like to find a website that makes things difficult to find. The actions are clear to whoever developed the platform, but that doesn\'t mean anything to the user. People are much more comfortable with obvious menus and buttons that leave little room for confusion. A horizontal menu that can be swiped gives the visitor a good indication of what the site has to offer, and reduces the amount of time spent trying to navigate it. Make your biggest draw the largest portion on your screen, and give people large (scaled) buttons to click upon to get more information. Make them specific, and don\'t try to confuse readers with arrows that point your readers toward advertisements.\n\n6. Headers and Paragraphs\n\nResponsive design needs to have headings and text that look balanced. Too large and it will break up the text so much that reading will be annoying, but too small and you risk the readers having to squint to make out the information. The newest mobile designs make it easier for you to see due to better resolutions which actually should make it easier on you to pick the right sizing for your website. Typically, the optimal amount of characters in a single line will be between 60 to 75 characters. The eyes can follow certain layouts better, so aim for your text or photos to comprise about 500 to 700 pixels.\n\n7. Optimizing the Content\n\nIt\'s one thing to fit the content onto a screen, it\'s another thing to actually consider yourself from a visitor standpoint. The more information you have up on your site, the more likely it is you can determine what customers are looking for and how easy it will be for them to find. Before you start finalizing your layout decisions, you need to figure out the most important information on the site and which people will want to access it at what times. You can\'t account for every given situation, but you can put yourself in the readers shoes as much as possible. For example, visitors on your mobile site may not solely be looking for the directions to your business. They may instead just want to know more about what you can do for them. Put the most important information at the top of the page regardless of how customers are accessing content. They used to call this putting the important parts above the fold, but this is really just saving people from having to scroll to find anything.\n\n8. Content Blocks\n\nYour mobile site is composed of content blocks, and unfortunately you\'ll have to sacrifice certain pieces to make the site easy to follow. You can change the order of things around, so the eye is drawn to different parts of the screen on a desktop rather than a small phone screen. While mobile viewers are looking at the top, desktop viewers are absorbing the site as a whole. If your images are more relevant than your text, then you can manipulate to show one over the other for smaller screens. For a desktop image, you can simply place one beside the other.\n\n9. Foregoing Image Quality\n\nPictures can really draw a user into a site, and they can make them sit up and take notice about your offers. However, images take a while to load, and they can pose problems to the performance of the page itself. You need to be ready to take out whatever slows down your site, and you may want to think about compromising on the quality of the pictures you do have. If you have any type of animated content or moving designs, then that may just be too many scripts for the device to run. Even if you\'re a design company, you still need to be able to impress those who may not have the most advanced gadget. Your customers will be far more interested in seeing what you have to offer rather than getting annoyed a slowly loading page.\n\n10. You Can\'t Win \'Em All\n\nUnfortunately, there are far too many types of technology available for you to figure it all out without investing an often inappropriate amount of resources. Instead of cursing people for using out-of-date machinery, you have to remember that eventually it won\'t be a problem anymore. People will eventually upgrade and can then start enjoying the fruits of your labor. With the advancements of technology, you know nothing stays the same. The best you can do is try to take into account as much as you can, so you can bring as many customers onboard with the new features.', 'aiModelVersion': '1'}",0.75473333333333
Rohina Yasar,7mo,"Which is a better full-stack software development course among these, Coursera, Careers360, Udacity, Bosscode, or Learnbay?","You can learn it from any institute that aligns with your career goals.

One of the common goals is to find a dream job in your dream company- Based on that you can apply for these institutes. All the institutes mentioned above can add brownie points to your resume and enhance growth, but it is important to remember that it should offer good ROI.

Courses offered by the above-mentioned institutes:

Careers360- This is a consulting service, it does provide courses of its own.
Bosscoder Academy- Transformer (Software Development) for working professionals.
Learnbay- Software Development Master Program
Coursera- IBM Full Stack Software Developer Professional Certificate.
Udacity- Software Development Process.

Let’s analyze the pros and cons of this institute to come to a final decision.

Pros of these institutes in terms of courses:

It has a short course duration of around 6 months.
It offers a live structured program created by industry experts that can upskill you to switch to top product-based companies like FAANG.
They offer training on problem-solving skills through DS and Algo, and system design (HLD + LLD) through practical projects.
They have many tie-ups with top companies where they offer live classes by instructors. This means you will be guided by the instructors throughout the course.
They provide 1:1 mentorship sessions and mock interviews to build the right guidance and detailed feedback on your performance.
It offers multiple real-time projects like Design Google Drive, Design Tinder, and Design Airbnb, among others 8+ real-time projects. These projects are conducted online hence, you can practice it whenever you want.
They will give you a career assistance program named career service pro, which is designed to assist you in achieving your dream job. Some of the features given in this feature are 1:1 doubt-clearing sessions, 6 personalized mock interviews, resume-building sessions, unlimited interview calls, and many more for 3 years.
Domain specialization is a unique feature offered here on MERN and Product Management. Based on the domain you choose, the training will be given both on a conceptual as well as on theoretical basis.
After you finish the course, you will receive recognition from IBM and Microsoft. These certificates can make you go a long way especially when it comes to competing with other candidates.
The course duration is comprised of 9 and 11 months, depending on the batch you choose. They have a weekend batch comprising Saturday and Sunday and a weekday batch comprising Monday to Friday.
This course offers recognition from IBM where you will be given an IBM certificate after course completion.
The instructor in this program has years of experience in the industry.
This is a beginner-friendly course, hence even if you do not have a work experience in the IT field, still you can pursue it.
It has a good course ratings and the course duration is 4 months.
This is a free course, which can be pursued by anyone with a background in software engineering.
The course duration is short, around 3 months.
It is a part of the OMS (Online master's degree), where you will learn to select and implement software processes for the development project.
This is taught by experts with backgrounds in software engineering.

Note: None of these courses offer domain specialization except Learnbay.

Benefits of domain specialization:

You develop a unique way of topic understanding.
You attract more recruiters for your specialization.
To enhance your career growth by emphasizing a specific field of any subject.

Finally, it is said that you can learn full-stack software development from a reputed institute then it will allow you to improve your skills. Always, do your research before enrolling though, however, if it is to recommend any institute then go for those that have good placement records and domain-based learning.

All the best!","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/dwzgcn567jya2pru', 'title': 'Which is a better full-stack software development course among these, Coursera, Careers360, Udacity, Bosscode, or Learnbay?', 'score': {'original': 0.467, 'ai': 0.533}, 'blocks': [{'text': ""You can learn it from any institute that aligns with your career goals.\n\nOne of the common goals is to find a dream job in your dream company- Based on that you can apply for these institutes. All the institutes mentioned above can add brownie points to your resume and enhance growth, but it is important to remember that it should offer good ROI.\n\nCourses offered by the above-mentioned institutes:\n\nCareers360- This is a consulting service, it does provide courses of its own.\nBosscoder Academy- Transformer (Software Development) for working professionals.\nLearnbay- Software Development Master Program\nCoursera- IBM Full Stack Software Developer Professional Certificate.\nUdacity- Software Development Process.\n\nLet’s analyze the pros and cons of this institute to come to a final decision.\n\nPros of these institutes in terms of courses:\n\nIt has a short course duration of around 6 months.\nIt offers a live structured program created by industry experts that can upskill you to switch to top product-based companies like FAANG.\nThey offer training on problem-solving skills through DS and Algo, and system design (HLD + LLD) through practical projects.\nThey have many tie-ups with top companies where they offer live classes by instructors. This means you will be guided by the instructors throughout the course.\nThey provide 1:1 mentorship sessions and mock interviews to build the right guidance and detailed feedback on your performance.\nIt offers multiple real-time projects like Design Google Drive, Design Tinder, and Design Airbnb, among others 8+ real-time projects. These projects are conducted online hence, you can practice it whenever you want.\nThey will give you a career assistance program named career service pro, which is designed to assist you in achieving your dream job. Some of the features given in this feature are 1:1 doubt-clearing sessions, 6 personalized mock interviews, resume-building sessions, unlimited interview calls, and many more for 3 years.\nDomain specialization is a unique feature offered here on MERN and Product Management. Based on the domain you choose, the training will be given both on a conceptual as well as on theoretical basis.\nAfter you finish the course, you will receive recognition from IBM and Microsoft. These certificates can make you go a long way especially when it comes to competing with other candidates.\nThe course duration is comprised of 9 and 11 months, depending on the batch you choose. They have a weekend batch comprising Saturday and Sunday and a weekday batch comprising Monday to Friday.\nThis course offers recognition from IBM where you will be given an IBM certificate after course completion.\nThe instructor in this program has years of experience in the industry.\nThis is a beginner-friendly course, hence even if you do not have a work experience in the IT field, still you can pursue it.\nIt has a good course ratings and the course duration is 4 months.\nThis is a free course, which can be pursued by anyone with a background in software engineering.\nThe course duration is short, around 3 months.\nIt is a part of the OMS (Online master's degree), where you will learn to select and implement software processes for the development project.\nThis is taught by experts with backgrounds in software engineering.\n\nNote: None of these courses offer domain specialization"", 'result': {'fake': 0.003, 'real': 0.997}, 'status': 'success'}, {'text': 'except Learnbay.\n\nBenefits of domain specialization:\n\nYou develop a unique way of topic understanding.\nYou attract more recruiters for your specialization.\nTo enhance your career growth by emphasizing a specific field of any subject.\n\nFinally, it is said that you can learn full-stack software development from a reputed institute then it will allow you to improve your skills. Always, do your research before enrolling though, however, if it is to recommend any institute then go for those that have good placement records and domain-based learning.\n\nAll the best!', 'result': {'fake': 0.1773, 'real': 0.8227}, 'status': 'success'}], 'credits_used': 7, 'credits': 1983312, 'subscription': 0, 'content': ""You can learn it from any institute that aligns with your career goals.\n\nOne of the common goals is to find a dream job in your dream company- Based on that you can apply for these institutes. All the institutes mentioned above can add brownie points to your resume and enhance growth, but it is important to remember that it should offer good ROI.\n\nCourses offered by the above-mentioned institutes:\n\nCareers360- This is a consulting service, it does provide courses of its own.\nBosscoder Academy- Transformer (Software Development) for working professionals.\nLearnbay- Software Development Master Program\nCoursera- IBM Full Stack Software Developer Professional Certificate.\nUdacity- Software Development Process.\n\nLet’s analyze the pros and cons of this institute to come to a final decision.\n\nPros of these institutes in terms of courses:\n\nIt has a short course duration of around 6 months.\nIt offers a live structured program created by industry experts that can upskill you to switch to top product-based companies like FAANG.\nThey offer training on problem-solving skills through DS and Algo, and system design (HLD + LLD) through practical projects.\nThey have many tie-ups with top companies where they offer live classes by instructors. This means you will be guided by the instructors throughout the course.\nThey provide 1:1 mentorship sessions and mock interviews to build the right guidance and detailed feedback on your performance.\nIt offers multiple real-time projects like Design Google Drive, Design Tinder, and Design Airbnb, among others 8+ real-time projects. These projects are conducted online hence, you can practice it whenever you want.\nThey will give you a career assistance program named career service pro, which is designed to assist you in achieving your dream job. Some of the features given in this feature are 1:1 doubt-clearing sessions, 6 personalized mock interviews, resume-building sessions, unlimited interview calls, and many more for 3 years.\nDomain specialization is a unique feature offered here on MERN and Product Management. Based on the domain you choose, the training will be given both on a conceptual as well as on theoretical basis.\nAfter you finish the course, you will receive recognition from IBM and Microsoft. These certificates can make you go a long way especially when it comes to competing with other candidates.\nThe course duration is comprised of 9 and 11 months, depending on the batch you choose. They have a weekend batch comprising Saturday and Sunday and a weekday batch comprising Monday to Friday.\nThis course offers recognition from IBM where you will be given an IBM certificate after course completion.\nThe instructor in this program has years of experience in the industry.\nThis is a beginner-friendly course, hence even if you do not have a work experience in the IT field, still you can pursue it.\nIt has a good course ratings and the course duration is 4 months.\nThis is a free course, which can be pursued by anyone with a background in software engineering.\nThe course duration is short, around 3 months.\nIt is a part of the OMS (Online master's degree), where you will learn to select and implement software processes for the development project.\nThis is taught by experts with backgrounds in software engineering.\n\nNote: None of these courses offer domain specialization except Learnbay.\n\nBenefits of domain specialization:\n\nYou develop a unique way of topic understanding.\nYou attract more recruiters for your specialization.\nTo enhance your career growth by emphasizing a specific field of any subject.\n\nFinally, it is said that you can learn full-stack software development from a reputed institute then it will allow you to improve your skills. Always, do your research before enrolling though, however, if it is to recommend any institute then go for those that have good placement records and domain-based learning.\n\nAll the best!"", 'aiModelVersion': '1'}",0.467
Tim Mensch,Updated 3y,How would you explain to a web developer who isn't a database guru why some people say MongoDB isn't good for production use?,"A lot of products that require a database at all are innately relational.

In other words, you either end up duplicating data all over your MongoDB database, or you require that the client app perform the joins in your API server language of choice.

A good SQL database like PostgreSQL or MySQL is typically written in a low level language that's very fast. It compiles every query and attempts to optimize it to minimize the operations it needs to perform. It can easily be the case that a compiled query could end up returning 1/100 (or 1/1,000,000) of the data required by performing the equivalent queries on MongoDB.

And all the calculations are performed in highly optimized low level code.

Most of the arguments in support of MongoDB are about the fact that it's really easy to get it working quickly, and really easy to change the schema dynamically. These mirror the arguments that are used in support of dynamic programming languages.

I propose that having no strict schema is not a long term advantage at all.

Some data can be stored as a searchable blob without breaking the database. PostgreSQL has that as a column type now, and it can be useful. But for the most part, similar to how static types can help a project to encourage strong engineering principles and help it remain flexible and extendable over the long term, an explicit schema adds to the software engineering foundation of a project.

That's not to say that MongoDB is necessarily bad for all purposes. I just think that the situations in which MongoDB is the best possible database are much more specialized than are commonly advised by its fans. I have been involved with maybe a dozen projects over the past few years, and maybe two have them have used MongoDB. In my opinion, neither of those were well suited for MongoDB; instead, I think all were well suited for PostgreSQL, though at least one would have been better served by yet another database (maybe Cassandra? The choice of PostgreSQL was made by a developer before I joined).

So my ultimate point here is that you should learn more than one tool. That you shouldn't make decisions based on how hard it is to start a project with that technology, but rather longer term maintenance concerns. And finally, like many things in software, “It depends.”","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/ydon398w4l6q2kg1', 'title': ""How would you explain to a web developer who isn't a database guru why some people say MongoDB isn't good for production use?"", 'score': {'original': 0.9994, 'ai': 0.0006}, 'blocks': [{'text': ""A lot of products that require a database at all are innately relational.\n\nIn other words, you either end up duplicating data all over your MongoDB database, or you require that the client app perform the joins in your API server language of choice.\n\nA good SQL database like PostgreSQL or MySQL is typically written in a low level language that's very fast. It compiles every query and attempts to optimize it to minimize the operations it needs to perform. It can easily be the case that a compiled query could end up returning 1/100 (or 1/1,000,000) of the data required by performing the equivalent queries on MongoDB.\n\nAnd all the calculations are performed in highly optimized low level code.\n\nMost of the arguments in support of MongoDB are about the fact that it's really easy to get it working quickly, and really easy to change the schema dynamically. These mirror the arguments that are used in support of dynamic programming languages.\n\nI propose that having no strict schema is not a long term advantage at all.\n\nSome data can be stored as a searchable blob without breaking the database. PostgreSQL has that as a column type now, and it can be useful. But for the most part, similar to how static types can help a project to encourage strong engineering principles and help it remain flexible and extendable over the long term, an explicit schema adds to the software engineering foundation of a project.\n\nThat's not to say that MongoDB is necessarily bad for all purposes. I just think that the situations in which MongoDB is the best possible database are much more specialized than are commonly advised by its fans. I have been involved with maybe a dozen projects over the past few years, and maybe two have them have used MongoDB. In my opinion, neither of those were well suited for MongoDB; instead, I think all were well suited for PostgreSQL, though at least one would have been better served by yet another database (maybe Cassandra? The choice of PostgreSQL was made by a developer before I joined).\n\nSo my ultimate point here is that you should learn more than one tool. That you shouldn't make decisions based on how hard it is to start a project with that technology, but rather longer term maintenance concerns. And finally, like many things in software, “It depends.”"", 'result': {'fake': 0.0006, 'real': 0.9994}, 'status': 'success'}], 'credits_used': 4, 'credits': 1983308, 'subscription': 0, 'content': ""A lot of products that require a database at all are innately relational.\n\nIn other words, you either end up duplicating data all over your MongoDB database, or you require that the client app perform the joins in your API server language of choice.\n\nA good SQL database like PostgreSQL or MySQL is typically written in a low level language that's very fast. It compiles every query and attempts to optimize it to minimize the operations it needs to perform. It can easily be the case that a compiled query could end up returning 1/100 (or 1/1,000,000) of the data required by performing the equivalent queries on MongoDB.\n\nAnd all the calculations are performed in highly optimized low level code.\n\nMost of the arguments in support of MongoDB are about the fact that it's really easy to get it working quickly, and really easy to change the schema dynamically. These mirror the arguments that are used in support of dynamic programming languages.\n\nI propose that having no strict schema is not a long term advantage at all.\n\nSome data can be stored as a searchable blob without breaking the database. PostgreSQL has that as a column type now, and it can be useful. But for the most part, similar to how static types can help a project to encourage strong engineering principles and help it remain flexible and extendable over the long term, an explicit schema adds to the software engineering foundation of a project.\n\nThat's not to say that MongoDB is necessarily bad for all purposes. I just think that the situations in which MongoDB is the best possible database are much more specialized than are commonly advised by its fans. I have been involved with maybe a dozen projects over the past few years, and maybe two have them have used MongoDB. In my opinion, neither of those were well suited for MongoDB; instead, I think all were well suited for PostgreSQL, though at least one would have been better served by yet another database (maybe Cassandra? The choice of PostgreSQL was made by a developer before I joined).\n\nSo my ultimate point here is that you should learn more than one tool. That you shouldn't make decisions based on how hard it is to start a project with that technology, but rather longer term maintenance concerns. And finally, like many things in software, “It depends.”"", 'aiModelVersion': '1'}",0.9994
Sassmatron - Master of All Trades Except Humility,2y,Will low code replace developers?,"No.

The idea of low-code comes from a severe misunderstanding about programming. It assumes that the difficult part of programming is the code part.

It’s not. Anyone can type a semicolon at the end of a statement. Anyone can balance open and close parentheses. Anyone can type int main() { return 0; }

What’s challenging about programming is seeing the problem at hand, mentally constructing a solution, and clearly communicating said solution to the computer. The language is just the tool by which you do that. No low-code solution will change that. For a relevant XKCD

And like with programming languages, no low-code solution can remove the necessity of mentally constructing and clearly communicating a solution. You may have a tool that’s not code, but as we’ve already established, that’s not the hard part.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/mru72ki64v5dyq8p', 'title': 'Will low code replace developers?', 'score': {'original': 0.7722, 'ai': 0.2278}, 'blocks': [{'text': 'No.\n\nThe idea of low-code comes from a severe misunderstanding about programming. It assumes that the difficult part of programming is the code part.\n\nIt’s not. Anyone can type a semicolon at the end of a statement. Anyone can balance open and close parentheses. Anyone can type int main() { return 0; }\n\nWhat’s challenging about programming is seeing the problem at hand, mentally constructing a solution, and clearly communicating said solution to the computer. The language is just the tool by which you do that. No low-code solution will change that. For a relevant XKCD\n\nAnd like with programming languages, no low-code solution can remove the necessity of mentally constructing and clearly communicating a solution. You may have a tool that’s not code, but as we’ve already established, that’s not the hard part.', 'result': {'fake': 0.2278, 'real': 0.7722}, 'status': 'success'}], 'credits_used': 2, 'credits': 1983306, 'subscription': 0, 'content': 'No.\n\nThe idea of low-code comes from a severe misunderstanding about programming. It assumes that the difficult part of programming is the code part.\n\nIt’s not. Anyone can type a semicolon at the end of a statement. Anyone can balance open and close parentheses. Anyone can type int main() { return 0; }\n\nWhat’s challenging about programming is seeing the problem at hand, mentally constructing a solution, and clearly communicating said solution to the computer. The language is just the tool by which you do that. No low-code solution will change that. For a relevant XKCD\n\nAnd like with programming languages, no low-code solution can remove the necessity of mentally constructing and clearly communicating a solution. You may have a tool that’s not code, but as we’ve already established, that’s not the hard part.', 'aiModelVersion': '1'}",0.7722
Rumana Jameel,1y,"For a full-stack developer, what languages are required?","Know the basics!

In this answer, we'll be discussing what languages are required for a full-stack developer. So, let's get cracking and figure out why these specific languages are needed!

The full-stack developer is a versatile professional who can do it all — programming, designing, and deployment. A full-stack developer needs near-native fluency in at least one programming language (JavaScript), as well as knowledge of HTML and CSS. For example, if you want to become a back-end developer, you need to know HTML/CSS; JavaScript; Java, or another object-oriented programming language such as Python.

A full-stack developer is one of the most sought-after professions. A full-stack developer can ensure that a business runs smoothly and efficiently with minimal IT resources.

Important Languages for full stack developers:

When you're starting, it's best to use the software development stack where each team can have a say in the design, architecture, and deployment tools such as version control, continuous integration, versioning, and deployment. The following is a brief description of each language and its uses:

HTML & CSS

Hypertext Markup Language, or HTML, is what you use to make web pages. A web page may have audio, text, and other components. By using HTML, you provide the web browser the ability to understand what the website should look like. It has several improvements and is the main language for web development.

2. JavaScript

After becoming comfortable with simpler languages like HTML and CSS, you can advance to JavaScript, which is more complex. For good front-end development, JavaScript is a need, making it the third most popular language among developers.

3. Python

Let's think about a back-end language now that we've talked about front-end languages. For server-side programming, a variety of full-stack developer languages are available. But Python is the most widely used. It is a flexible language that has uses in a variety of industries, such as back-end web development, data analysis, and machine learning.

I've mentioned a few languages to get you started. On your trip, you'll run into a lot of other languages, like Ruby on Rails, PHP, etc. However, you might be unsure about how to begin this adventure. But don't stress; we're here to assist you. Check out the online courses in Full-Stack Development if you're interested in learning more about full-stack software development and its associated programming languages.

Why choose Online courses and what features to look for?

Today, a variety of platforms provide numerous possibilities for studying Full-Stack software development. Anyone, wherever, can take an online course to brush up on existing abilities or gain new ones. If you take an effort to improve your abilities and stay current, employers will see you more favorably. Online courses offer the convenience of home learning along with a number of advantages.

Feature to look for in an online Full-Stack Software Development Program:

Elite Domain Specialization: By researching topics that are pertinent to the area in which you are most proficient, you can increase your knowledge while developing your abilities. DSA is no different.. Some businesses give their experts access to a wide range of premium domain options from which they can choose. This offers professionals the chance to develop their skill sets and flourish in a certain area.

Online courses are one of the best ways to learn web development. You can learn through

Some of the popular online institutes to learn software development:

Udacity: Udacity focuses solely on imparting software development knowledge. It is an online university that offers classes in JQuery, HTML5, and CSS3. Typically, lectures are combined with a few practice exercises that require hands-on work. Before moving on, students can test their understanding of the material using the exercises, which are not assessed.
Learnbay: The most thorough Full-Stack Software Development Program is offered by Learnbay and is accessible from anywhere, even in Bangalore. The Full-Stack Software Development Program consists of a wide range of difficult tasks. They differ drastically from one another in a lot of ways. Additionally, Learnbay provides assessment questions so you can determine your level of comprehension.

The Learnbay Full-Stack Software Development Program is one of the best since it thoroughly discusses all necessary software development. The course starts with the basics before moving on to more advanced subjects including search algorithms, graphs, and dynamic memory allocation.

Full Stack Software Development Program

Weekday Batches: 8 Months
Weekend Batches: 9 Months
Training: 300+ Hours of training

These additional, exceptional features of Learnbay courses:

Fantastic Teachers:

This program's instructors are great; they are all working professionals who are eager to assist. They provide the most comprehensive course information on the market. These presenters give informative live lectures.

Elite Domains in Software course:

To help you succeed in MAANG interviews, there are extra courses on Real-time Projects & Use Cases, and Interview Preparation. You can specialize in and master domain-specific industrial projects in additional Elite Domains for Full Stack, Product Management, Web 3.0 Developer, and DevOps & Clouds in the Full Stack Software Development Program.

Projects:

For students at all skill levels, from novices to specialists, the Learnbay course contains real-time projects. You will take part in sizeable full-stack development projects throughout the semester. You might experience what it's like to work in the real world while you're still in school.

Some of the projects are:

Food Delivery Application
VR-Based Application
Chatting/Messaging Application
Authentication
CRUD

Final Note:

Despite the wide range of options, some courses are more effective than others at implementing effective teaching methods and fully satisfying the needs of students.

Therefore, if you're interested in learning Full Stack Software Development and working as a software developer, you might consider Learnbay's Full Stack Software Development Program. Taking an authorized course with top-notch support is essential if you want to achieve your goals.

Thank you for reading.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/tbxuq92p5ogv7rdk', 'title': 'For a full-stack developer, what languages are required?', 'score': {'original': 0, 'ai': 1}, 'blocks': [{'text': ""Know the basics!\n\nIn this answer, we'll be discussing what languages are required for a full-stack developer. So, let's get cracking and figure out why these specific languages are needed!\n\nThe full-stack developer is a versatile professional who can do it all — programming, designing, and deployment. A full-stack developer needs near-native fluency in at least one programming language (JavaScript), as well as knowledge of HTML and CSS. For example, if you want to become a back-end developer, you need to know HTML/CSS; JavaScript; Java, or another object-oriented programming language such as Python.\n\nA full-stack developer is one of the most sought-after professions. A full-stack developer can ensure that a business runs smoothly and efficiently with minimal IT resources.\n\nImportant Languages for full stack developers:\n\nWhen you're starting, it's best to use the software development stack where each team can have a say in the design, architecture, and deployment tools such as version control, continuous integration, versioning, and deployment. The following is a brief description of each language and its uses:\n\nHTML & CSS\n\nHypertext Markup Language, or HTML, is what you use to make web pages. A web page may have audio, text, and other components. By using HTML, you provide the web browser the ability to understand what the website should look like. It has several improvements and is the main language for web development.\n\n2. JavaScript\n\nAfter becoming comfortable with simpler languages like HTML and CSS, you can advance to JavaScript, which is more complex. For good front-end development, JavaScript is a need, making it the third most popular language among developers.\n\n3. Python\n\nLet's think about a back-end language now that we've talked about front-end languages. For server-side programming, a variety of full-stack developer languages are available. But Python is the most widely used. It is a flexible language that has uses in a variety of industries, such as back-end web development, data analysis, and machine learning.\n\nI've mentioned a few languages to get you started. On your trip, you'll run into a lot of other languages, like Ruby on Rails, PHP, etc. However, you might be unsure about how to begin this adventure. But don't stress; we're here to assist you. Check out the online courses in Full-Stack Development if you're interested in learning more about full-stack software development and its associated programming languages.\n\nWhy choose Online courses and what features to look for?\n\nToday, a variety of platforms provide numerous possibilities for studying Full-Stack software development. Anyone, wherever, can take an online course to brush up on existing abilities or gain new ones. If you take an effort to improve your abilities and stay current, employers will see you more favorably. Online courses offer the convenience of home learning along with a number of advantages.\n\nFeature to look for in an online Full-Stack Software Development Program:\n\nElite Domain Specialization: By researching topics that are pertinent to the area in which you are most proficient, you can increase your knowledge while developing your abilities. DSA is no different.. Some businesses give their experts access to a wide range of premium domain options from which they can choose. This offers professionals the chance to"", 'result': {'fake': 1, 'real': 0}, 'status': 'success'}, {'text': ""develop their skill sets and flourish in a certain area.\n\nOnline courses are one of the best ways to learn web development. You can learn through\n\nSome of the popular online institutes to learn software development:\n\nUdacity: Udacity focuses solely on imparting software development knowledge. It is an online university that offers classes in JQuery, HTML5, and CSS3. Typically, lectures are combined with a few practice exercises that require hands-on work. Before moving on, students can test their understanding of the material using the exercises, which are not assessed.\nLearnbay: The most thorough Full-Stack Software Development Program is offered by Learnbay and is accessible from anywhere, even in Bangalore. The Full-Stack Software Development Program consists of a wide range of difficult tasks. They differ drastically from one another in a lot of ways. Additionally, Learnbay provides assessment questions so you can determine your level of comprehension.\n\nThe Learnbay Full-Stack Software Development Program is one of the best since it thoroughly discusses all necessary software development. The course starts with the basics before moving on to more advanced subjects including search algorithms, graphs, and dynamic memory allocation.\n\nFull Stack Software Development Program\n\nWeekday Batches: 8 Months\nWeekend Batches: 9 Months\nTraining: 300+ Hours of training\n\nThese additional, exceptional features of Learnbay courses:\n\nFantastic Teachers:\n\nThis program's instructors are great; they are all working professionals who are eager to assist. They provide the most comprehensive course information on the market. These presenters give informative live lectures.\n\nElite Domains in Software course:\n\nTo help you succeed in MAANG interviews, there are extra courses on Real-time Projects & Use Cases, and Interview Preparation. You can specialize in and master domain-specific industrial projects in additional Elite Domains for Full Stack, Product Management, Web 3.0 Developer, and DevOps & Clouds in the Full Stack Software Development Program.\n\nProjects:\n\nFor students at all skill levels, from novices to specialists, the Learnbay course contains real-time projects. You will take part in sizeable full-stack development projects throughout the semester. You might experience what it's like to work in the real world while you're still in school.\n\nSome of the projects are:\n\nFood Delivery Application\nVR-Based Application\nChatting/Messaging Application\nAuthentication\nCRUD\n\nFinal Note:\n\nDespite the wide range of options, some courses are more effective than others at implementing effective teaching methods and fully satisfying the needs of students.\n\nTherefore, if you're interested in learning Full Stack Software Development and working as a software developer, you might consider Learnbay's Full Stack Software Development Program. Taking an authorized course with top-notch support is essential if you want to achieve your goals.\n\nThank you for reading."", 'result': {'fake': 1, 'real': 0}, 'status': 'success'}], 'credits_used': 10, 'credits': 1983296, 'subscription': 0, 'content': ""Know the basics!\n\nIn this answer, we'll be discussing what languages are required for a full-stack developer. So, let's get cracking and figure out why these specific languages are needed!\n\nThe full-stack developer is a versatile professional who can do it all — programming, designing, and deployment. A full-stack developer needs near-native fluency in at least one programming language (JavaScript), as well as knowledge of HTML and CSS. For example, if you want to become a back-end developer, you need to know HTML/CSS; JavaScript; Java, or another object-oriented programming language such as Python.\n\nA full-stack developer is one of the most sought-after professions. A full-stack developer can ensure that a business runs smoothly and efficiently with minimal IT resources.\n\nImportant Languages for full stack developers:\n\nWhen you're starting, it's best to use the software development stack where each team can have a say in the design, architecture, and deployment tools such as version control, continuous integration, versioning, and deployment. The following is a brief description of each language and its uses:\n\nHTML & CSS\n\nHypertext Markup Language, or HTML, is what you use to make web pages. A web page may have audio, text, and other components. By using HTML, you provide the web browser the ability to understand what the website should look like. It has several improvements and is the main language for web development.\n\n2. JavaScript\n\nAfter becoming comfortable with simpler languages like HTML and CSS, you can advance to JavaScript, which is more complex. For good front-end development, JavaScript is a need, making it the third most popular language among developers.\n\n3. Python\n\nLet's think about a back-end language now that we've talked about front-end languages. For server-side programming, a variety of full-stack developer languages are available. But Python is the most widely used. It is a flexible language that has uses in a variety of industries, such as back-end web development, data analysis, and machine learning.\n\nI've mentioned a few languages to get you started. On your trip, you'll run into a lot of other languages, like Ruby on Rails, PHP, etc. However, you might be unsure about how to begin this adventure. But don't stress; we're here to assist you. Check out the online courses in Full-Stack Development if you're interested in learning more about full-stack software development and its associated programming languages.\n\nWhy choose Online courses and what features to look for?\n\nToday, a variety of platforms provide numerous possibilities for studying Full-Stack software development. Anyone, wherever, can take an online course to brush up on existing abilities or gain new ones. If you take an effort to improve your abilities and stay current, employers will see you more favorably. Online courses offer the convenience of home learning along with a number of advantages.\n\nFeature to look for in an online Full-Stack Software Development Program:\n\nElite Domain Specialization: By researching topics that are pertinent to the area in which you are most proficient, you can increase your knowledge while developing your abilities. DSA is no different.. Some businesses give their experts access to a wide range of premium domain options from which they can choose. This offers professionals the chance to develop their skill sets and flourish in a certain area.\n\nOnline courses are one of the best ways to learn web development. You can learn through\n\nSome of the popular online institutes to learn software development:\n\nUdacity: Udacity focuses solely on imparting software development knowledge. It is an online university that offers classes in JQuery, HTML5, and CSS3. Typically, lectures are combined with a few practice exercises that require hands-on work. Before moving on, students can test their understanding of the material using the exercises, which are not assessed.\nLearnbay: The most thorough Full-Stack Software Development Program is offered by Learnbay and is accessible from anywhere, even in Bangalore. The Full-Stack Software Development Program consists of a wide range of difficult tasks. They differ drastically from one another in a lot of ways. Additionally, Learnbay provides assessment questions so you can determine your level of comprehension.\n\nThe Learnbay Full-Stack Software Development Program is one of the best since it thoroughly discusses all necessary software development. The course starts with the basics before moving on to more advanced subjects including search algorithms, graphs, and dynamic memory allocation.\n\nFull Stack Software Development Program\n\nWeekday Batches: 8 Months\nWeekend Batches: 9 Months\nTraining: 300+ Hours of training\n\nThese additional, exceptional features of Learnbay courses:\n\nFantastic Teachers:\n\nThis program's instructors are great; they are all working professionals who are eager to assist. They provide the most comprehensive course information on the market. These presenters give informative live lectures.\n\nElite Domains in Software course:\n\nTo help you succeed in MAANG interviews, there are extra courses on Real-time Projects & Use Cases, and Interview Preparation. You can specialize in and master domain-specific industrial projects in additional Elite Domains for Full Stack, Product Management, Web 3.0 Developer, and DevOps & Clouds in the Full Stack Software Development Program.\n\nProjects:\n\nFor students at all skill levels, from novices to specialists, the Learnbay course contains real-time projects. You will take part in sizeable full-stack development projects throughout the semester. You might experience what it's like to work in the real world while you're still in school.\n\nSome of the projects are:\n\nFood Delivery Application\nVR-Based Application\nChatting/Messaging Application\nAuthentication\nCRUD\n\nFinal Note:\n\nDespite the wide range of options, some courses are more effective than others at implementing effective teaching methods and fully satisfying the needs of students.\n\nTherefore, if you're interested in learning Full Stack Software Development and working as a software developer, you might consider Learnbay's Full Stack Software Development Program. Taking an authorized course with top-notch support is essential if you want to achieve your goals.\n\nThank you for reading."", 'aiModelVersion': '1'}",0.0
Faisal Khan,Updated 9y,What is the best way to give a PowerPoint presentation?,"I always look to Guy Kawasaki's 10-20-30 Rule.




10 Slides
20 Minutes to deliver the presentation
30 is the minimum font size you are to use.


If you use the above rule, you'll learn to just concentrate on the important points and leave the fluff out. Needless to say, it does depend on the type of presentation you're giving and the audience. Having said that, the above rule comes in very handy! (try to stick to 10 slides, its okay if you have to go to 12-14 slides).

Read more at the original source: The 10/20/30 Rule of PowerPoint

...and as a bonus:","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/61zfsapw3coduvl5', 'title': 'What is the best way to give a PowerPoint presentation?', 'score': {'original': 0.9932, 'ai': 0.0068}, 'blocks': [{'text': ""I always look to Guy Kawasaki's 10-20-30 Rule.\n\n\n\n\n10 Slides\n20 Minutes to deliver the presentation\n30 is the minimum font size you are to use.\n\n\nIf you use the above rule, you'll learn to just concentrate on the important points and leave the fluff out. Needless to say, it does depend on the type of presentation you're giving and the audience. Having said that, the above rule comes in very handy! (try to stick to 10 slides, its okay if you have to go to 12-14 slides).\n\nRead more at the original source: The 10/20/30 Rule of PowerPoint\n\n...and as a bonus:"", 'result': {'fake': 0.0068, 'real': 0.9932}, 'status': 'success'}], 'credits_used': 1, 'credits': 1983295, 'subscription': 0, 'content': ""I always look to Guy Kawasaki's 10-20-30 Rule.\n\n\n\n\n10 Slides\n20 Minutes to deliver the presentation\n30 is the minimum font size you are to use.\n\n\nIf you use the above rule, you'll learn to just concentrate on the important points and leave the fluff out. Needless to say, it does depend on the type of presentation you're giving and the audience. Having said that, the above rule comes in very handy! (try to stick to 10 slides, its okay if you have to go to 12-14 slides).\n\nRead more at the original source: The 10/20/30 Rule of PowerPoint\n\n...and as a bonus:"", 'aiModelVersion': '1'}",0.9932
Harshit Paul,5y,What is a responsive website?,"A responsive website is one where content gets rendered in a flexible yet intended manner on the basis of the devices & OS on which it gets summoned.

With the speed at which technology has improvised, the end users are having the flexibility of surfing the internet conveniently through mobile devices. Therefore, a responsive website is the need of the hour as it is important for a website to be optimized in such a manner that it gets rendered properly in various mobile devices. Even if you are creating a new website, instead of developing a separate one for mobile users it is ideal to create a responsive website that fits properly in all kinds of devices.

Some tips to keep in mind for a Responsive website -

Use a Single Website - It is ideal to redesign your existing website using a dynamic layout that is rendered properly in both desktop and mobile devices. After all, a website with a uniform URL is easier and less expensive to maintain than having multiple.
Make Sure the Site is Scalable - While designing, you have to keep in mind that the screen of a mobile is smaller than a desktop. The elements should be arranged in a way that the user does not face any problem while exploring the site.
Size of Hyperlinks and Buttons - Keep large-sized buttons and do proper usability testing to make sure that all the hyperlinks and buttons are easily clickable on the mobile screen.
Testing mobile friendliness - Google has developed a tool to test whether your website is mobile friendly or not.
Don’t make it monotonous & ensure that all media elements are playable.
Avoid Lengthy Forms - Provide easy forms that do not require that much information from the user. Making their job easier will increase your website’s mobile friendliness.
Cross Browser Compatibility
 - You must ensure that all the features of your website work properly in those browsers and there are no breakage or rendering issues. Test your website runs seamlessly across all major browsers using cloud-based testing platforms like LambdaTest to ensure that your site is cross browser compatible.

Last, but not the least take feedback from users.

Cheers,
Harshit Paul","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/zipxug31ons70y26', 'title': 'What is a responsive website?', 'score': {'original': 0.998, 'ai': 0.002}, 'blocks': [{'text': 'A responsive website is one where content gets rendered in a flexible yet intended manner on the basis of the devices & OS on which it gets summoned.\n\nWith the speed at which technology has improvised, the end users are having the flexibility of surfing the internet conveniently through mobile devices. Therefore, a responsive website is the need of the hour as it is important for a website to be optimized in such a manner that it gets rendered properly in various mobile devices. Even if you are creating a new website, instead of developing a separate one for mobile users it is ideal to create a responsive website that fits properly in all kinds of devices.\n\nSome tips to keep in mind for a Responsive website -\n\nUse a Single Website - It is ideal to redesign your existing website using a dynamic layout that is rendered properly in both desktop and mobile devices. After all, a website with a uniform URL is easier and less expensive to maintain than having multiple.\nMake Sure the Site is Scalable - While designing, you have to keep in mind that the screen of a mobile is smaller than a desktop. The elements should be arranged in a way that the user does not face any problem while exploring the site.\nSize of Hyperlinks and Buttons - Keep large-sized buttons and do proper usability testing to make sure that all the hyperlinks and buttons are easily clickable on the mobile screen.\nTesting mobile friendliness - Google has developed a tool to test whether your website is mobile friendly or not.\nDon’t make it monotonous & ensure that all media elements are playable.\nAvoid Lengthy Forms - Provide easy forms that do not require that much information from the user. Making their job easier will increase your website’s mobile friendliness.\nCross Browser Compatibility\n - You must ensure that all the features of your website work properly in those browsers and there are no breakage or rendering issues. Test your website runs seamlessly across all major browsers using cloud-based testing platforms like LambdaTest to ensure that your site is cross browser compatible.\n\nLast, but not the least take feedback from users.\n\nCheers,\nHarshit Paul', 'result': {'fake': 0.0022, 'real': 0.9978}, 'status': 'success'}], 'credits_used': 4, 'credits': 1983291, 'subscription': 0, 'content': 'A responsive website is one where content gets rendered in a flexible yet intended manner on the basis of the devices & OS on which it gets summoned.\n\nWith the speed at which technology has improvised, the end users are having the flexibility of surfing the internet conveniently through mobile devices. Therefore, a responsive website is the need of the hour as it is important for a website to be optimized in such a manner that it gets rendered properly in various mobile devices. Even if you are creating a new website, instead of developing a separate one for mobile users it is ideal to create a responsive website that fits properly in all kinds of devices.\n\nSome tips to keep in mind for a Responsive website -\n\nUse a Single Website - It is ideal to redesign your existing website using a dynamic layout that is rendered properly in both desktop and mobile devices. After all, a website with a uniform URL is easier and less expensive to maintain than having multiple.\nMake Sure the Site is Scalable - While designing, you have to keep in mind that the screen of a mobile is smaller than a desktop. The elements should be arranged in a way that the user does not face any problem while exploring the site.\nSize of Hyperlinks and Buttons - Keep large-sized buttons and do proper usability testing to make sure that all the hyperlinks and buttons are easily clickable on the mobile screen.\nTesting mobile friendliness - Google has developed a tool to test whether your website is mobile friendly or not.\nDon’t make it monotonous & ensure that all media elements are playable.\nAvoid Lengthy Forms - Provide easy forms that do not require that much information from the user. Making their job easier will increase your website’s mobile friendliness.\nCross Browser Compatibility\n - You must ensure that all the features of your website work properly in those browsers and there are no breakage or rendering issues. Test your website runs seamlessly across all major browsers using cloud-based testing platforms like LambdaTest to ensure that your site is cross browser compatible.\n\nLast, but not the least take feedback from users.\n\nCheers,\nHarshit Paul', 'aiModelVersion': '1'}",0.998
Hafsa Noor,1y,"For a full-stack developer, what languages are required?","Full-stack software development is a mixture of front-end and back-end development. Full-stack developers use different programming languages for front-end and back-end development. Front-end development possesses a different kind of nature from the back-end.

Front-end Development:

A front-end web developer is a person who makes everything you see on a website, including the buttons, links, animations, and other elements. It is the front-end developer's responsibility to translate the client's vision and design concept into code.

Programming languages for front-end development:

HTML
SASS
AngularJS
ReactJS

Back-end Development:

What takes place essentially behind the scene is called back-end development. Their tasks were reduced to database management, back-end development, program coding, and programming interface creation for websites and applications.

Programming languages for back-end development:

Python
Java
JavaScript
Ruby

Where to learn these programming languages?

You can learn programming languages through College, Free Sources, and Online Course providers.

From College:

If one opts into college, it would take 3 to 4 years to complete the degree program that has been offered by the college. At the same time, the students won't get much exposure to programming languages compared to the online course providers. Not every college offers fewer hands-on projects in programming languages.

From Free Sources:

Code Academy:

Codeacademy teaches its learners in a highly interactive way through short stories and easy teachings. It's highly innovative, fun-oriented, and interactive. The programs covered by Codeacademy, are HTML & CSS, JavaScript, PHP, Python, Ruby, AngularJS, The Command Line, Sass, Rails, Git, SQL, Java, and jQuery. Code Academy won’t teach what programming languages are specifically used for what.

2. Free code camp:

The free code camp is an open-source site that teaches you free of cost and it operates as a nonprofit organization. The free code camp is famous for providing highly knowledgeable content on coding to its learners and basically everyone who wants to learn. Free code camp won't promise any job assistance and placements to its learners.

Topics covered by free code camp: HTML, CSS, Bootstrap, JavaScript, Databases, DevTools, Node.js, React.js, and D3.js.

3. MIT open courseware:

The MIT open courseware provides all courses for free of cost, their motive to make courses available to everyone made this possible. Unlike MIT college this site won’t give any job assistance, project practical work, and placements to its learners.

From Online Course Providers:

Taking a course online mode from course providers has benefits over alternatives in this field. In this rapidly changing world, by taking online courses you can learn at your own pace. Most employers are changing their recruiting drive towards online courses. Because online courses are more effective compared to both free courses and college.

Upgrad:

Upgrad provides an Executive Post-graduate Program in Software Development - Specialisation in Full Stack Development. This course certification is provided by the IIIT-B.

Course Duration for this Executive Post-graduate Program in software development - Specialisation in Full Stack Development is 13 months. It has 7+ case studies and projects, 10+ programming tools & languages, 45+ live sessions, 10+ programming tools, and languages, and 300+ contents. They provide fewer case studies and projects to their learners.

2. Learnbay:

Learnbay provides a great experience to its learners who pursue Full stack software development. The specialty in Learnbay is, working professionals get to attend live classes on their flexible schedule. If someone misses the class they will be able to attend the next live class of the day.

Course Duration for Full Stack Software Development program:

On weekdays it's 2 hours per day for a span of 8 months
At weekends it's 3.5 hours per day for a span of 9 months

Here are some features of Learnbay:

Hands-on projects:

Learnbay provides an excellent variety of projects to its students in addition to 300+ coding problems. Students here are trained by industry experts themselves who have formerly worked in MAANG. By training under the guidance of industry experts, students will get a different kind of exposure.

They provide 12+ projects for their learners here are some of them:

Blog Site.
Food Delivery Application.
Crud
Available Domains:

A candidate studies and masters a certain subject through software development, which is known as an elite domain. By selecting the elite domain, the applicant will have a higher chance of being noticed by the company than generic candidates. Using an elite domain allows students to study faster and more efficiently. Full Stack Software Development provides the following Domains - Full Stack, Product Management, Web Development, DevOps, and Clouds

Importance of Elite Domain:

An elite domain is a strategy where the candidate learns a certain topic and masters it with software development. By selecting the elite domain the candidate will be able to be recognized by the employer more than the generic candidates. As Learnbay knows the importance of the elite domain they suggest every candidate choose an elite domain to their interest, if one has confusion about selecting a domain, Learnbay itself provides assistance and evaluates that candidate and gives them a domain that suits them.

Job Assistance:

They provide job assistance from the point of learning to the point of employment. Learnbay has more than 450+ hiring partners. It provides everything from grooming the profile of the candidate to preparing them for the interview questions, everything is handled by the respective industry experts. Learnbay has the highest salary hike of 250%.

Final Thoughts:

Online course providers are the best option to learn full-stack software development programs and their programming languages.

Who is best among these online course providers?

I will go with Learnbay because they provide more facilities than Upgrad: the projects are more in Learnbay compared to the Upgrad, and Learnbay provides elite domains to its learners on the other hand Upgrad have no elite domain for its learners. They also provide advanced algorithms and data structures.

All the best.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/zm5w4odk1xt2e7v3', 'title': 'For a full-stack developer, what languages are required?', 'score': {'original': 0.729, 'ai': 0.271}, 'blocks': [{'text': ""Full-stack software development is a mixture of front-end and back-end development. Full-stack developers use different programming languages for front-end and back-end development. Front-end development possesses a different kind of nature from the back-end.\n\nFront-end Development:\n\nA front-end web developer is a person who makes everything you see on a website, including the buttons, links, animations, and other elements. It is the front-end developer's responsibility to translate the client's vision and design concept into code.\n\nProgramming languages for front-end development:\n\nHTML\nSASS\nAngularJS\nReactJS\n\nBack-end Development:\n\nWhat takes place essentially behind the scene is called back-end development. Their tasks were reduced to database management, back-end development, program coding, and programming interface creation for websites and applications.\n\nProgramming languages for back-end development:\n\nPython\nJava\nJavaScript\nRuby\n\nWhere to learn these programming languages?\n\nYou can learn programming languages through College, Free Sources, and Online Course providers.\n\nFrom College:\n\nIf one opts into college, it would take 3 to 4 years to complete the degree program that has been offered by the college. At the same time, the students won't get much exposure to programming languages compared to the online course providers. Not every college offers fewer hands-on projects in programming languages.\n\nFrom Free Sources:\n\nCode Academy:\n\nCodeacademy teaches its learners in a highly interactive way through short stories and easy teachings. It's highly innovative, fun-oriented, and interactive. The programs covered by Codeacademy, are HTML & CSS, JavaScript, PHP, Python, Ruby, AngularJS, The Command Line, Sass, Rails, Git, SQL, Java, and jQuery. Code Academy won’t teach what programming languages are specifically used for what.\n\n2. Free code camp:\n\nThe free code camp is an open-source site that teaches you free of cost and it operates as a nonprofit organization. The free code camp is famous for providing highly knowledgeable content on coding to its learners and basically everyone who wants to learn. Free code camp won't promise any job assistance and placements to its learners.\n\nTopics covered by free code camp: HTML, CSS, Bootstrap, JavaScript, Databases, DevTools, Node.js, React.js, and D3.js.\n\n3. MIT open courseware:\n\nThe MIT open courseware provides all courses for free of cost, their motive to make courses available to everyone made this possible. Unlike MIT college this site won’t give any job assistance, project practical work, and placements to its learners.\n\nFrom Online Course Providers:\n\nTaking a course online mode from course providers has benefits over alternatives in this field. In this rapidly changing world, by taking online courses you can learn at your own pace. Most employers are changing their recruiting drive towards online courses. Because online courses are more effective compared to both free courses and college.\n\nUpgrad:\n\nUpgrad provides an Executive Post-graduate Program in Software Development - Specialisation in Full Stack Development. This course certification is provided by the IIIT-B.\n\nCourse Duration for this Executive Post-graduate Program in software development - Specialisation in Full Stack Development is 13 months. It has 7+ case studies and projects, 10+ programming tools & languages, 45+ live sessions, 10+ programming tools, and languages, and 300+ contents. They provide fewer case studies and projects to their learners.\n\n2. Learnbay:\n\nLearnbay provides a great experience to its learners who pursue Full stack software development. The specialty in Learnbay is, working professionals get to attend live classes on their"", 'result': {'fake': 0.0117, 'real': 0.9883}, 'status': 'success'}, {'text': ""flexible schedule. If someone misses the class they will be able to attend the next live class of the day.\n\nCourse Duration for Full Stack Software Development program:\n\nOn weekdays it's 2 hours per day for a span of 8 months\nAt weekends it's 3.5 hours per day for a span of 9 months\n\nHere are some features of Learnbay:\n\nHands-on projects:\n\nLearnbay provides an excellent variety of projects to its students in addition to 300+ coding problems. Students here are trained by industry experts themselves who have formerly worked in MAANG. By training under the guidance of industry experts, students will get a different kind of exposure.\n\nThey provide 12+ projects for their learners here are some of them:\n\nBlog Site.\nFood Delivery Application.\nCrud\nAvailable Domains:\n\nA candidate studies and masters a certain subject through software development, which is known as an elite domain. By selecting the elite domain, the applicant will have a higher chance of being noticed by the company than generic candidates. Using an elite domain allows students to study faster and more efficiently. Full Stack Software Development provides the following Domains - Full Stack, Product Management, Web Development, DevOps, and Clouds\n\nImportance of Elite Domain:\n\nAn elite domain is a strategy where the candidate learns a certain topic and masters it with software development. By selecting the elite domain the candidate will be able to be recognized by the employer more than the generic candidates. As Learnbay knows the importance of the elite domain they suggest every candidate choose an elite domain to their interest, if one has confusion about selecting a domain, Learnbay itself provides assistance and evaluates that candidate and gives them a domain that suits them.\n\nJob Assistance:\n\nThey provide job assistance from the point of learning to the point of employment. Learnbay has more than 450+ hiring partners. It provides everything from grooming the profile of the candidate to preparing them for the interview questions, everything is handled by the respective industry experts. Learnbay has the highest salary hike of 250%.\n\nFinal Thoughts:\n\nOnline course providers are the best option to learn full-stack software development programs and their programming languages.\n\nWho is best among these online course providers?\n\nI will go with Learnbay because they provide more facilities than Upgrad: the projects are more in Learnbay compared to the Upgrad, and Learnbay provides elite domains to its learners on the other hand Upgrad have no elite domain for its learners. They also provide advanced algorithms and data structures.\n\nAll the best."", 'result': {'fake': 0.19, 'real': 0.81}, 'status': 'success'}], 'credits_used': 10, 'credits': 1983281, 'subscription': 0, 'content': ""Full-stack software development is a mixture of front-end and back-end development. Full-stack developers use different programming languages for front-end and back-end development. Front-end development possesses a different kind of nature from the back-end.\n\nFront-end Development:\n\nA front-end web developer is a person who makes everything you see on a website, including the buttons, links, animations, and other elements. It is the front-end developer's responsibility to translate the client's vision and design concept into code.\n\nProgramming languages for front-end development:\n\nHTML\nSASS\nAngularJS\nReactJS\n\nBack-end Development:\n\nWhat takes place essentially behind the scene is called back-end development. Their tasks were reduced to database management, back-end development, program coding, and programming interface creation for websites and applications.\n\nProgramming languages for back-end development:\n\nPython\nJava\nJavaScript\nRuby\n\nWhere to learn these programming languages?\n\nYou can learn programming languages through College, Free Sources, and Online Course providers.\n\nFrom College:\n\nIf one opts into college, it would take 3 to 4 years to complete the degree program that has been offered by the college. At the same time, the students won't get much exposure to programming languages compared to the online course providers. Not every college offers fewer hands-on projects in programming languages.\n\nFrom Free Sources:\n\nCode Academy:\n\nCodeacademy teaches its learners in a highly interactive way through short stories and easy teachings. It's highly innovative, fun-oriented, and interactive. The programs covered by Codeacademy, are HTML & CSS, JavaScript, PHP, Python, Ruby, AngularJS, The Command Line, Sass, Rails, Git, SQL, Java, and jQuery. Code Academy won’t teach what programming languages are specifically used for what.\n\n2. Free code camp:\n\nThe free code camp is an open-source site that teaches you free of cost and it operates as a nonprofit organization. The free code camp is famous for providing highly knowledgeable content on coding to its learners and basically everyone who wants to learn. Free code camp won't promise any job assistance and placements to its learners.\n\nTopics covered by free code camp: HTML, CSS, Bootstrap, JavaScript, Databases, DevTools, Node.js, React.js, and D3.js.\n\n3. MIT open courseware:\n\nThe MIT open courseware provides all courses for free of cost, their motive to make courses available to everyone made this possible. Unlike MIT college this site won’t give any job assistance, project practical work, and placements to its learners.\n\nFrom Online Course Providers:\n\nTaking a course online mode from course providers has benefits over alternatives in this field. In this rapidly changing world, by taking online courses you can learn at your own pace. Most employers are changing their recruiting drive towards online courses. Because online courses are more effective compared to both free courses and college.\n\nUpgrad:\n\nUpgrad provides an Executive Post-graduate Program in Software Development - Specialisation in Full Stack Development. This course certification is provided by the IIIT-B.\n\nCourse Duration for this Executive Post-graduate Program in software development - Specialisation in Full Stack Development is 13 months. It has 7+ case studies and projects, 10+ programming tools & languages, 45+ live sessions, 10+ programming tools, and languages, and 300+ contents. They provide fewer case studies and projects to their learners.\n\n2. Learnbay:\n\nLearnbay provides a great experience to its learners who pursue Full stack software development. The specialty in Learnbay is, working professionals get to attend live classes on their flexible schedule. If someone misses the class they will be able to attend the next live class of the day.\n\nCourse Duration for Full Stack Software Development program:\n\nOn weekdays it's 2 hours per day for a span of 8 months\nAt weekends it's 3.5 hours per day for a span of 9 months\n\nHere are some features of Learnbay:\n\nHands-on projects:\n\nLearnbay provides an excellent variety of projects to its students in addition to 300+ coding problems. Students here are trained by industry experts themselves who have formerly worked in MAANG. By training under the guidance of industry experts, students will get a different kind of exposure.\n\nThey provide 12+ projects for their learners here are some of them:\n\nBlog Site.\nFood Delivery Application.\nCrud\nAvailable Domains:\n\nA candidate studies and masters a certain subject through software development, which is known as an elite domain. By selecting the elite domain, the applicant will have a higher chance of being noticed by the company than generic candidates. Using an elite domain allows students to study faster and more efficiently. Full Stack Software Development provides the following Domains - Full Stack, Product Management, Web Development, DevOps, and Clouds\n\nImportance of Elite Domain:\n\nAn elite domain is a strategy where the candidate learns a certain topic and masters it with software development. By selecting the elite domain the candidate will be able to be recognized by the employer more than the generic candidates. As Learnbay knows the importance of the elite domain they suggest every candidate choose an elite domain to their interest, if one has confusion about selecting a domain, Learnbay itself provides assistance and evaluates that candidate and gives them a domain that suits them.\n\nJob Assistance:\n\nThey provide job assistance from the point of learning to the point of employment. Learnbay has more than 450+ hiring partners. It provides everything from grooming the profile of the candidate to preparing them for the interview questions, everything is handled by the respective industry experts. Learnbay has the highest salary hike of 250%.\n\nFinal Thoughts:\n\nOnline course providers are the best option to learn full-stack software development programs and their programming languages.\n\nWho is best among these online course providers?\n\nI will go with Learnbay because they provide more facilities than Upgrad: the projects are more in Learnbay compared to the Upgrad, and Learnbay provides elite domains to its learners on the other hand Upgrad have no elite domain for its learners. They also provide advanced algorithms and data structures.\n\nAll the best."", 'aiModelVersion': '1'}",0.729
Anders Kaseorg,10y,Is it possible for a program to modify its own code?,"Absolutely. The Linux kernel makes extensive use of self-modifying code:


At boot time, the kernel optimizes itself for the host CPU, using newer processor-specific instructions to replace generic fallback code.
A kernel supporting symmetric multiprocessing, when booted on a single-processor system, patches out unnecessary locking instructions with no-ops. On systems supporting CPU hotplug, it will even patch these instructions in and out dynamically as CPUs are added and removed.
A kernel supporting paravirtualization
, when booted on native hardware, patches out slow hypercalls in favor of native instructions.
Predefined debugging hooks can be turned on and off at runtime; they are patched out with no-ops when not active.
Ksplice takes hot patching several steps forward to allow safe application of more-or-less arbitrary code changes to a running kernel.


Also, any environment using just-in-time compilation, such as the Java virtual machine or Google’s V8 JavaScript engine or PyPy, is built entirely on self-modifying code.

However, the suggestions from the question details (intelligent self-patching firewalls and self-debugging operating systems) are still a long way off—not because we can’t write programs that modify themselves, but because we don’t know how to construct that kind of intelligence.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/hdkt1x5m3r9oqpvf', 'title': 'Is it possible for a program to modify its own code?', 'score': {'original': 0.9985, 'ai': 0.0015}, 'blocks': [{'text': 'Absolutely. The Linux kernel makes extensive use of self-modifying code:\n\n\nAt boot time, the kernel optimizes itself for the host CPU, using newer processor-specific instructions to replace generic fallback code.\nA kernel supporting symmetric multiprocessing, when booted on a single-processor system, patches out unnecessary locking instructions with no-ops. On systems supporting CPU hotplug, it will even patch these instructions in and out dynamically as CPUs are added and removed.\nA kernel supporting paravirtualization\n, when booted on native hardware, patches out slow hypercalls in favor of native instructions.\nPredefined debugging hooks can be turned on and off at runtime; they are patched out with no-ops when not active.\nKsplice takes hot patching several steps forward to allow safe application of more-or-less arbitrary code changes to a running kernel.\n\n\nAlso, any environment using just-in-time compilation, such as the Java virtual machine or Google’s V8 JavaScript engine or PyPy, is built entirely on self-modifying code.\n\nHowever, the suggestions from the question details (intelligent self-patching firewalls and self-debugging operating systems) are still a long way off—not because we can’t write programs that modify themselves, but because we don’t know how to construct that kind of intelligence.', 'result': {'fake': 0.0015, 'real': 0.9985}, 'status': 'success'}], 'credits_used': 2, 'credits': 1983279, 'subscription': 0, 'content': 'Absolutely. The Linux kernel makes extensive use of self-modifying code:\n\n\nAt boot time, the kernel optimizes itself for the host CPU, using newer processor-specific instructions to replace generic fallback code.\nA kernel supporting symmetric multiprocessing, when booted on a single-processor system, patches out unnecessary locking instructions with no-ops. On systems supporting CPU hotplug, it will even patch these instructions in and out dynamically as CPUs are added and removed.\nA kernel supporting paravirtualization\n, when booted on native hardware, patches out slow hypercalls in favor of native instructions.\nPredefined debugging hooks can be turned on and off at runtime; they are patched out with no-ops when not active.\nKsplice takes hot patching several steps forward to allow safe application of more-or-less arbitrary code changes to a running kernel.\n\n\nAlso, any environment using just-in-time compilation, such as the Java virtual machine or Google’s V8 JavaScript engine or PyPy, is built entirely on self-modifying code.\n\nHowever, the suggestions from the question details (intelligent self-patching firewalls and self-debugging operating systems) are still a long way off—not because we can’t write programs that modify themselves, but because we don’t know how to construct that kind of intelligence.', 'aiModelVersion': '1'}",0.9985
Haris Khan,Updated 5y,What are all the tests that should be performed to ensure the cross browser compatibility of a website before going live?,"After checking out all the major compatibility issues, you need to perform a round of cross browser testing in general taking of minor but important factors like:

Alignment of elements: Are all the elements aligned the way you want them to.
Pop Ups: Check if the pop ups are being displayed properly and are opening in all browsers.
Alignment of checkboxes: Checkboxes can cause problems in many browsers. Make sure that your checkboxes are aligned and in proper working condition.
Alignment and functioning of Buttons: Buttons hold a major part when it comes to CTAs or any other action so you need to be sure that they are aligned and properly working across diverse browsers.
URLs redirection from buttons: Check the links to which the buttons are redirecting.
Drop down Menus: Verify that the drop downs work as expected across all browsers.
Forms and Form APIs: Make sure that the forms take in data and the data is transferred to the collecting API endpoint intact.
Grids/Tables: Check the alignment and location of tables and grids if any across every browser.
Sessions and cookies: If your website uses cookies, verify that the prompt is there and it works accordingly.
Dates: Test if the date formats as decided in every browser.
Zoom in and Zoom out functionality: Check if the zoom in and zoom out functionality works properly and doesn’t break the UI when in action.
Appearance of scroll: Check if the scroll is present on both horizontal and vertical bars and is functional.
Flash: Make sure that Flash supported videos, animations, RIAs, and applications work cross browser.
HTML animations: Verify if your animations load across all browsers.
Mouse hovering: Check if the mouse adjusts to the button, text box, link, and white space accordingly.
Image alignment: Make sure that all the images are aligned and in place across different browsers.
Alt tags: Alt-tags are again important and we need to be sure that they are in place.

And everything else that you can think of in every possible browser, OS, and device combination.

But you might need a perfect cross browser testing tool which can help you in performing cross browser testing locally.

Once you’re done with performing this cross browser testing checklist, you’re all set to go live and hit the green button. I hope you might not face the situation like my friend because you’re smart enough not to repeat the same mistake","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/bg9crqz3i8do7jla', 'title': 'What are all the tests that should be performed to ensure the cross browser compatibility of a website before going live?', 'score': {'original': 0.9971, 'ai': 0.0029}, 'blocks': [{'text': 'After checking out all the major compatibility issues, you need to perform a round of cross browser testing in general taking of minor but important factors like:\n\nAlignment of elements: Are all the elements aligned the way you want them to.\nPop Ups: Check if the pop ups are being displayed properly and are opening in all browsers.\nAlignment of checkboxes: Checkboxes can cause problems in many browsers. Make sure that your checkboxes are aligned and in proper working condition.\nAlignment and functioning of Buttons: Buttons hold a major part when it comes to CTAs or any other action so you need to be sure that they are aligned and properly working across diverse browsers.\nURLs redirection from buttons: Check the links to which the buttons are redirecting.\nDrop down Menus: Verify that the drop downs work as expected across all browsers.\nForms and Form APIs: Make sure that the forms take in data and the data is transferred to the collecting API endpoint intact.\nGrids/Tables: Check the alignment and location of tables and grids if any across every browser.\nSessions and cookies: If your website uses cookies, verify that the prompt is there and it works accordingly.\nDates: Test if the date formats as decided in every browser.\nZoom in and Zoom out functionality: Check if the zoom in and zoom out functionality works properly and doesn’t break the UI when in action.\nAppearance of scroll: Check if the scroll is present on both horizontal and vertical bars and is functional.\nFlash: Make sure that Flash supported videos, animations, RIAs, and applications work cross browser.\nHTML animations: Verify if your animations load across all browsers.\nMouse hovering: Check if the mouse adjusts to the button, text box, link, and white space accordingly.\nImage alignment: Make sure that all the images are aligned and in place across different browsers.\nAlt tags: Alt-tags are again important and we need to be sure that they are in place.\n\nAnd everything else that you can think of in every possible browser, OS, and device combination.\n\nBut you might need a perfect cross browser testing tool which can help you in performing cross browser testing locally.\n\nOnce you’re done with performing this cross browser testing checklist, you’re all set to go live and hit the green button. I hope you might not face the situation like my friend because you’re smart enough not to repeat the same mistake', 'result': {'fake': 0.0029, 'real': 0.9971}, 'status': 'success'}], 'credits_used': 5, 'credits': 1983274, 'subscription': 0, 'content': 'After checking out all the major compatibility issues, you need to perform a round of cross browser testing in general taking of minor but important factors like:\n\nAlignment of elements: Are all the elements aligned the way you want them to.\nPop Ups: Check if the pop ups are being displayed properly and are opening in all browsers.\nAlignment of checkboxes: Checkboxes can cause problems in many browsers. Make sure that your checkboxes are aligned and in proper working condition.\nAlignment and functioning of Buttons: Buttons hold a major part when it comes to CTAs or any other action so you need to be sure that they are aligned and properly working across diverse browsers.\nURLs redirection from buttons: Check the links to which the buttons are redirecting.\nDrop down Menus: Verify that the drop downs work as expected across all browsers.\nForms and Form APIs: Make sure that the forms take in data and the data is transferred to the collecting API endpoint intact.\nGrids/Tables: Check the alignment and location of tables and grids if any across every browser.\nSessions and cookies: If your website uses cookies, verify that the prompt is there and it works accordingly.\nDates: Test if the date formats as decided in every browser.\nZoom in and Zoom out functionality: Check if the zoom in and zoom out functionality works properly and doesn’t break the UI when in action.\nAppearance of scroll: Check if the scroll is present on both horizontal and vertical bars and is functional.\nFlash: Make sure that Flash supported videos, animations, RIAs, and applications work cross browser.\nHTML animations: Verify if your animations load across all browsers.\nMouse hovering: Check if the mouse adjusts to the button, text box, link, and white space accordingly.\nImage alignment: Make sure that all the images are aligned and in place across different browsers.\nAlt tags: Alt-tags are again important and we need to be sure that they are in place.\n\nAnd everything else that you can think of in every possible browser, OS, and device combination.\n\nBut you might need a perfect cross browser testing tool which can help you in performing cross browser testing locally.\n\nOnce you’re done with performing this cross browser testing checklist, you’re all set to go live and hit the green button. I hope you might not face the situation like my friend because you’re smart enough not to repeat the same mistake', 'aiModelVersion': '1'}",0.9971
Joe Zbiciak,Updated 2y,"Is there any way to obfuscate a .txt file, so no one can steal my code?","This question reminds me of all the questions I see Mercedes R. Lackey answer from novice novelists worried about publishers stealing their work. In those cases, the answer is clear: it's not going to happen.

Software is a little different, as it's functional in nature. If you write a useful tool or fun game, that has value. And, users of the software rarely see its source code.

Before we dig in, understand that there’s really two prongs to my answer below:

Is the thing you’re trying to defend actually defensible?
Is the thing you’re trying to defend actually worth defending?

Realistically, I think the answer to both is probably no. But, read on and judge for yourself.

First, write something that someone actually wants to steal. Chances are, nobody actually cares about your source code, unless this is a work for hire. If they're going to pirate something you're trying to sell, it's going to be the working application itself, not its source.

I put most of my personal software out there under free licenses such as GPLv2,
 CC-BY-SA v4,
 CC0,
 and as far as I can tell, not many folks are all that interested in the source code, other than maybe to compile it on obscure systems.

A few are interested in digging in further, and I do get to hear from them from time to time. It's nice!

Anyway, back to your scenario. You have:

an asset you want to protect
in a text file
that needs to be provided with the application
in a form usable by the computer
but not readable by the user.

Did I miss anything?

If the computer can read it, the user eventually can too, if they have sufficient motivation and skill.

One way to raise the bar is to encrypt or obfuscate your precious asset in some way. Now, if you took my third paragraph above to heart, you'll realize there may not be very many (if any) motivated attackers, so this is a really low bar.

Your asset may be very precious to you, but is it actually precious to anyone else? As Fat Bastard said, “Everyone loves their own brand.”

Judging by the questions I have gotten in the past for my own stuff, you could probably put it in a file named READ.ME and that would almost guarantee nobody reads it—except maybe command line nerds like myself—because desktop OSes don't usually file associations for the extension ME. OK, that suggestion is purely tongue-in-cheek.

If you do encrypt or obfuscate, just don't tell anyone you've got “unbreakable encryption."" Don't even mention the existence of an encrypted or obfuscated asset. If you did, that may very well generate a set of folks interested in hacking it, just for the sake of hacking it. They still don't care about your source code, though. They just care about hacking your obfuscation/encryption scheme.

You could probably start with the airtight scheme used by the first commercial application (Tandy DeskMate Diary) I saw that claimed store text for your eyes only! Its protection included a password. Both the password and the plaintext were stored in the DIARY.DRY file using this sophisticated, NSA-grade* encoding:

void deskmate_diary_encrypt(char *s) { 
  while (*s) { 
    (*s++)++; 
  } 
} 

If you want to get really sophisticated, randomly set bit 7 on bytes, so simple programs like strings won't recognize them.

That brings me to a different question: Why is this even text to begin with? Perhaps you should compile it down into a machine-readable form (e.g. a bytecode serialized data structure). That immediately raises the bar. And depending on the nature of the compilation process, it may drop enough information that a decompile isn't useful.

If you then compress and encrypt that with a fixed key hidden in your program, you raise the bar a bit further.

That's like replacing the fake rock you hid your spare housekey in with an actual rock you hollowed out a small chamber in, while also moving it from the front porch to the back yard.

Any potential attacker is only going to spend as much time as they think it’s worth to try to reverse engineer it. Even if they decrypt it and decompress it, they also need to figure out how to decompile it if they want something resembling the source text. And, decompiling may not give them immediately useful output.

Chances are, your code isn't worth that much to them.

That's really all you can hope for: make it complicated enough that it's not worth the effort. Just how fancy is this code you're protecting, anyway?

Because after all, if the computer can read it and use it, so can your imagined attacker. If they want to read it badly enough, they will. Chances are good they don't.

Addendum: I see from OP’s question history they’ve considered embedding a crypto miner in an app. If this question is somehow related to that goal, tsk tsk. No matter how you embed something like that, folks are going to notice that your app churns way too much CPU.

Addendum 2: I extracted my 2 bullet summary from a comment, and added it as an intro.

*No Sugar Added.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/8by7mvoa1q6l0ue4', 'title': 'Is there any way to obfuscate a .txt file, so no one can steal my code?', 'score': {'original': 0.99875, 'ai': 0.00125}, 'blocks': [{'text': 'This question reminds me of all the questions I see Mercedes R. Lackey answer from novice novelists worried about publishers stealing their work. In those cases, the answer is clear: it\'s not going to happen.\n\nSoftware is a little different, as it\'s functional in nature. If you write a useful tool or fun game, that has value. And, users of the software rarely see its source code.\n\nBefore we dig in, understand that there’s really two prongs to my answer below:\n\nIs the thing you’re trying to defend actually defensible?\nIs the thing you’re trying to defend actually worth defending?\n\nRealistically, I think the answer to both is probably no. But, read on and judge for yourself.\n\nFirst, write something that someone actually wants to steal. Chances are, nobody actually cares about your source code, unless this is a work for hire. If they\'re going to pirate something you\'re trying to sell, it\'s going to be the working application itself, not its source.\n\nI put most of my personal software out there under free licenses such as GPLv2,\n CC-BY-SA v4,\n CC0,\n and as far as I can tell, not many folks are all that interested in the source code, other than maybe to compile it on obscure systems.\n\nA few are interested in digging in further, and I do get to hear from them from time to time. It\'s nice!\n\nAnyway, back to your scenario. You have:\n\nan asset you want to protect\nin a text file\nthat needs to be provided with the application\nin a form usable by the computer\nbut not readable by the user.\n\nDid I miss anything?\n\nIf the computer can read it, the user eventually can too, if they have sufficient motivation and skill.\n\nOne way to raise the bar is to encrypt or obfuscate your precious asset in some way. Now, if you took my third paragraph above to heart, you\'ll realize there may not be very many (if any) motivated attackers, so this is a really low bar.\n\nYour asset may be very precious to you, but is it actually precious to anyone else? As Fat Bastard said, “Everyone loves their own brand.”\n\nJudging by the questions I have gotten in the past for my own stuff, you could probably put it in a file named READ.ME and that would almost guarantee nobody reads it—except maybe command line nerds like myself—because desktop OSes don\'t usually file associations for the extension ME. OK, that suggestion is purely tongue-in-cheek.\n\nIf you do encrypt or obfuscate, just don\'t tell anyone you\'ve got “unbreakable encryption."" Don\'t even mention the existence of an encrypted or obfuscated asset. If you did, that may very well generate a set of folks interested in hacking it, just for the sake of hacking it. They still don\'t care about your source code, though. They just care about hacking your obfuscation/encryption scheme.\n\nYou could probably start with the airtight scheme used by the first commercial application (Tandy DeskMate Diary) I saw that claimed store text for your eyes only! Its protection included a password. Both the password and the plaintext were stored in the DIARY.DRY file using this sophisticated, NSA-grade* encoding:\n\nvoid deskmate_diary_encrypt(char *s) {\xa0\n ', 'result': {'fake': 0.0007, 'real': 0.9993}, 'status': 'success'}, {'text': ""while (*s) {\xa0\n    (*s++)++;\xa0\n  }\xa0\n}\xa0\n\nIf you want to get really sophisticated, randomly set bit 7 on bytes, so simple programs like strings won't recognize them.\n\nThat brings me to a different question: Why is this even text to begin with? Perhaps you should compile it down into a machine-readable form (e.g. a bytecode serialized data structure). That immediately raises the bar. And depending on the nature of the compilation process, it may drop enough information that a decompile isn't useful.\n\nIf you then compress and encrypt that with a fixed key hidden in your program, you raise the bar a bit further.\n\nThat's like replacing the fake rock you hid your spare housekey in with an actual rock you hollowed out a small chamber in, while also moving it from the front porch to the back yard.\n\nAny potential attacker is only going to spend as much time as they think it’s worth to try to reverse engineer it. Even if they decrypt it and decompress it, they also need to figure out how to decompile it if they want something resembling the source text. And, decompiling may not give them immediately useful output.\n\nChances are, your code isn't worth that much to them.\n\nThat's really all you can hope for: make it complicated enough that it's not worth the effort. Just how fancy is this code you're protecting, anyway?\n\nBecause after all, if the computer can read it and use it, so can your imagined attacker. If they want to read it badly enough, they will. Chances are good they don't.\n\nAddendum: I see from OP’s question history they’ve considered embedding a crypto miner in an app. If this question is somehow related to that goal, tsk tsk. No matter how you embed something like that, folks are going to notice that your app churns way too much CPU.\n\nAddendum 2: I extracted my 2 bullet summary from a comment, and added it as an intro.\n\n*No Sugar Added."", 'result': {'fake': 0.0023, 'real': 0.9977}, 'status': 'success'}], 'credits_used': 9, 'credits': 1983265, 'subscription': 0, 'content': 'This question reminds me of all the questions I see Mercedes R. Lackey answer from novice novelists worried about publishers stealing their work. In those cases, the answer is clear: it\'s not going to happen.\n\nSoftware is a little different, as it\'s functional in nature. If you write a useful tool or fun game, that has value. And, users of the software rarely see its source code.\n\nBefore we dig in, understand that there’s really two prongs to my answer below:\n\nIs the thing you’re trying to defend actually defensible?\nIs the thing you’re trying to defend actually worth defending?\n\nRealistically, I think the answer to both is probably no. But, read on and judge for yourself.\n\nFirst, write something that someone actually wants to steal. Chances are, nobody actually cares about your source code, unless this is a work for hire. If they\'re going to pirate something you\'re trying to sell, it\'s going to be the working application itself, not its source.\n\nI put most of my personal software out there under free licenses such as GPLv2,\n CC-BY-SA v4,\n CC0,\n and as far as I can tell, not many folks are all that interested in the source code, other than maybe to compile it on obscure systems.\n\nA few are interested in digging in further, and I do get to hear from them from time to time. It\'s nice!\n\nAnyway, back to your scenario. You have:\n\nan asset you want to protect\nin a text file\nthat needs to be provided with the application\nin a form usable by the computer\nbut not readable by the user.\n\nDid I miss anything?\n\nIf the computer can read it, the user eventually can too, if they have sufficient motivation and skill.\n\nOne way to raise the bar is to encrypt or obfuscate your precious asset in some way. Now, if you took my third paragraph above to heart, you\'ll realize there may not be very many (if any) motivated attackers, so this is a really low bar.\n\nYour asset may be very precious to you, but is it actually precious to anyone else? As Fat Bastard said, “Everyone loves their own brand.”\n\nJudging by the questions I have gotten in the past for my own stuff, you could probably put it in a file named READ.ME and that would almost guarantee nobody reads it—except maybe command line nerds like myself—because desktop OSes don\'t usually file associations for the extension ME. OK, that suggestion is purely tongue-in-cheek.\n\nIf you do encrypt or obfuscate, just don\'t tell anyone you\'ve got “unbreakable encryption."" Don\'t even mention the existence of an encrypted or obfuscated asset. If you did, that may very well generate a set of folks interested in hacking it, just for the sake of hacking it. They still don\'t care about your source code, though. They just care about hacking your obfuscation/encryption scheme.\n\nYou could probably start with the airtight scheme used by the first commercial application (Tandy DeskMate Diary) I saw that claimed store text for your eyes only! Its protection included a password. Both the password and the plaintext were stored in the DIARY.DRY file using this sophisticated, NSA-grade* encoding:\n\nvoid deskmate_diary_encrypt(char *s) {\xa0\n  while (*s) {\xa0\n    (*s++)++;\xa0\n  }\xa0\n}\xa0\n\nIf you want to get really sophisticated, randomly set bit 7 on bytes, so simple programs like strings won\'t recognize them.\n\nThat brings me to a different question: Why is this even text to begin with? Perhaps you should compile it down into a machine-readable form (e.g. a bytecode serialized data structure). That immediately raises the bar. And depending on the nature of the compilation process, it may drop enough information that a decompile isn\'t useful.\n\nIf you then compress and encrypt that with a fixed key hidden in your program, you raise the bar a bit further.\n\nThat\'s like replacing the fake rock you hid your spare housekey in with an actual rock you hollowed out a small chamber in, while also moving it from the front porch to the back yard.\n\nAny potential attacker is only going to spend as much time as they think it’s worth to try to reverse engineer it. Even if they decrypt it and decompress it, they also need to figure out how to decompile it if they want something resembling the source text. And, decompiling may not give them immediately useful output.\n\nChances are, your code isn\'t worth that much to them.\n\nThat\'s really all you can hope for: make it complicated enough that it\'s not worth the effort. Just how fancy is this code you\'re protecting, anyway?\n\nBecause after all, if the computer can read it and use it, so can your imagined attacker. If they want to read it badly enough, they will. Chances are good they don\'t.\n\nAddendum: I see from OP’s question history they’ve considered embedding a crypto miner in an app. If this question is somehow related to that goal, tsk tsk. No matter how you embed something like that, folks are going to notice that your app churns way too much CPU.\n\nAddendum 2: I extracted my 2 bullet summary from a comment, and added it as an intro.\n\n*No Sugar Added.', 'aiModelVersion': '1'}",0.99875
Mubeen Fathima,1y,"For a full-stack developer, what languages are required?","The role of a Full-Stack Developer is quite valuable for a company as they are required to work on both front-end and back-end tools to improve website performance.

Hence, there are a few tools that a student should be familiar with before starting their career as a full-time Full-Stack Developer.

Languages required for backend technologies in Full-Stack development:

NodeJS: High performance for real-time applications and easy scalability for modern applications.
Express JS: Allows usability of multiple components.
Laravel: Used for web development and allows the development of a complete web page.

Languages required for frontend technologies in Full-Stack development:

HTML 5: Development within the website based on browser searches.
Angular JS: It is used for developing single-page applications and often it is used by many developers because it is the simple way for developing applications.
ReactJS: It offers a flexible, efficient, and declarative Javascript library that enhances overall Full-Stack development.
Bootstrap: It is a free open-source network, which comprises forms, buttons, navigation, and different interface components.

Language required for Database and server in Full-Stack development:

Apache: It allows directory uses (HTTP) from various Internet users and sends the desired information through web pages or files.
AWS: It is one of the common and useful databases that allow web applications, mobile applications, online gaming, and enterprise applications. This is the most used database for Full-Stack developers these days.
MongoDB: It is another popular database used by developers for developing scalable applications associated with evolving data schemas. This is a simple form of storing any structured or unstructured data through the use of JSON format for storing documents.

A Full-Stack Developer is responsible for developing a range of functional databases for supporting back-end and improving user-end customer experience. They are also responsible for improving the end-to-end architecture.

Scope of a full-stack developer in India:

Full-Stack development is one of the emerging tech fields in India due to the rapid development of IT infrastructure.
The field of Full-Stack development is expected to witness a growth of approx 27% in 2024.
The growth of e-commerce influenced the development of various online businesses that fueled the demand for Full-Stack developers.
Even though the work is sometimes stressful, Full-Stack developer witnesses major growth in their career with 3-5 years of experience.
The demand for a Full-Stack Developer is increasing with an average salary of up to 9.5L CTC.
With more experience in this field, you can achieve up to 16-20L CTC. PHP, which is a Hypertext Pre-Processor is a crucial language to learn for Full-Stack development along with Python and Ruby to maintain or upgrade software when required.

Learning all these tools and languages can be a challenge for many candidates due to their variety and complexity. Hence, Learnbay introduced the Full-Stack Development program that covers most of these languages and also offers 1:1 counseling sessions to understand specific domains. Candidates with knowledge of different programming languages and tools are highly preferred in interviews and to crack MAANG. Thus, in my opinion, you can opt for free career counseling and choose your domain for understanding the languages required to boost your career growth.

Some of the features offered by Learnbay are:

One-to-one counseling - In Learnbay, experts offer one-to-one career counseling for each candidate before they take admission. This facilitates the students to understand the market niche and choose a specific career or domain that promises to provide higher ROI.
24*7 customer support - With 24*7 customer support, Learnbay managed to solve the queries of all their customers and offer them premium educational services. Hence, the working professionals can connect to the customer service of Learnbay at any time of the day.
Elite Domains - Unlike other institutes in the market, Learnbay does not provide specialization through different modules, rather, they focus on educating the students on Data Structure, System Design, Cohort Orientation, and ‘Algorithm, space, and time complexity analysis.
Live session - They offer 300+ hours of live sessions, to explain each module in detail.

If not Learnbay, then Coursera might help:

It has been noted that Coursera provides quick courses on a variety of subjects that can teach you Full-Stack web development. This institution offers a variety of quick courses on a wide range of subjects. Additionally, this institute provides a variety of industry specialists where you can efficiently master the topics in a year. The absence of either elite domains or job help programs is the only negative.

There are many institutes offering Full-Stack development courses in the market, but you should carefully consider them before finalizing your decision. Some of the factors that you might consider are ROI, Mode of learning, and job assistance. On a final thought, I think it is important to consider institutes like Learnbay that offer different frameworks and tools along with certification from reputed companies. This is because it will help you to bloom in your career.

Hope this answer helped,

Best Wishes!","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/odx7a2lhnu9g1y5t', 'title': 'For a full-stack developer, what languages are required?', 'score': {'original': 0.48575, 'ai': 0.51425}, 'blocks': [{'text': 'The role of a Full-Stack Developer is quite valuable for a company as they are required to work on both front-end and back-end tools to improve website performance.\n\nHence, there are a few tools that a student should be familiar with before starting their career as a full-time Full-Stack Developer.\n\nLanguages required for backend technologies in Full-Stack development:\n\nNodeJS: High performance for real-time applications and easy scalability for modern applications.\nExpress JS: Allows usability of multiple components.\nLaravel: Used for web development and allows the development of a complete web page.\n\nLanguages required for frontend technologies in Full-Stack development:\n\nHTML 5: Development within the website based on browser searches.\nAngular JS: It is used for developing single-page applications and often it is used by many developers because it is the simple way for developing applications.\nReactJS: It offers a flexible, efficient, and declarative Javascript library that enhances overall Full-Stack development.\nBootstrap: It is a free open-source network, which comprises forms, buttons, navigation, and different interface components.\n\nLanguage required for Database and server in Full-Stack development:\n\nApache: It allows directory uses (HTTP) from various Internet users and sends the desired information through web pages or files.\nAWS: It is one of the common and useful databases that allow web applications, mobile applications, online gaming, and enterprise applications. This is the most used database for Full-Stack developers these days.\nMongoDB: It is another popular database used by developers for developing scalable applications associated with evolving data schemas. This is a simple form of storing any structured or unstructured data through the use of JSON format for storing documents.\n\nA Full-Stack Developer is responsible for developing a range of functional databases for supporting back-end and improving user-end customer experience. They are also responsible for improving the end-to-end architecture.\n\nScope of a full-stack developer in India:\n\nFull-Stack development is one of the emerging tech fields in India due to the rapid development of IT infrastructure.\nThe field of Full-Stack development is expected to witness a growth of approx 27% in 2024.\nThe growth of e-commerce influenced the development of various online businesses that fueled the demand for Full-Stack developers.\nEven though the work is sometimes stressful, Full-Stack developer witnesses major growth in their career with 3-5 years of experience.\nThe demand for a Full-Stack Developer is increasing with an average salary of up to 9.5L CTC.\nWith more experience in this field, you can achieve up to 16-20L CTC. PHP, which is a Hypertext Pre-Processor is a crucial language to learn for Full-Stack development along with Python and Ruby to maintain or upgrade software when required.\n\nLearning all these tools and languages can be a challenge for many candidates due to their variety and complexity. Hence, Learnbay introduced the Full-Stack Development program that covers most of these languages and also offers 1:1 counseling sessions to understand specific domains. Candidates with knowledge of different programming languages and tools are highly preferred in interviews and to crack MAANG. Thus, in my opinion, you can opt for free career counseling and choose your domain for understanding the languages required to boost your career growth.\n\nSome of the features offered by Learnbay are:\n\nOne-to-one counseling - In Learnbay, experts offer one-to-one career counseling for each', 'result': {'fake': 0.0427, 'real': 0.9573}, 'status': 'success'}, {'text': 'candidate before they take admission. This facilitates the students to understand the market niche and choose a specific career or domain that promises to provide higher ROI.\n24*7 customer support - With 24*7 customer support, Learnbay managed to solve the queries of all their customers and offer them premium educational services. Hence, the working professionals can connect to the customer service of Learnbay at any time of the day.\nElite Domains - Unlike other institutes in the market, Learnbay does not provide specialization through different modules, rather, they focus on educating the students on Data Structure, System Design, Cohort Orientation, and ‘Algorithm, space, and time complexity analysis.\nLive session - They offer 300+ hours of live sessions, to explain each module in detail.\n\nIf not Learnbay, then Coursera might help:\n\nIt has been noted that Coursera provides quick courses on a variety of subjects that can teach you Full-Stack web development. This institution offers a variety of quick courses on a wide range of subjects. Additionally, this institute provides a variety of industry specialists where you can efficiently master the topics in a year. The absence of either elite domains or job help programs is the only negative.\n\nThere are many institutes offering Full-Stack development courses in the market, but you should carefully consider them before finalizing your decision. Some of the factors that you might consider are ROI, Mode of learning, and job assistance. On a final thought, I think it is important to consider institutes like Learnbay that offer different frameworks and tools along with certification from reputed companies. This is because it will help you to bloom in your career.\n\nHope this answer helped,\n\nBest Wishes!', 'result': {'fake': 0.9836, 'real': 0.0164}, 'status': 'success'}], 'credits_used': 9, 'credits': 1983256, 'subscription': 0, 'content': 'The role of a Full-Stack Developer is quite valuable for a company as they are required to work on both front-end and back-end tools to improve website performance.\n\nHence, there are a few tools that a student should be familiar with before starting their career as a full-time Full-Stack Developer.\n\nLanguages required for backend technologies in Full-Stack development:\n\nNodeJS: High performance for real-time applications and easy scalability for modern applications.\nExpress JS: Allows usability of multiple components.\nLaravel: Used for web development and allows the development of a complete web page.\n\nLanguages required for frontend technologies in Full-Stack development:\n\nHTML 5: Development within the website based on browser searches.\nAngular JS: It is used for developing single-page applications and often it is used by many developers because it is the simple way for developing applications.\nReactJS: It offers a flexible, efficient, and declarative Javascript library that enhances overall Full-Stack development.\nBootstrap: It is a free open-source network, which comprises forms, buttons, navigation, and different interface components.\n\nLanguage required for Database and server in Full-Stack development:\n\nApache: It allows directory uses (HTTP) from various Internet users and sends the desired information through web pages or files.\nAWS: It is one of the common and useful databases that allow web applications, mobile applications, online gaming, and enterprise applications. This is the most used database for Full-Stack developers these days.\nMongoDB: It is another popular database used by developers for developing scalable applications associated with evolving data schemas. This is a simple form of storing any structured or unstructured data through the use of JSON format for storing documents.\n\nA Full-Stack Developer is responsible for developing a range of functional databases for supporting back-end and improving user-end customer experience. They are also responsible for improving the end-to-end architecture.\n\nScope of a full-stack developer in India:\n\nFull-Stack development is one of the emerging tech fields in India due to the rapid development of IT infrastructure.\nThe field of Full-Stack development is expected to witness a growth of approx 27% in 2024.\nThe growth of e-commerce influenced the development of various online businesses that fueled the demand for Full-Stack developers.\nEven though the work is sometimes stressful, Full-Stack developer witnesses major growth in their career with 3-5 years of experience.\nThe demand for a Full-Stack Developer is increasing with an average salary of up to 9.5L CTC.\nWith more experience in this field, you can achieve up to 16-20L CTC. PHP, which is a Hypertext Pre-Processor is a crucial language to learn for Full-Stack development along with Python and Ruby to maintain or upgrade software when required.\n\nLearning all these tools and languages can be a challenge for many candidates due to their variety and complexity. Hence, Learnbay introduced the Full-Stack Development program that covers most of these languages and also offers 1:1 counseling sessions to understand specific domains. Candidates with knowledge of different programming languages and tools are highly preferred in interviews and to crack MAANG. Thus, in my opinion, you can opt for free career counseling and choose your domain for understanding the languages required to boost your career growth.\n\nSome of the features offered by Learnbay are:\n\nOne-to-one counseling - In Learnbay, experts offer one-to-one career counseling for each candidate before they take admission. This facilitates the students to understand the market niche and choose a specific career or domain that promises to provide higher ROI.\n24*7 customer support - With 24*7 customer support, Learnbay managed to solve the queries of all their customers and offer them premium educational services. Hence, the working professionals can connect to the customer service of Learnbay at any time of the day.\nElite Domains - Unlike other institutes in the market, Learnbay does not provide specialization through different modules, rather, they focus on educating the students on Data Structure, System Design, Cohort Orientation, and ‘Algorithm, space, and time complexity analysis.\nLive session - They offer 300+ hours of live sessions, to explain each module in detail.\n\nIf not Learnbay, then Coursera might help:\n\nIt has been noted that Coursera provides quick courses on a variety of subjects that can teach you Full-Stack web development. This institution offers a variety of quick courses on a wide range of subjects. Additionally, this institute provides a variety of industry specialists where you can efficiently master the topics in a year. The absence of either elite domains or job help programs is the only negative.\n\nThere are many institutes offering Full-Stack development courses in the market, but you should carefully consider them before finalizing your decision. Some of the factors that you might consider are ROI, Mode of learning, and job assistance. On a final thought, I think it is important to consider institutes like Learnbay that offer different frameworks and tools along with certification from reputed companies. This is because it will help you to bloom in your career.\n\nHope this answer helped,\n\nBest Wishes!', 'aiModelVersion': '1'}",0.48575
Vaibhavi Jadhav,Jan 15,"For a full-stack developer, what languages are required?","There are many languages required for a full-stack developer. These include JavaScript, HTML, CSS, and of course, programming languages such as Ruby, Python, and Objective-C. Other skills include design skills such as iconography and how to use visual tools like Photoshop and Sketch. When it comes to knowing how to write code, JavaScript is the most important. This is because all of the front-end (user interface) components of your site are written in JavaScript.

Why are these languages important and how can they help full-stack developers?

The answer to this question depends on the type of knowledge required for the job. For example, a backend engineer needs to know both Python and Go. On the other hand, a front-end engineer needs to know HTML, CSS, and JavaScript. However, full-stack developers shouldn't be limited to just these languages.
A full-stack developer is usually more experienced than a web programmer or front-end engineer. While a web programmer might only need to know one or two languages, a full-stack developer needs to be fluent in many languages.
As a full-stack developer, you’ll need strong proficiency in both frontend and backend programming languages. You’ll need to know how to build user interfaces with HTML and CSS, but you’ll also need to know how to set up scalable databases and Web APIs.

With all of these requirements in mind, it's clear that there are many skills required for a full-stack developer role. So, before you apply for a position, make sure that you have everything that you need.

How can one learn about these languages?

To acquire this skill set, you can start with a JavaScript or Ruby course that teaches the basics of HTML5, CSS3, and JavaScript. Then, moved on to a software development course in Bangalore that teaches software development frameworks like AngularJS and NodeJS. If you want to go deeper into the world of server-side programming languages like Python or Java, there are plenty of options out there as well.
Online courses are a great way to learn about the various languages that are required for software development. They can provide a lot of information and insight into the industry. In addition, they may also provide valuable career advice as well.

Hence, online learning platforms vary in their quality, but all of them offer information on their website that outlines the different levels of certification one can earn through their platform. Many also have forums where one can ask questions and get answers from other teachers or experienced professionals.

So, which are the courses that can help you build up your knowledge of the languages?

LEARNBAY

As a full-stack developer, Learnbay courses will help you with technical fundamentals and programming. When you enroll in Learnbay, you will have the benefit of an expert instructor who will help you navigate the various concepts and techniques that are required for becoming a full-stack developer. With their hands-on approach to teaching, you will learn more efficiently as well as retain what you have learned better.

Course Name: Software Development Certification Program

Weekday Batches: 11 Months

Some of its highlights are as follows:

You have the choice to receive work support, which will assist you in managing your job programs and assisting you in learning through practice exams and mock interviews. The Software Development Certification Program will assist you in developing your technical and interpersonal skills so that you can pursue a career in web development. The placement assistance from Learnbay is fantastic as it offers a 100% placement assistance feature.
With the use of Learnbay’s Software Development Program, a simulated real-world project issue may be addressed, and the finest methods employed by the sector can be discovered.
UDEMY

It is a platform favored by hundreds of thousands of engineers worldwide. An organized library of actual interview questions aids in your learning and practice of DSA and System Design Program. You can utilize these, in particular, to become accustomed to the caliber and style of our instruction!

CONCLUSION

There has been an increase in the number of software developer jobs in the last few years. Many companies are now looking for full-stack software developer candidates and will even pay above-average amounts to hire them. This is because these developers have a wide range of skills and can work on a variety of projects.

Many thanks","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/aex02513sntihc4p', 'title': 'For a full-stack developer, what languages are required?', 'score': {'original': 0, 'ai': 1}, 'blocks': [{'text': ""There are many languages required for a full-stack developer. These include JavaScript, HTML, CSS, and of course, programming languages such as Ruby, Python, and Objective-C. Other skills include design skills such as iconography and how to use visual tools like Photoshop and Sketch. When it comes to knowing how to write code, JavaScript is the most important. This is because all of the front-end (user interface) components of your site are written in JavaScript.\n\nWhy are these languages important and how can they help full-stack developers?\n\nThe answer to this question depends on the type of knowledge required for the job. For example, a backend engineer needs to know both Python and Go. On the other hand, a front-end engineer needs to know HTML, CSS, and JavaScript. However, full-stack developers shouldn't be limited to just these languages.\nA full-stack developer is usually more experienced than a web programmer or front-end engineer. While a web programmer might only need to know one or two languages, a full-stack developer needs to be fluent in many languages.\nAs a full-stack developer, you’ll need strong proficiency in both frontend and backend programming languages. You’ll need to know how to build user interfaces with HTML and CSS, but you’ll also need to know how to set up scalable databases and Web APIs.\n\nWith all of these requirements in mind, it's clear that there are many skills required for a full-stack developer role. So, before you apply for a position, make sure that you have everything that you need.\n\nHow can one learn about these languages?\n\nTo acquire this skill set, you can start with a JavaScript or Ruby course that teaches the basics of HTML5, CSS3, and JavaScript. Then, moved on to a software development course in Bangalore that teaches software development frameworks like AngularJS and NodeJS. If you want to go deeper into the world of server-side programming languages like Python or Java, there are plenty of options out there as well.\nOnline courses are a great way to learn about the various languages that are required for software development. They can provide a lot of information and insight into the industry. In addition, they may also provide valuable career advice as well.\n\nHence, online learning platforms vary in their quality, but all of them offer information on their website that outlines the different levels of certification one can earn through their platform. Many also have forums where one can ask questions and get answers from other teachers or experienced professionals.\n\nSo, which are the courses that can help you build up your knowledge of the languages?\n\nLEARNBAY\n\nAs a full-stack developer, Learnbay courses will help you with technical fundamentals and programming. When you enroll in Learnbay, you will have the benefit of an expert instructor who will help you navigate the various concepts and techniques that are required for becoming a full-stack developer. With their hands-on approach to teaching, you will learn more efficiently as well as retain what you have learned better.\n\nCourse Name: Software Development Certification Program\n\nWeekday Batches: 11 Months\n\nSome of its highlights are as follows:\n\nYou have the choice to receive work support, which will assist"", 'result': {'fake': 0.9999, 'real': 0.0001}, 'status': 'success'}, {'text': 'you in managing your job programs and assisting you in learning through practice exams and mock interviews. The Software Development Certification Program will assist you in developing your technical and interpersonal skills so that you can pursue a career in web development. The placement assistance from Learnbay is fantastic as it offers a 100% placement assistance feature.\nWith the use of Learnbay’s Software Development Program, a simulated real-world project issue may be addressed, and the finest methods employed by the sector can be discovered.\nUDEMY\n\nIt is a platform favored by hundreds of thousands of engineers worldwide. An organized library of actual interview questions aids in your learning and practice of DSA and System Design Program. You can utilize these, in particular, to become accustomed to the caliber and style of our instruction!\n\nCONCLUSION\n\nThere has been an increase in the number of software developer jobs in the last few years. Many companies are now looking for full-stack software developer candidates and will even pay above-average amounts to hire them. This is because these developers have a wide range of skills and can work on a variety of projects.\n\nMany thanks', 'result': {'fake': 1, 'real': 0}, 'status': 'success'}], 'credits_used': 8, 'credits': 1983248, 'subscription': 0, 'content': ""There are many languages required for a full-stack developer. These include JavaScript, HTML, CSS, and of course, programming languages such as Ruby, Python, and Objective-C. Other skills include design skills such as iconography and how to use visual tools like Photoshop and Sketch. When it comes to knowing how to write code, JavaScript is the most important. This is because all of the front-end (user interface) components of your site are written in JavaScript.\n\nWhy are these languages important and how can they help full-stack developers?\n\nThe answer to this question depends on the type of knowledge required for the job. For example, a backend engineer needs to know both Python and Go. On the other hand, a front-end engineer needs to know HTML, CSS, and JavaScript. However, full-stack developers shouldn't be limited to just these languages.\nA full-stack developer is usually more experienced than a web programmer or front-end engineer. While a web programmer might only need to know one or two languages, a full-stack developer needs to be fluent in many languages.\nAs a full-stack developer, you’ll need strong proficiency in both frontend and backend programming languages. You’ll need to know how to build user interfaces with HTML and CSS, but you’ll also need to know how to set up scalable databases and Web APIs.\n\nWith all of these requirements in mind, it's clear that there are many skills required for a full-stack developer role. So, before you apply for a position, make sure that you have everything that you need.\n\nHow can one learn about these languages?\n\nTo acquire this skill set, you can start with a JavaScript or Ruby course that teaches the basics of HTML5, CSS3, and JavaScript. Then, moved on to a software development course in Bangalore that teaches software development frameworks like AngularJS and NodeJS. If you want to go deeper into the world of server-side programming languages like Python or Java, there are plenty of options out there as well.\nOnline courses are a great way to learn about the various languages that are required for software development. They can provide a lot of information and insight into the industry. In addition, they may also provide valuable career advice as well.\n\nHence, online learning platforms vary in their quality, but all of them offer information on their website that outlines the different levels of certification one can earn through their platform. Many also have forums where one can ask questions and get answers from other teachers or experienced professionals.\n\nSo, which are the courses that can help you build up your knowledge of the languages?\n\nLEARNBAY\n\nAs a full-stack developer, Learnbay courses will help you with technical fundamentals and programming. When you enroll in Learnbay, you will have the benefit of an expert instructor who will help you navigate the various concepts and techniques that are required for becoming a full-stack developer. With their hands-on approach to teaching, you will learn more efficiently as well as retain what you have learned better.\n\nCourse Name: Software Development Certification Program\n\nWeekday Batches: 11 Months\n\nSome of its highlights are as follows:\n\nYou have the choice to receive work support, which will assist you in managing your job programs and assisting you in learning through practice exams and mock interviews. The Software Development Certification Program will assist you in developing your technical and interpersonal skills so that you can pursue a career in web development. The placement assistance from Learnbay is fantastic as it offers a 100% placement assistance feature.\nWith the use of Learnbay’s Software Development Program, a simulated real-world project issue may be addressed, and the finest methods employed by the sector can be discovered.\nUDEMY\n\nIt is a platform favored by hundreds of thousands of engineers worldwide. An organized library of actual interview questions aids in your learning and practice of DSA and System Design Program. You can utilize these, in particular, to become accustomed to the caliber and style of our instruction!\n\nCONCLUSION\n\nThere has been an increase in the number of software developer jobs in the last few years. Many companies are now looking for full-stack software developer candidates and will even pay above-average amounts to hire them. This is because these developers have a wide range of skills and can work on a variety of projects.\n\nMany thanks"", 'aiModelVersion': '1'}",0.0
Chris Nash,3y,Is Git the final version control system we will see or will new ones appear which will make it obsolete? Are there already alternatives in development?,"There will be new SCMs, no doubt.

I love Git (and the fact that so many tools support it “out of the box”), but it does have some shortcomings. It’s great for source code, but it really eats up space with binary assets, since it keeps entire copies of each version.

Some of its operations are hard to do from a GUI. Sometimes you have to be a command-line cowboy to do things effectively.

Some of its commands are really, really cryptic. Some I don’t even try to understand, I just cross my fingers and let them rip!

(image source)

Something will come along to replace Git, or maybe Git will get better at binaries. And it hasn’t totally supplanted all other SCMs: SVN is still out there, as is Perforce and others. But Microsoft is abandoning TFS in favor of Git, so that’s something!

Git is good, but it’s not the end.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/4kfo5at8s9e1ywg7', 'title': 'Is Git the final version control system we will see or will new ones appear which will make it obsolete? Are there already alternatives in development?', 'score': {'original': 0.9968, 'ai': 0.0032}, 'blocks': [{'text': 'There will be new SCMs, no doubt.\n\nI love Git (and the fact that so many tools support it “out of the box”), but it does have some shortcomings. It’s great for source code, but it really eats up space with binary assets, since it keeps entire copies of each version.\n\nSome of its operations are hard to do from a GUI. Sometimes you have to be a command-line cowboy to do things effectively.\n\nSome of its commands are really, really cryptic. Some I don’t even try to understand, I just cross my fingers and let them rip!\n\n(image source)\n\nSomething will come along to replace Git, or maybe Git will get better at binaries. And it hasn’t totally supplanted all other SCMs: SVN is still out there, as is Perforce and others. But Microsoft is abandoning TFS in favor of Git, so that’s something!\n\nGit is good, but it’s not the end.', 'result': {'fake': 0.0032, 'real': 0.9968}, 'status': 'success'}], 'credits_used': 2, 'credits': 1983246, 'subscription': 0, 'content': 'There will be new SCMs, no doubt.\n\nI love Git (and the fact that so many tools support it “out of the box”), but it does have some shortcomings. It’s great for source code, but it really eats up space with binary assets, since it keeps entire copies of each version.\n\nSome of its operations are hard to do from a GUI. Sometimes you have to be a command-line cowboy to do things effectively.\n\nSome of its commands are really, really cryptic. Some I don’t even try to understand, I just cross my fingers and let them rip!\n\n(image source)\n\nSomething will come along to replace Git, or maybe Git will get better at binaries. And it hasn’t totally supplanted all other SCMs: SVN is still out there, as is Perforce and others. But Microsoft is abandoning TFS in favor of Git, so that’s something!\n\nGit is good, but it’s not the end.', 'aiModelVersion': '1'}",0.9968
Phillip Remaker,Updated 3y,Why were 80 and 443 chosen as the default HTTP and HTTPS ports?,"In Ye Olde Days, “well known port numbers” were assigned as odd numbers, a legacy of the days where the return port for a connection was the even number associated with the odd number.

RFC 1060
 predated the use of port 80. In fact, you find few even-numbered ports on that RFC. The even numbers were mostly skipped, and only odd-numbered ports assigned.

In those days, a new port request was made through Joyce Reynolds, by email or paper mail.

If you are developing 
a protocol or application that will require the use of a link, socket, port, protocol, etc., please contact the IANA to receive a number assignment. 
 
   Joyce K. Reynolds 
   Internet Assigned Numbers Authority 
   USC - Information Sciences Institute 
   4676 Admiralty Way 
   Marina del Rey, California  90292-6695 
 
   Phone: (213) 822-1511 
 
   Electronic mail: JKREY@ISI.EDU 

But not everyone applied for a port number and waited. Sometimes they just picked a number and went for it.

Port 80 appeared in the next assigned numbers RFC after RFC 1060, RFC 1340
, with Tim Berners-Lee as the contact. I speculate that port 80 was chosen because binary-adjacent port 79 was used for the finger protocol
, a service likely to be open and unblocked by router-based port-filtering access lists. The binary adjacency would make bitmask-based port filtering less painful. Unfortunately, I can’t find any source that supports this speculation.

EDIT: From Frequently asked questions
, Tim Berners-Lee sais: “It just happened that I designed HTTP and asked for the port number to be assigned for computers everywhere to be able to use for the web. So someone left my name and email against the entry at the time for the record.” So it seems like he requested the port assignment between 1990 and 1992 and happened to get port 80 assigned. Jon Postel
 or Joyce Reynolds
 would know for sure, but they can’t tell us.

HTTPS
 was developed after HTTP, and was driven by Mosaic Communications Corporation, who realized that commercial transactions on a web browser would not be acceptable over unencrypted links. It seems that Kipp Hickman
 at Mosaic Communications (which later became Netscape) unilaterally picked port 443 because it landed exactly in the middle of the block of unassigned ports 374–512 in RFC 1340. In this case, if any port numbers were assigned before his was approved, they probably wouldn’t overlap his choice.

legent-2        374/udp    Legent Corporation               [KXB] 
exec            512/tcp    remote process execution 

In both cases, it looks like the protocol authors sought forgiveness rather than permission for the port number assignment.

Personally, I wrote in to register cisco’s use of ports 1990 through 1999 sometime in 1993 or 1994, and was told that they were already in use, and that I could not use them; they assigned me new ports. I replied that since we had already thousands of deployed units, that we would just keep using them, thank you very much.

As a result, RFC 1700 - Assigned Numbers
 marks the overlapping port numbers with the ominous header

#PROBLEMS!=================================================== 

I think they were sufficiently cheesed off that they refused to list me as a contact for the “pirate ports,” and included them only as a courtesy, on an informational basis.

Looking at the current IANA database, this is still the case; there is not really a facility to deal with duplicate-assigned or overlapping ports. Maybe I should see if 25 years is enough time for them to get over their indignation and get them to fill in the rest of the missing information.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/4a3bqmv6tl92cgow', 'title': 'Why were 80 and 443 chosen as the default HTTP and HTTPS ports?', 'score': {'original': 0.50325, 'ai': 0.49675}, 'blocks': [{'text': 'In Ye Olde Days, “well known port numbers” were assigned as odd numbers, a legacy of the days where the return port for a connection was the even number associated with the odd number.\n\nRFC 1060\n predated the use of port 80. In fact, you find few even-numbered ports on that RFC. The even numbers were mostly skipped, and only odd-numbered ports assigned.\n\nIn those days, a new port request was made through Joyce Reynolds, by email or paper mail.\n\nIf you are developing\xa0\na protocol or application that will require the use of a link, socket, port, protocol, etc., please contact the IANA to receive a number assignment.\xa0\n\xa0\n   Joyce K. Reynolds\xa0\n   Internet Assigned Numbers Authority\xa0\n   USC - Information Sciences Institute\xa0\n   4676 Admiralty Way\xa0\n   Marina del Rey, California  90292-6695\xa0\n\xa0\n   Phone: (213) 822-1511\xa0\n\xa0\n   Electronic mail: JKREY@ISI.EDU\xa0\n\nBut not everyone applied for a port number and waited. Sometimes they just picked a number and went for it.\n\nPort 80 appeared in the next assigned numbers RFC after RFC 1060, RFC 1340\n, with Tim Berners-Lee as the contact. I speculate that port 80 was chosen because binary-adjacent port 79 was used for the finger protocol\n, a service likely to be open and unblocked by router-based port-filtering access lists. The binary adjacency would make bitmask-based port filtering less painful. Unfortunately, I can’t find any source that supports this speculation.\n\nEDIT: From Frequently asked questions\n, Tim Berners-Lee sais: “It just happened that I designed HTTP and asked for the port number to be assigned for computers everywhere to be able to use for the web. So someone left my name and email against the entry at the time for the record.” So it seems like he requested the port assignment between 1990 and 1992 and happened to get port 80 assigned. Jon Postel\n or Joyce Reynolds\n would know for sure, but they can’t tell us.\n\nHTTPS\n was developed after HTTP, and was driven by Mosaic Communications Corporation, who realized that commercial transactions on a web browser would not be acceptable over unencrypted links. It seems that Kipp Hickman\n at Mosaic Communications (which later became Netscape) unilaterally picked port 443 because it landed exactly in the middle of the block of unassigned ports 374–512 in RFC 1340. In this case, if any port numbers were assigned before his was approved, they probably wouldn’t overlap his choice.\n\nlegent-2        374/udp    Legent Corporation               [KXB]\xa0\nexec            512/tcp    remote process execution\xa0\n\nIn both cases, it looks like the protocol authors sought forgiveness rather than permission for the port number assignment.\n\nPersonally, I wrote in to register cisco’s use of ports 1990 through 1999 sometime in 1993 or 1994, and was told that they were already in use, and that I could not use them; they assigned me new ports. I replied that since we had already thousands of deployed units, that we', 'result': {'fake': 0.0143, 'real': 0.9857}, 'status': 'success'}, {'text': 'would just keep using them, thank you very much.\n\nAs a result, RFC 1700 - Assigned Numbers\n marks the overlapping port numbers with the ominous header\n\n#PROBLEMS!===================================================\xa0\n\nI think they were sufficiently cheesed off that they refused to list me as a contact for the “pirate ports,” and included them only as a courtesy, on an informational basis.\n\nLooking at the current IANA database, this is still the case; there is not really a facility to deal with duplicate-assigned or overlapping ports. Maybe I should see if 25 years is enough time for them to get over their indignation and get them to fill in the rest of the missing information.', 'result': {'fake': 0.991, 'real': 0.009}, 'status': 'success'}], 'credits_used': 6, 'credits': 1983240, 'subscription': 0, 'content': 'In Ye Olde Days, “well known port numbers” were assigned as odd numbers, a legacy of the days where the return port for a connection was the even number associated with the odd number.\n\nRFC 1060\n predated the use of port 80. In fact, you find few even-numbered ports on that RFC. The even numbers were mostly skipped, and only odd-numbered ports assigned.\n\nIn those days, a new port request was made through Joyce Reynolds, by email or paper mail.\n\nIf you are developing\xa0\na protocol or application that will require the use of a link, socket, port, protocol, etc., please contact the IANA to receive a number assignment.\xa0\n\xa0\n   Joyce K. Reynolds\xa0\n   Internet Assigned Numbers Authority\xa0\n   USC - Information Sciences Institute\xa0\n   4676 Admiralty Way\xa0\n   Marina del Rey, California  90292-6695\xa0\n\xa0\n   Phone: (213) 822-1511\xa0\n\xa0\n   Electronic mail: JKREY@ISI.EDU\xa0\n\nBut not everyone applied for a port number and waited. Sometimes they just picked a number and went for it.\n\nPort 80 appeared in the next assigned numbers RFC after RFC 1060, RFC 1340\n, with Tim Berners-Lee as the contact. I speculate that port 80 was chosen because binary-adjacent port 79 was used for the finger protocol\n, a service likely to be open and unblocked by router-based port-filtering access lists. The binary adjacency would make bitmask-based port filtering less painful. Unfortunately, I can’t find any source that supports this speculation.\n\nEDIT: From Frequently asked questions\n, Tim Berners-Lee sais: “It just happened that I designed HTTP and asked for the port number to be assigned for computers everywhere to be able to use for the web. So someone left my name and email against the entry at the time for the record.” So it seems like he requested the port assignment between 1990 and 1992 and happened to get port 80 assigned. Jon Postel\n or Joyce Reynolds\n would know for sure, but they can’t tell us.\n\nHTTPS\n was developed after HTTP, and was driven by Mosaic Communications Corporation, who realized that commercial transactions on a web browser would not be acceptable over unencrypted links. It seems that Kipp Hickman\n at Mosaic Communications (which later became Netscape) unilaterally picked port 443 because it landed exactly in the middle of the block of unassigned ports 374–512 in RFC 1340. In this case, if any port numbers were assigned before his was approved, they probably wouldn’t overlap his choice.\n\nlegent-2        374/udp    Legent Corporation               [KXB]\xa0\nexec            512/tcp    remote process execution\xa0\n\nIn both cases, it looks like the protocol authors sought forgiveness rather than permission for the port number assignment.\n\nPersonally, I wrote in to register cisco’s use of ports 1990 through 1999 sometime in 1993 or 1994, and was told that they were already in use, and that I could not use them; they assigned me new ports. I replied that since we had already thousands of deployed units, that we would just keep using them, thank you very much.\n\nAs a result, RFC 1700 - Assigned Numbers\n marks the overlapping port numbers with the ominous header\n\n#PROBLEMS!===================================================\xa0\n\nI think they were sufficiently cheesed off that they refused to list me as a contact for the “pirate ports,” and included them only as a courtesy, on an informational basis.\n\nLooking at the current IANA database, this is still the case; there is not really a facility to deal with duplicate-assigned or overlapping ports. Maybe I should see if 25 years is enough time for them to get over their indignation and get them to fill in the rest of the missing information.', 'aiModelVersion': '1'}",0.50325
Alon Amit,Updated 6y,How does Facebook decide the order of events on the news feed?,"Forget Facebook. How would you decide how to rank stories in someone's news feed?

Suppose I give you a random Facebook user - someone you've never met before, never heard of and know nothing about. Let's call her Alice. Alice has 300 friends (just below average) and likes 15 pages. At this moment she's opening Facebook on her browser, and you find that there are about 100 stories available for her - all the stuff her friends posted over the past 12 hours since she last checked in.

Further, suppose you have access to the entire history of Facebook's usage logs. All users, the stories they've seen, the ones they liked, commented on, shared, clicked, came back to, all that. You have Alice's own history, as well as everyone else's.

Oh, and you have about 50 milliseconds to make up your mind. Alice is not going to appreciate waiting for her news feed to load while you scratch your head.

What would you do?

(This is Lars. He actually knows what to do.)

Well, the candidate stories are not made equal, are they. Some are just text, some have photos, some have links to YouTube videos. Some are short, some long. Some have already been liked, commented on and shared around. Two of the stories are by Ewen, a bloke whose stories Alice tends to like. Another is by someone she has 50 common friends with. Still others are by her mother in law.

So, presumably, you would try to learn how all those different factors influence the likelihood of people to engage with the stories. Well, engagement may or may not be your goal - there's a separate question of what the goal needs to be, how you measure your success.

There's no shortage of data. Throughout history, how much more likely are stories with photos to get liked than stories without? How about stories by ""close friends""? Rather than the overall stats, how do things look like for Alice herself? For girls of Alice's age?

Whatever you learn from studying all those massive amounts of data, you'd want to distill that into a very simple set of rules. Something like ""For each story, take the number of likes Alice has ever made with the writer plus 1, add 7 if the thing has a video, multiply by 23 if it's a video of a cat, subtract 600 if the word 'panties' is mentioned, and then rank all the stories by that score."" Or maybe ""First check if it's a photo. If yes, follow these instructions, but if not, follow those other instructions"". Remember, you only have 50 milliseconds to decide, there's no time for deep pondering. Keep it simple.

The field of study people use to do such things used to be called ""statistics"", but nowadays it's more fashionable to call it ""machine learning
"". The goal of machine learning is to do what we just described: look at historical data, produce simple rules that can be used to maximize some value that you need to define, and continuously improve the rules and their parameters to get the most value for everyone.

Many modern systems for making user-facing decisions - what search results to show you, how to rank your feed stories or your news stories or your ads - many such systems follow the paradigm we just described. The technical details of producing the distilled formula from the data can get quite hairy, but the core idea is essentially just what you would have done if you had this data and a lot of time on your hands.

--

EDIT: the question was changed to ask about specific ML algorithms. Here's a paragraph on this, originally posted as a comment.

Almost any machine learning paradigm can be used here. It's very, very rare that a specific category of algorithms like ""decision trees"" is the only one suitable for a general task such as ranking stories. You can do engagement prediction using stochastic regression, boosting, gradient descent or whatnot and use the predicted scores for ranking. You can use SVMs. You can use random forests. I've seen each and every one of those employed at one point or other at Google or Facebook.

The choice of algorithm matters less than the architecture and infrastructure for moving the data around and getting the predictions out on time, the feature selection, feature engineering and quality controls, and a thousand other details. The ML paradigm matters but not as much as you may imagine.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/49p7ltmugey5bj3f', 'title': 'How does Facebook decide the order of events on the news feed?', 'score': {'original': 0.19885, 'ai': 0.80115}, 'blocks': [{'text': 'Forget Facebook. How would you decide how to rank stories in someone\'s news feed?\n\nSuppose I give you a random Facebook user - someone you\'ve never met before, never heard of and know nothing about. Let\'s call her Alice. Alice has 300 friends (just below average) and likes 15 pages. At this moment she\'s opening Facebook on her browser, and you find that there are about 100 stories available for her - all the stuff her friends posted over the past 12 hours since she last checked in.\n\nFurther, suppose you have access to the entire history of Facebook\'s usage logs. All users, the stories they\'ve seen, the ones they liked, commented on, shared, clicked, came back to, all that. You have Alice\'s own history, as well as everyone else\'s.\n\nOh, and you have about 50 milliseconds to make up your mind. Alice is not going to appreciate waiting for her news feed to load while you scratch your head.\n\nWhat would you do?\n\n(This is Lars. He actually knows what to do.)\n\nWell, the candidate stories are not made equal, are they. Some are just text, some have photos, some have links to YouTube videos. Some are short, some long. Some have already been liked, commented on and shared around. Two of the stories are by Ewen, a bloke whose stories Alice tends to like. Another is by someone she has 50 common friends with. Still others are by her mother in law.\n\nSo, presumably, you would try to learn how all those different factors influence the likelihood of people to engage with the stories. Well, engagement may or may not be your goal - there\'s a separate question of what the goal needs to be, how you measure your success.\n\nThere\'s no shortage of data. Throughout history, how much more likely are stories with photos to get liked than stories without? How about stories by ""close friends""? Rather than the overall stats, how do things look like for Alice herself? For girls of Alice\'s age?\n\nWhatever you learn from studying all those massive amounts of data, you\'d want to distill that into a very simple set of rules. Something like ""For each story, take the number of likes Alice has ever made with the writer plus 1, add 7 if the thing has a video, multiply by 23 if it\'s a video of a cat, subtract 600 if the word \'panties\' is mentioned, and then rank all the stories by that score."" Or maybe ""First check if it\'s a photo. If yes, follow these instructions, but if not, follow those other instructions"". Remember, you only have 50 milliseconds to decide, there\'s no time for deep pondering. Keep it simple.\n\nThe field of study people use to do such things used to be called ""statistics"", but nowadays it\'s more fashionable to call it ""machine learning\n"". The goal of machine learning is to do what we just described: look at historical data, produce simple rules that can be used to maximize some value that you need to define, and continuously improve the rules and their parameters to get the most value for', 'result': {'fake': 0.8903, 'real': 0.1097}, 'status': 'success'}, {'text': 'everyone.\n\nMany modern systems for making user-facing decisions - what search results to show you, how to rank your feed stories or your news stories or your ads - many such systems follow the paradigm we just described. The technical details of producing the distilled formula from the data can get quite hairy, but the core idea is essentially just what you would have done if you had this data and a lot of time on your hands.\n\n--\n\nEDIT: the question was changed to ask about specific ML algorithms. Here\'s a paragraph on this, originally posted as a comment.\n\nAlmost any machine learning paradigm can be used here. It\'s very, very rare that a specific category of algorithms like ""decision trees"" is the only one suitable for a general task such as ranking stories. You can do engagement prediction using stochastic regression, boosting, gradient descent or whatnot and use the predicted scores for ranking. You can use SVMs. You can use random forests. I\'ve seen each and every one of those employed at one point or other at Google or Facebook.\n\nThe choice of algorithm matters less than the architecture and infrastructure for moving the data around and getting the predictions out on time, the feature selection, feature engineering and quality controls, and a thousand other details. The ML paradigm matters but not as much as you may imagine.', 'result': {'fake': 0.7342, 'real': 0.2658}, 'status': 'success'}], 'credits_used': 8, 'credits': 1983232, 'subscription': 0, 'content': 'Forget Facebook. How would you decide how to rank stories in someone\'s news feed?\n\nSuppose I give you a random Facebook user - someone you\'ve never met before, never heard of and know nothing about. Let\'s call her Alice. Alice has 300 friends (just below average) and likes 15 pages. At this moment she\'s opening Facebook on her browser, and you find that there are about 100 stories available for her - all the stuff her friends posted over the past 12 hours since she last checked in.\n\nFurther, suppose you have access to the entire history of Facebook\'s usage logs. All users, the stories they\'ve seen, the ones they liked, commented on, shared, clicked, came back to, all that. You have Alice\'s own history, as well as everyone else\'s.\n\nOh, and you have about 50 milliseconds to make up your mind. Alice is not going to appreciate waiting for her news feed to load while you scratch your head.\n\nWhat would you do?\n\n(This is Lars. He actually knows what to do.)\n\nWell, the candidate stories are not made equal, are they. Some are just text, some have photos, some have links to YouTube videos. Some are short, some long. Some have already been liked, commented on and shared around. Two of the stories are by Ewen, a bloke whose stories Alice tends to like. Another is by someone she has 50 common friends with. Still others are by her mother in law.\n\nSo, presumably, you would try to learn how all those different factors influence the likelihood of people to engage with the stories. Well, engagement may or may not be your goal - there\'s a separate question of what the goal needs to be, how you measure your success.\n\nThere\'s no shortage of data. Throughout history, how much more likely are stories with photos to get liked than stories without? How about stories by ""close friends""? Rather than the overall stats, how do things look like for Alice herself? For girls of Alice\'s age?\n\nWhatever you learn from studying all those massive amounts of data, you\'d want to distill that into a very simple set of rules. Something like ""For each story, take the number of likes Alice has ever made with the writer plus 1, add 7 if the thing has a video, multiply by 23 if it\'s a video of a cat, subtract 600 if the word \'panties\' is mentioned, and then rank all the stories by that score."" Or maybe ""First check if it\'s a photo. If yes, follow these instructions, but if not, follow those other instructions"". Remember, you only have 50 milliseconds to decide, there\'s no time for deep pondering. Keep it simple.\n\nThe field of study people use to do such things used to be called ""statistics"", but nowadays it\'s more fashionable to call it ""machine learning\n"". The goal of machine learning is to do what we just described: look at historical data, produce simple rules that can be used to maximize some value that you need to define, and continuously improve the rules and their parameters to get the most value for everyone.\n\nMany modern systems for making user-facing decisions - what search results to show you, how to rank your feed stories or your news stories or your ads - many such systems follow the paradigm we just described. The technical details of producing the distilled formula from the data can get quite hairy, but the core idea is essentially just what you would have done if you had this data and a lot of time on your hands.\n\n--\n\nEDIT: the question was changed to ask about specific ML algorithms. Here\'s a paragraph on this, originally posted as a comment.\n\nAlmost any machine learning paradigm can be used here. It\'s very, very rare that a specific category of algorithms like ""decision trees"" is the only one suitable for a general task such as ranking stories. You can do engagement prediction using stochastic regression, boosting, gradient descent or whatnot and use the predicted scores for ranking. You can use SVMs. You can use random forests. I\'ve seen each and every one of those employed at one point or other at Google or Facebook.\n\nThe choice of algorithm matters less than the architecture and infrastructure for moving the data around and getting the predictions out on time, the feature selection, feature engineering and quality controls, and a thousand other details. The ML paradigm matters but not as much as you may imagine.', 'aiModelVersion': '1'}",0.19885
Steven Grimm,10y,What steps should I take to be an awesome web developer without doing competitive programming?,"You're in luck: the skill set of a top-notch web developer has almost nothing in common with the skill set of a top-notch competitive programmer. That's not to say a person can't excel at both -- some of my former colleagues at Facebook, for example, fit that description -- but one doesn't lead to the other in any way.

A top-notch competitive programmer needs to have encyclopedic knowledge of algorithms and data structures and the ability to optimize their work for very fast implementation time and for a form of ""correctness"" that is purely technical and completely deterministic. A competitive programmer implements a functioning solution to a (hopefully) precisely-specified problem and is then done with that problem, and works either solo or with a fixed and very small number of teammates.

A top-notch web developer needs to have encyclopedic knowledge of browser behavior and server-side technologies. There are implementation time constraints for a web developer, but they are typically measured in days rather than hours, meaning different development styles are optimal. ""Correctness"" is measured by customer acceptance rather than by matching expected outputs for a series of predetermined test inputs, and the specifications are often vague or contradictory, meaning the web developer's job also involves intuiting what the customer probably actually wants. Most web developers work in teams whose members can come and go over the course of a single project, and their projects are long-lived and need to be implemented with maintainability and extensibility in mind.

There's some synergy between the two skill sets, but for the most part, web development very rarely requires the feats of algorithmic heroism that typify competitive programming, and competitive programming very rarely requires the ability to make stuff work properly in IE6.","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/l79ufdetanp6q20r', 'title': 'What steps should I take to be an awesome web developer without doing competitive programming?', 'score': {'original': 0.9989, 'ai': 0.0011}, 'blocks': [{'text': 'You\'re in luck: the skill set of a top-notch web developer has almost nothing in common with the skill set of a top-notch competitive programmer. That\'s not to say a person can\'t excel at both -- some of my former colleagues at Facebook, for example, fit that description -- but one doesn\'t lead to the other in any way.\n\nA top-notch competitive programmer needs to have encyclopedic knowledge of algorithms and data structures and the ability to optimize their work for very fast implementation time and for a form of ""correctness"" that is purely technical and completely deterministic. A competitive programmer implements a functioning solution to a (hopefully) precisely-specified problem and is then done with that problem, and works either solo or with a fixed and very small number of teammates.\n\nA top-notch web developer needs to have encyclopedic knowledge of browser behavior and server-side technologies. There are implementation time constraints for a web developer, but they are typically measured in days rather than hours, meaning different development styles are optimal. ""Correctness"" is measured by customer acceptance rather than by matching expected outputs for a series of predetermined test inputs, and the specifications are often vague or contradictory, meaning the web developer\'s job also involves intuiting what the customer probably actually wants. Most web developers work in teams whose members can come and go over the course of a single project, and their projects are long-lived and need to be implemented with maintainability and extensibility in mind.\n\nThere\'s some synergy between the two skill sets, but for the most part, web development very rarely requires the feats of algorithmic heroism that typify competitive programming, and competitive programming very rarely requires the ability to make stuff work properly in IE6.', 'result': {'fake': 0.0015, 'real': 0.9985}, 'status': 'success'}], 'credits_used': 3, 'credits': 1983229, 'subscription': 0, 'content': 'You\'re in luck: the skill set of a top-notch web developer has almost nothing in common with the skill set of a top-notch competitive programmer. That\'s not to say a person can\'t excel at both -- some of my former colleagues at Facebook, for example, fit that description -- but one doesn\'t lead to the other in any way.\n\nA top-notch competitive programmer needs to have encyclopedic knowledge of algorithms and data structures and the ability to optimize their work for very fast implementation time and for a form of ""correctness"" that is purely technical and completely deterministic. A competitive programmer implements a functioning solution to a (hopefully) precisely-specified problem and is then done with that problem, and works either solo or with a fixed and very small number of teammates.\n\nA top-notch web developer needs to have encyclopedic knowledge of browser behavior and server-side technologies. There are implementation time constraints for a web developer, but they are typically measured in days rather than hours, meaning different development styles are optimal. ""Correctness"" is measured by customer acceptance rather than by matching expected outputs for a series of predetermined test inputs, and the specifications are often vague or contradictory, meaning the web developer\'s job also involves intuiting what the customer probably actually wants. Most web developers work in teams whose members can come and go over the course of a single project, and their projects are long-lived and need to be implemented with maintainability and extensibility in mind.\n\nThere\'s some synergy between the two skill sets, but for the most part, web development very rarely requires the feats of algorithmic heroism that typify competitive programming, and competitive programming very rarely requires the ability to make stuff work properly in IE6.', 'aiModelVersion': '1'}",0.9989
Rohina Yasar,1y,"For a full-stack developer, what languages are required?","Full-stack developers are among the most well-known specialists in the industry of web development. Full stack developers combine front-end and back-end web development talents, covering a wide range of duties in creating and maintaining a digital entity (e.g., an app, a web page). The role requires adaptability, imaginative thinking, technical programming skills, and high-level customer communication.

The following are the responsibilities of a full-stack developer:

Changes to previously created programs are tested.
Upgrading and fine-tuning software and apps once they have been deployed.
Throughout the development phase, collecting input for site management.

The full-stack developer position is dependent on a wide range of talents, many of which require at least some proficiency in various essential programming languages. That being stated, prospective full-stack developers should acquire the following skills and languages:

Python is a beneficial programming language for individuals interested in full-stack development since it is one of the top programming languages for current back-end web development.
JavaScript is another consistently valued coding expertise in full-stack development, ranking second only to Python among Stack Overflow's polled developers.
HTML (HyperText Markup Language) is a popular coding language in web development. As a markup language, it relates to how web pages are connected together and are largely used to instruct a web browser on how to display the contents of a web page via tags.
CSS (Cascading Style Sheets), along with JavaScript and HTML, is one of the most often used coding languages in front-end development, making it an asset to the full-stack job. CSS, especially the color- and style-based code applied to HTML structural components, is largely used to create an aesthetically attractive design.
SQL (Structured Query Language) is a database language that is widely used in back-end programming. The language is primarily used to maintain and update records, as well as to access and modify databases.
Rust is also a popular programming language for web development, scoring as the ""most favored"" language in Stack Overflow's 2020 survey. Rust is widely used to increase the speed, parallelism, and inherent memory safety of a web page, and it is also prized for its versatility.

The list goes on...

Being able to handle different languages and skills is very important in full-stack development. Hence, joining a course is the easiest way to build expertise.

I’ll list a few popular full-stack development courses below to develop your skills in these languages:

Udemy

Participation in live classes and online peer networks led by certified specialists employed by universities may be advantageous in a variety of circumstances. If they wish to be considered for the post, candidates should be able to demonstrate a working knowledge of data structures, algorithms, and their associated implementations.

If all you want to do is enhance your talents, this institute may be pricey for what it offers because all it offers is skill development. On the other side, they have fewer prospects for advancement in their professional careers and gaining employment experience.

Learnbay

Learnbay provides the most comprehensive Full-Stack Web Development Program available anywhere, including Bangalore. A large variety of demanding activities are included in the Full-Stack Software Development Program.

Full Stack Software Development Program

Weekday Batches: 8 Months
Weekend Batches: 9 Months

Learnbay includes a number of unique features that will assist you in learning in-depth and landing a job. Here are a few examples:

Learnbay's live, interactive lessons may assist students who are more motivated. If you try to educate yourself on data structures and algorithms through a video course, you will not learn anything valuable. Individualized instruction will be offered, and every attempt will be made to make classroom learning as simple as possible.
The theoretical component makes up around 30% of their classes, with the practical application and assignment components making up the remaining 70%.
Learnbay not only offers an excellent support service but also a large course library covering disciplines such as artificial intelligence, machine learning, data science, and others.
Students will learn all the fundamentals of DSA and system design in addition to software development, algorithm analysis, and space and temporal complexity. In the Full Stack Software Development Program, there are additional Elite Domains for Full Stack, Product Management, Web 3.0 Developer, and DevOps & Clouds that you can specialize in and master domain-specific industrial projects in.

Importance of Elite Domains:

You can widen your knowledge while honing your skills by looking into subjects that are relevant to the field in which you are most skilled. DSA is no exception. Some companies offer their specialists access to a large selection of premium domain alternatives from which they can select. This gives professionals the opportunity to advance their careers in a particular industry and increase their skill sets.

Your efforts will be evaluated depending on the projects you work on that are based on the present situation of the globe. Throughout your time at this institution, you will have the chance to make major contributions to more than 12 current real-world projects.

Here is a list of some of the many different projects you can work on:

Video Conferencing
Application
Blog Site
VR-Based Application
Travel Booking Application and so on.

Final thought

Being well-versed in multiple programming languages can help you so much in developing your career. As a result, you’ll have better remuneration as well. Developing expertise in such languages is made easier through attending reputed full-stack development courses. In my opinion, Learnbay offers the best full-stack development courses in Bangalore, which can be easily accessed from anywhere in the world.

I hope my answer helped you.

Best wishes!","{'success': True, 'disclaimer': 'If you are trying to scan content that is under 50 words in length, you will run into AI accuracy issues.', 'public_link': 'https://app.originality.ai/share/reynqxd8jia79ukm', 'title': 'For a full-stack developer, what languages are required?', 'score': {'original': 0, 'ai': 1}, 'blocks': [{'text': 'Full-stack developers are among the most well-known specialists in the industry of web development. Full stack developers combine front-end and back-end web development talents, covering a wide range of duties in creating and maintaining a digital entity (e.g., an app, a web page). The role requires adaptability, imaginative thinking, technical programming skills, and high-level customer communication.\n\nThe following are the responsibilities of a full-stack developer:\n\nChanges to previously created programs are tested.\nUpgrading and fine-tuning software and apps once they have been deployed.\nThroughout the development phase, collecting input for site management.\n\nThe full-stack developer position is dependent on a wide range of talents, many of which require at least some proficiency in various essential programming languages. That being stated, prospective full-stack developers should acquire the following skills and languages:\n\nPython is a beneficial programming language for individuals interested in full-stack development since it is one of the top programming languages for current back-end web development.\nJavaScript is another consistently valued coding expertise in full-stack development, ranking second only to Python among Stack Overflow\'s polled developers.\nHTML (HyperText Markup Language) is a popular coding language in web development. As a markup language, it relates to how web pages are connected together and are largely used to instruct a web browser on how to display the contents of a web page via tags.\nCSS (Cascading Style Sheets), along with JavaScript and HTML, is one of the most often used coding languages in front-end development, making it an asset to the full-stack job. CSS, especially the color- and style-based code applied to HTML structural components, is largely used to create an aesthetically attractive design.\nSQL (Structured Query Language) is a database language that is widely used in back-end programming. The language is primarily used to maintain and update records, as well as to access and modify databases.\nRust is also a popular programming language for web development, scoring as the ""most favored"" language in Stack Overflow\'s 2020 survey. Rust is widely used to increase the speed, parallelism, and inherent memory safety of a web page, and it is also prized for its versatility.\n\nThe list goes on...\n\nBeing able to handle different languages and skills is very important in full-stack development. Hence, joining a course is the easiest way to build expertise.\n\nI’ll list a few popular full-stack development courses below to develop your skills in these languages:\n\nUdemy\n\nParticipation in live classes and online peer networks led by certified specialists employed by universities may be advantageous in a variety of circumstances. If they wish to be considered for the post, candidates should be able to demonstrate a working knowledge of data structures, algorithms, and their associated implementations.\n\nIf all you want to do is enhance your talents, this institute may be pricey for what it offers because all it offers is skill development. On the other side, they have fewer prospects for advancement in their professional careers and gaining employment experience.\n\nLearnbay\n\nLearnbay provides the most comprehensive Full-Stack Web Development Program available anywhere, including Bangalore. A large variety of demanding activities are included in the Full-Stack Software Development Program.\n\nFull Stack Software Development Program\n\nWeekday Batches: 8 Months\nWeekend Batches: 9 Months\n\nLearnbay includes a number', 'result': {'fake': 1, 'real': 0}, 'status': 'success'}, {'text': ""of unique features that will assist you in learning in-depth and landing a job. Here are a few examples:\n\nLearnbay's live, interactive lessons may assist students who are more motivated. If you try to educate yourself on data structures and algorithms through a video course, you will not learn anything valuable. Individualized instruction will be offered, and every attempt will be made to make classroom learning as simple as possible.\nThe theoretical component makes up around 30% of their classes, with the practical application and assignment components making up the remaining 70%.\nLearnbay not only offers an excellent support service but also a large course library covering disciplines such as artificial intelligence, machine learning, data science, and others.\nStudents will learn all the fundamentals of DSA and system design in addition to software development, algorithm analysis, and space and temporal complexity. In the Full Stack Software Development Program, there are additional Elite Domains for Full Stack, Product Management, Web 3.0 Developer, and DevOps & Clouds that you can specialize in and master domain-specific industrial projects in.\n\nImportance of Elite Domains:\n\nYou can widen your knowledge while honing your skills by looking into subjects that are relevant to the field in which you are most skilled. DSA is no exception. Some companies offer their specialists access to a large selection of premium domain alternatives from which they can select. This gives professionals the opportunity to advance their careers in a particular industry and increase their skill sets.\n\nYour efforts will be evaluated depending on the projects you work on that are based on the present situation of the globe. Throughout your time at this institution, you will have the chance to make major contributions to more than 12 current real-world projects.\n\nHere is a list of some of the many different projects you can work on:\n\nVideo Conferencing\nApplication\nBlog Site\nVR-Based Application\nTravel Booking Application and so on.\n\nFinal thought\n\nBeing well-versed in multiple programming languages can help you so much in developing your career. As a result, you’ll have better remuneration as well. Developing expertise in such languages is made easier through attending reputed full-stack development courses. In my opinion, Learnbay offers the best full-stack development courses in Bangalore, which can be easily accessed from anywhere in the world.\n\nI hope my answer helped you.\n\nBest wishes!"", 'result': {'fake': 1, 'real': 0}, 'status': 'success'}], 'credits_used': 10, 'credits': 1983219, 'subscription': 0, 'content': 'Full-stack developers are among the most well-known specialists in the industry of web development. Full stack developers combine front-end and back-end web development talents, covering a wide range of duties in creating and maintaining a digital entity (e.g., an app, a web page). The role requires adaptability, imaginative thinking, technical programming skills, and high-level customer communication.\n\nThe following are the responsibilities of a full-stack developer:\n\nChanges to previously created programs are tested.\nUpgrading and fine-tuning software and apps once they have been deployed.\nThroughout the development phase, collecting input for site management.\n\nThe full-stack developer position is dependent on a wide range of talents, many of which require at least some proficiency in various essential programming languages. That being stated, prospective full-stack developers should acquire the following skills and languages:\n\nPython is a beneficial programming language for individuals interested in full-stack development since it is one of the top programming languages for current back-end web development.\nJavaScript is another consistently valued coding expertise in full-stack development, ranking second only to Python among Stack Overflow\'s polled developers.\nHTML (HyperText Markup Language) is a popular coding language in web development. As a markup language, it relates to how web pages are connected together and are largely used to instruct a web browser on how to display the contents of a web page via tags.\nCSS (Cascading Style Sheets), along with JavaScript and HTML, is one of the most often used coding languages in front-end development, making it an asset to the full-stack job. CSS, especially the color- and style-based code applied to HTML structural components, is largely used to create an aesthetically attractive design.\nSQL (Structured Query Language) is a database language that is widely used in back-end programming. The language is primarily used to maintain and update records, as well as to access and modify databases.\nRust is also a popular programming language for web development, scoring as the ""most favored"" language in Stack Overflow\'s 2020 survey. Rust is widely used to increase the speed, parallelism, and inherent memory safety of a web page, and it is also prized for its versatility.\n\nThe list goes on...\n\nBeing able to handle different languages and skills is very important in full-stack development. Hence, joining a course is the easiest way to build expertise.\n\nI’ll list a few popular full-stack development courses below to develop your skills in these languages:\n\nUdemy\n\nParticipation in live classes and online peer networks led by certified specialists employed by universities may be advantageous in a variety of circumstances. If they wish to be considered for the post, candidates should be able to demonstrate a working knowledge of data structures, algorithms, and their associated implementations.\n\nIf all you want to do is enhance your talents, this institute may be pricey for what it offers because all it offers is skill development. On the other side, they have fewer prospects for advancement in their professional careers and gaining employment experience.\n\nLearnbay\n\nLearnbay provides the most comprehensive Full-Stack Web Development Program available anywhere, including Bangalore. A large variety of demanding activities are included in the Full-Stack Software Development Program.\n\nFull Stack Software Development Program\n\nWeekday Batches: 8 Months\nWeekend Batches: 9 Months\n\nLearnbay includes a number of unique features that will assist you in learning in-depth and landing a job. Here are a few examples:\n\nLearnbay\'s live, interactive lessons may assist students who are more motivated. If you try to educate yourself on data structures and algorithms through a video course, you will not learn anything valuable. Individualized instruction will be offered, and every attempt will be made to make classroom learning as simple as possible.\nThe theoretical component makes up around 30% of their classes, with the practical application and assignment components making up the remaining 70%.\nLearnbay not only offers an excellent support service but also a large course library covering disciplines such as artificial intelligence, machine learning, data science, and others.\nStudents will learn all the fundamentals of DSA and system design in addition to software development, algorithm analysis, and space and temporal complexity. In the Full Stack Software Development Program, there are additional Elite Domains for Full Stack, Product Management, Web 3.0 Developer, and DevOps & Clouds that you can specialize in and master domain-specific industrial projects in.\n\nImportance of Elite Domains:\n\nYou can widen your knowledge while honing your skills by looking into subjects that are relevant to the field in which you are most skilled. DSA is no exception. Some companies offer their specialists access to a large selection of premium domain alternatives from which they can select. This gives professionals the opportunity to advance their careers in a particular industry and increase their skill sets.\n\nYour efforts will be evaluated depending on the projects you work on that are based on the present situation of the globe. Throughout your time at this institution, you will have the chance to make major contributions to more than 12 current real-world projects.\n\nHere is a list of some of the many different projects you can work on:\n\nVideo Conferencing\nApplication\nBlog Site\nVR-Based Application\nTravel Booking Application and so on.\n\nFinal thought\n\nBeing well-versed in multiple programming languages can help you so much in developing your career. As a result, you’ll have better remuneration as well. Developing expertise in such languages is made easier through attending reputed full-stack development courses. In my opinion, Learnbay offers the best full-stack development courses in Bangalore, which can be easily accessed from anywhere in the world.\n\nI hope my answer helped you.\n\nBest wishes!', 'aiModelVersion': '1'}",0.0
